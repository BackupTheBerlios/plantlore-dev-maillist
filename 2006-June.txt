From lada at berlios.de  Thu Jun  1 00:32:30 2006
From: lada at berlios.de (lada at berlios.de)
Date: Thu, 1 Jun 2006 00:32:30 +0200
Subject: [Plantlore-dev] r414 - trunk/src/net/sf/plantlore/client/history
Message-ID: <200605312232.k4VMWU1G032277@sheep.berlios.de>

Author: lada
Date: 2006-06-01 00:32:29 +0200 (Thu, 01 Jun 2006)
New Revision: 414

Modified:
   trunk/src/net/sf/plantlore/client/history/History.java
Log:
Implement undo for History-friendly occurrence deletion.

Modified: trunk/src/net/sf/plantlore/client/history/History.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/History.java	2006-05-31 21:46:57 UTC (rev 413)
+++ trunk/src/net/sf/plantlore/client/history/History.java	2006-05-31 22:32:29 UTC (rev 414)
@@ -176,7 +176,7 @@
        occurrence = ((Occurrence)objHis[0]);
        
        //FIXME: bude nutno dovyhledavat autory
-       setNameAuthor(getAllAuthors(occurrence));
+       setNameAuthor(getAllNameOfAuthors(getAllAuthors(occurrence, 0)));
        setNamePlant(occurrence.getPlant().getTaxon());       
        setLocation(occurrence.getHabitat().getNearestVillage().getName());
        
@@ -476,7 +476,19 @@
              occurrence.setDeleted(isDelete);              
              //Add to list of changed Record
              if (!editObjectList.contains((Record)occurrence))                 
-                editObjectList.add((Record)occurrence);             
+                editObjectList.add((Record)occurrence);       
+             //pripsat PRI obnovani z DELETE obnoveni i autoru (autorOcc)
+             isDelete = (isDelete == 1) ? 2 : isDelete;
+             Object[] objects = getAllAuthors(occurrence, 2-isDelete);
+             int countResult = objects.length;               
+             for (int i=0; i<countResult; i++ ) {                    							
+                Object[] autOcc = (Object[])objects[i];          
+                AuthorOccurrence authorOccurrence = (AuthorOccurrence)autOcc[0];
+                authorOccurrence.setDeleted(isDelete);
+                 //Add to list of changed Record
+                 if (!editObjectList.contains((Record)authorOccurrence))                 
+                    editObjectList.add((Record)authorOccurrence);                 
+            }                                     
         } else if (tableName.equals(PlantloreConstants.ENTITY_AUTHOROCCURRENCE)) {
              Object[] object = searchObject("AuthorOccurrence",recordId);  
              AuthorOccurrence authorOccurrence = (AuthorOccurrence)object[0];
@@ -1201,17 +1213,29 @@
     
     /*
      * Funkce, ktera mi dohleda vsechny autory ke konkretnimu nalezu
+     * isDlete - rekne, zda pozadujeme vsechny aktivni nebo neaktivni zaznamy
      */
-    public String getAllAuthors(Occurrence occurrence) {
-        String allAuthor = "";
-        SelectQuery query = null;
+    public Object[] getAllAuthors(Occurrence occurrence, int isDelete) {        
         
-        int resultId = 0;
-        
+        SelectQuery query = null;        
+        int resultId = 0;        
         try {
             query = database.createQuery(AuthorOccurrence.class);
             query.addRestriction(PlantloreConstants.RESTR_EQ, AuthorOccurrence.OCCURRENCE, null, occurrence , null);
-            query.addRestriction(PlantloreConstants.RESTR_EQ, AuthorOccurrence.DELETED, null, 0 , null);
+            if (isDelete == 1) {
+                query.addRestriction(PlantloreConstants.RESTR_EQ, AuthorOccurrence.DELETED, null, 1 , null);
+            } else {
+                Object[] args = new Object[8];
+                args[0] = PlantloreConstants.RESTR_EQ;
+                args[1] = AuthorOccurrence.DELETED;
+                args[2] = null;
+                args[3] = 0;                    
+                args[4] = PlantloreConstants.RESTR_EQ;
+                args[5] = AuthorOccurrence.DELETED;
+                args[6] = null;
+                args[7] = 2;
+                query.addOrRestriction(args);                
+            }
             resultId = database.executeQuery(query);
         } catch(RemoteException e) {
             System.err.println("RemoteException, getAllAuthors() - AuthorOccurrence, createQuery");
@@ -1222,13 +1246,29 @@
        
        try {
             int to = database.getNumRows(resultId); 
-            objects = database.more(resultId, 0, to-1);  
+            if (to > 0)
+                objects = database.more(resultId, 0, to-1);  
         } catch (RemoteException ex) {
             ex.printStackTrace();
         } catch (DBLayerException ex) {
             ex.printStackTrace();
-        }  
-        
+        }         
+       //close session
+        try {
+            database.closeQuery(query);
+        } catch(RemoteException e) {
+            System.err.println("RemoteException, getAllAuthors() - AuthorOccurrence, createQuery");
+        }         
+       return objects;
+    }
+    
+    /*
+     * Funkce, ktera vrati jmena autoru pro dany nalez
+     */
+    public String getAllNameOfAuthors(Object[] objects) {
+        if (objects == null)
+            return "";
+        String allAuthor = "";
         int countResult = objects.length;  
         logger.debug("Authos of occurrence. Results retrieved. Count: "+ countResult);        
         // Cast the results to the AuthorOccurrence objects
@@ -1237,14 +1277,7 @@
             String author = ((AuthorOccurrence)object[0]).getAuthor().getWholeName();
             String role = ((AuthorOccurrence)object[0]).getRole();
             allAuthor = allAuthor + author + " (" + L10n.getString(PlantloreConstants.ENTITY_AUTHOR + "." + Author.ROLE + "." +role) + ")" + ", ";
-        }           
-       //close session
-        try {
-            database.closeQuery(query);
-        } catch(RemoteException e) {
-            System.err.println("RemoteException, getAllAuthors() - AuthorOccurrence, createQuery");
-        }
-        
+        }                        
        return allAuthor;     	    
     }
     
@@ -1469,7 +1502,7 @@
               Occurrence occurrence = historyChange.getOccurrence();             
               detailsMessage = L10n.getString("History.DetailsOccurrence") + "\n\n";
               detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_OCCURRENCE + "."+ Occurrence.PLANT) + ": "+ occurrence.getPlant().getTaxon()+"\n";
-              detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_AUTHOROCCURRENCE+"."+ AuthorOccurrence.AUTHOR) + ": " +getAllAuthors(occurrence) + "\n";
+              detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_AUTHOROCCURRENCE+"."+ AuthorOccurrence.AUTHOR) + ": " +getAllNameOfAuthors(getAllAuthors(occurrence, 0)) + "\n";
               detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_OCCURRENCE +"."+ Occurrence.ISODATETIMEBEGIN) + ": " + occurrence.getIsoDateTimeBegin() +"\n";
               detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_HABITAT +"."+ Habitat.NEARESTVILLAGE) + ": "+ occurrence.getHabitat().getNearestVillage().getName() + "\n";
               detailsMessage = detailsMessage + L10n.getString(PlantloreConstants.ENTITY_HABITAT +"."+ Habitat.DESCRIPTION) + ": "+ occurrence.getHabitat().getDescription() + "\n";



From fraktalek at berlios.de  Thu Jun  1 00:59:57 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Thu, 1 Jun 2006 00:59:57 +0200
Subject: [Plantlore-dev] r415 - in trunk/src/net/sf/plantlore: client common l10n
Message-ID: <200605312259.k4VMxvbf010668@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-01 00:59:48 +0200 (Thu, 01 Jun 2006)
New Revision: 415

Modified:
   trunk/src/net/sf/plantlore/client/AddEditView.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/AppCoreView.form
   trunk/src/net/sf/plantlore/client/AppCoreView.java
   trunk/src/net/sf/plantlore/client/SearchView.java
   trunk/src/net/sf/plantlore/common/DBLayerUtils.java
   trunk/src/net/sf/plantlore/common/ProgressBar.form
   trunk/src/net/sf/plantlore/common/ProgressBar.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
Added default buttons for Add, Edit, Search.
Fixed a minor bug in ProgressBar (the WAITING_CURSOR wasn't changed back to defaultCursor() after a thrown exception and getTask().stop()).
A few queries had to be fixed a little to conform to the new history-friendly delete.

Added a new file menu Occurrences for Add,Edit,Search,Delete,History,Scheda,Refresh and assigned accelerators to these actions (Ctrl+X for Scheda doesn't work yet, I don't know why, Ctrl+A for Add also stops working after you click into the Overview table :-/ will try to fix that tomorrow...).

Also exceptionHandlers for Delete,Refresh and Scheda Tasks missed task stopping, fixed now.



Modified: trunk/src/net/sf/plantlore/client/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/client/AddEditView.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -62,6 +62,8 @@
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
         
+        getRootPane().setDefaultButton(okButton);
+        
         setLabels();
         
         //if (inEditMode)

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -256,6 +256,7 @@
         view.setSelectedRowListener(new OverviewSelectionListener());
         view.overview.addMouseListener(new OverviewMouseListener());
         view.refreshButton.setAction(refreshAction);
+        view.occurrencesRefresh.setAction(refreshAction);
         
         view.overview.addKeyListener(new OverviewKeyListener());
 
@@ -534,7 +535,7 @@
                 putValue(NAME, L10n.getString("Overview.Add"));
             putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Add24.gif"));
             putValue(SHORT_DESCRIPTION, L10n.getString("Overview.AddTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));
+            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));
             //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Add"));            
         } 
 
@@ -576,6 +577,8 @@
                 putValue(NAME, L10n.getString("Overview.Delete"));
             putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Delete24.gif"));
             putValue(SHORT_DESCRIPTION, L10n.getString("Overview.DeleteTT"));
+            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0));
+
             //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Delete"));            
         } 
 
@@ -603,12 +606,14 @@
                                 DBLayerException e = (DBLayerException)ex;
                                 JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
                                 logger.error(e+": "+e.getErrorInfo());
+                                getTask().stop();
                                 return;
                             }
                             if (ex instanceof RemoteException) {
                                 RemoteException e = (RemoteException)ex;
                                 JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
                                 logger.error(e);
+                                getTask().stop();
                                 return;
                             }
                             JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
@@ -704,6 +709,7 @@
         public SchedaAction() {
             putValue(NAME, L10n.getString("Overview.Scheda"));
             putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SchedaTT"));
+            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));
 //            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Scheda"));            
             putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/ComposeMail24.gif"));
         } 
@@ -762,6 +768,7 @@
                                 JOptionPane.showMessageDialog(view.getParent(), L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);            
                             }
                         });
+                        getTask().stop();
                     }                    
                     public void afterStopped(final Object value) {
                         SwingUtilities.invokeLater(new Runnable() {
@@ -873,6 +880,7 @@
                 putValue(NAME, L10n.getString("Overview.History"));
             putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/History24.gif"));
             putValue(SHORT_DESCRIPTION, L10n.getString("Overview.HistoryTT"));
+//            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));
             //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.History"));                        
         }
         
@@ -1159,6 +1167,7 @@
                 public void exceptionHandler(Exception ex) {   
                     //FIXME
                     ex.printStackTrace();
+                    getTask().stop();
                 }                    
             };
             progressBar.setTitle(L10n.getString("Overview.Refresh.ProgressTitle"));

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-05-31 22:59:48 UTC (rev 415)
@@ -6,7 +6,12 @@
       <SubComponents>
         <Menu class="javax.swing.JMenu" name="fileMenu">
           <Properties>
-            <Property name="text" type="java.lang.String" value="File"/>
+            <Property name="mnemonic" type="int" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
+              <Connection code="L10n.getMnemonic(&quot;Overview.MenuFile&quot;)" type="code"/>
+            </Property>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Overview.MenuFile" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
           </Properties>
           <AuxValues>
             <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
@@ -52,7 +57,12 @@
         </Menu>
         <Menu class="javax.swing.JMenu" name="dataMenu">
           <Properties>
-            <Property name="text" type="java.lang.String" value="Data"/>
+            <Property name="mnemonic" type="int" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
+              <Connection code="L10n.getMnemonic(&quot;Overview.MenuData&quot;)" type="code"/>
+            </Property>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Overview.MenuData" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
           </Properties>
           <AuxValues>
             <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
@@ -100,9 +110,67 @@
             </MenuItem>
           </SubComponents>
         </Menu>
+        <Menu class="javax.swing.JMenu" name="occurrencesMenu">
+          <Properties>
+            <Property name="mnemonic" type="int" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
+              <Connection code="L10n.getMnemonic(&quot;Overview.MenuOccurrences&quot;)" type="code"/>
+            </Property>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Overview.MenuOccurrences" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <Events>
+            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="occurrencesMenuActionPerformed"/>
+          </Events>
+          <SubComponents>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesAdd">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesEdit">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesDelete">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesScheda">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesHistory">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesSearch">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+            </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="occurrencesRefresh">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+              <AuxValues>
+                <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+              </AuxValues>
+            </MenuItem>
+          </SubComponents>
+        </Menu>
         <Menu class="javax.swing.JMenu" name="helpMenu">
           <Properties>
-            <Property name="text" type="java.lang.String" value="Help"/>
+            <Property name="mnemonic" type="int" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
+              <Connection code="L10n.getMnemonic(&quot;Overview.MenuHelp&quot;)" type="code"/>
+            </Property>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Overview.MenuHelp" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
           </Properties>
           <AuxValues>
             <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
@@ -406,7 +474,7 @@
         </DimensionLayout>
         <DimensionLayout dim="1">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="overviewScrollPane" alignment="1" pref="496" max="32767" attributes="0"/>
+              <Component id="overviewScrollPane" alignment="1" pref="424" max="32767" attributes="0"/>
           </Group>
         </DimensionLayout>
       </Layout>

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -96,6 +96,14 @@
         dataMetadata = new javax.swing.JMenuItem();
         dataUser = new javax.swing.JMenuItem();
         dataWholeHistory = new javax.swing.JMenuItem();
+        occurrencesMenu = new javax.swing.JMenu();
+        occurrencesAdd = new javax.swing.JMenuItem();
+        occurrencesEdit = new javax.swing.JMenuItem();
+        occurrencesDelete = new javax.swing.JMenuItem();
+        occurrencesScheda = new javax.swing.JMenuItem();
+        occurrencesHistory = new javax.swing.JMenuItem();
+        occurrencesSearch = new javax.swing.JMenuItem();
+        occurrencesRefresh = new javax.swing.JMenuItem();
         helpMenu = new javax.swing.JMenu();
         helpContents = new javax.swing.JMenuItem();
         jSeparator4 = new javax.swing.JSeparator();
@@ -133,7 +141,7 @@
             jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel1Layout.createSequentialGroup()
                 .add(statusLabel)
-                .addContainerGap(571, Short.MAX_VALUE))
+                .addContainerGap(582, Short.MAX_VALUE))
         );
         jPanel1Layout.setVerticalGroup(
             jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -175,7 +183,7 @@
                 .add(recordsPerPage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(nextPage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(204, Short.MAX_VALUE))
+                .addContainerGap(216, Short.MAX_VALUE))
         );
         jPanel3Layout.setVerticalGroup(
             jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -212,11 +220,11 @@
         jPanel2.setLayout(jPanel2Layout);
         jPanel2Layout.setHorizontalGroup(
             jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
         );
         jPanel2Layout.setVerticalGroup(
             jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
         );
 
         recordsCount.setText("-");
@@ -254,7 +262,8 @@
                 .addContainerGap())
         );
 
-        fileMenu.setText("File");
+        fileMenu.setMnemonic(L10n.getMnemonic("Overview.MenuFile"));
+        fileMenu.setText(L10n.getString("Overview.MenuFile"));
         fileLogin.setText("Item");
         fileMenu.add(fileLogin);
 
@@ -281,7 +290,8 @@
 
         jMenuBar1.add(fileMenu);
 
-        dataMenu.setText("Data");
+        dataMenu.setMnemonic(L10n.getMnemonic("Overview.MenuData"));
+        dataMenu.setText(L10n.getString("Overview.MenuData"));
         dataAuthors.setText("Item");
         dataMenu.add(dataAuthors);
 
@@ -299,7 +309,39 @@
 
         jMenuBar1.add(dataMenu);
 
-        helpMenu.setText("Help");
+        occurrencesMenu.setMnemonic(L10n.getMnemonic("Overview.MenuOccurrences"));
+        occurrencesMenu.setText(L10n.getString("Overview.MenuOccurrences"));
+        occurrencesMenu.addActionListener(new java.awt.event.ActionListener() {
+            public void actionPerformed(java.awt.event.ActionEvent evt) {
+                occurrencesMenuActionPerformed(evt);
+            }
+        });
+
+        occurrencesAdd.setText("Item");
+        occurrencesMenu.add(occurrencesAdd);
+
+        occurrencesEdit.setText("Item");
+        occurrencesMenu.add(occurrencesEdit);
+
+        occurrencesDelete.setText("Item");
+        occurrencesMenu.add(occurrencesDelete);
+
+        occurrencesScheda.setText("Item");
+        occurrencesMenu.add(occurrencesScheda);
+
+        occurrencesHistory.setText("Item");
+        occurrencesMenu.add(occurrencesHistory);
+
+        occurrencesSearch.setText("Item");
+        occurrencesMenu.add(occurrencesSearch);
+
+        occurrencesRefresh.setText("Item");
+        occurrencesMenu.add(occurrencesRefresh);
+
+        jMenuBar1.add(occurrencesMenu);
+
+        helpMenu.setMnemonic(L10n.getMnemonic("Overview.MenuHelp"));
+        helpMenu.setText(L10n.getString("Overview.MenuHelp"));
         helpContents.setText("Item");
         helpMenu.add(helpContents);
 
@@ -318,9 +360,9 @@
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
             .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .add(mainToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
+            .add(mainToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
             .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .add(pageToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
+            .add(pageToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -337,6 +379,10 @@
         );
         pack();
     }// </editor-fold>//GEN-END:initComponents
+
+    private void occurrencesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occurrencesMenuActionPerformed
+// TODO add your handling code here:
+    }//GEN-LAST:event_occurrencesMenuActionPerformed
     
     /**
      * @param args the command line arguments
@@ -469,6 +515,7 @@
      */
     public void setAddAction(AbstractAction a) {
         addButton.setAction(a);
+        occurrencesAdd.setAction(a);
     }
     
     /** Sets an action to the editButton.
@@ -476,6 +523,7 @@
      */
     public void setEditAction(AbstractAction a) {
         editButton.setAction(a);
+        occurrencesEdit.setAction(a);
     }
     
     /** Sets an action to the deleteButton.
@@ -483,6 +531,7 @@
      */
     public void setDeleteAction(AbstractAction a) {
         deleteButton.setAction(a);
+        occurrencesDelete.setAction(a);
     }
     
     
@@ -491,6 +540,7 @@
      */
     public void setSearchAction(AbstractAction a) {
         searchButton.setAction(a);
+        occurrencesSearch.setAction(a);
     }
 
     /** Sets an action to the Data->Search menu item and to the Search toolbar button.
@@ -498,6 +548,7 @@
      */
     public void setSchedaAction(AbstractAction a) {
         schedaButton.setAction(a);
+        occurrencesScheda.setAction(a);
     }
 
      /** Sets an action to the History toolbar button.
@@ -505,6 +556,7 @@
      */
     public void setHistoryRecordAction(AbstractAction a) {
         historyButton.setAction(a);
+        occurrencesHistory.setAction(a);
     }
     
     /** Sets an action to the selectAll button.
@@ -649,6 +701,14 @@
     protected javax.swing.JSeparator jSeparator4;
     private javax.swing.JToolBar mainToolBar;
     private javax.swing.JButton nextPage;
+    private javax.swing.JMenuItem occurrencesAdd;
+    private javax.swing.JMenuItem occurrencesDelete;
+    private javax.swing.JMenuItem occurrencesEdit;
+    private javax.swing.JMenuItem occurrencesHistory;
+    private javax.swing.JMenu occurrencesMenu;
+    protected javax.swing.JMenuItem occurrencesRefresh;
+    private javax.swing.JMenuItem occurrencesScheda;
+    private javax.swing.JMenuItem occurrencesSearch;
     protected javax.swing.JTable overview;
     private javax.swing.JScrollPane overviewScrollPane;
     private javax.swing.JLabel pageStatus;

Modified: trunk/src/net/sf/plantlore/client/SearchView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/SearchView.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/client/SearchView.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -41,6 +41,8 @@
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
         
+        getRootPane().setDefaultButton(okButton);
+        
         setLabels();
         
         jPanel3.setVisible(visible);

Modified: trunk/src/net/sf/plantlore/common/DBLayerUtils.java
===================================================================
--- trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -61,7 +61,7 @@
         AuthorOccurrence[] authorResults = null;
         SelectQuery sq = db.createQuery(AuthorOccurrence.class);        
         sq.addRestriction(PlantloreConstants.RESTR_EQ,AuthorOccurrence.OCCURRENCE,null,o,null);
-        sq.addRestriction(PlantloreConstants.RESTR_NE,AuthorOccurrence.DELETED,null,1,null);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ,AuthorOccurrence.DELETED,null,0,null);
         int resultid = db.executeQuery(sq);
         int resultCount = db.getNumRows(resultid);
         authorResults = new AuthorOccurrence[resultCount];
@@ -85,7 +85,7 @@
     public void deleteHabitat(Habitat h) throws DBLayerException, RemoteException {
         SelectQuery sq = db.createQuery(Occurrence.class);        
         sq.addRestriction(PlantloreConstants.RESTR_EQ,Occurrence.HABITAT,null,h,null);
-        sq.addRestriction(PlantloreConstants.RESTR_NE,Occurrence.DELETED, null, 1, null);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ,Occurrence.DELETED, null, 0, null);
         int resultid = db.executeQuery(sq);
         int resultCount = db.getNumRows(resultid);
         if (resultCount == 0) {

Modified: trunk/src/net/sf/plantlore/common/ProgressBar.form
===================================================================
--- trunk/src/net/sf/plantlore/common/ProgressBar.form	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/common/ProgressBar.form	2006-05-31 22:59:48 UTC (rev 415)
@@ -4,6 +4,7 @@
   <Properties>
     <Property name="defaultCloseOperation" type="int" value="0"/>
     <Property name="resizable" type="boolean" value="false"/>
+    <Property name="undecorated" type="boolean" value="true"/>
   </Properties>
   <SyntheticProperties>
     <SyntheticProperty name="formSizePolicy" type="int" value="1"/>

Modified: trunk/src/net/sf/plantlore/common/ProgressBar.java
===================================================================
--- trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-05-31 22:59:48 UTC (rev 415)
@@ -80,6 +80,7 @@
 
         setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
         setResizable(false);
+        setUndecorated(true);
         jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createEtchedBorder()));
 
         statusField.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
@@ -204,9 +205,9 @@
                     case STOPPING:
                         setVisible(false);
                         dispose();                    
+                        parent.setCursor(Cursor.getDefaultCursor());
                         break;
                     case STOPPED:
-                        parent.setCursor(Cursor.getDefaultCursor());
                         afterStopped(value);
                         break;                    
                 }//switch

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-05-31 22:59:48 UTC (rev 415)
@@ -1132,3 +1132,4 @@
 Overview.MenuFileLogin=&Login
 
 Message.FillingDialogs=Storing data into dialogs
+Overview.MenuOccurrences=Occurrences

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-05-31 22:59:48 UTC (rev 415)
@@ -765,3 +765,5 @@
 Overview.MenuFileLogin=&P\u0159ihl\u00E1\u0161en\u00ED
 
 Message.FillingDialogs=Ukl\u00E1d\u00E1m data do dialog\u016F
+
+Overview.MenuOccurrences=&N\u00E1lezy

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-05-31 22:32:29 UTC (rev 414)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-05-31 22:59:48 UTC (rev 415)
@@ -833,3 +833,5 @@
 Overview.Refresh.ProgressTitle=Loading data
 
 Message.FillingDialogs=Constructing dialogs
+
+Overview.MenuOccurrences=Occurrences



From admin at berlios.de  Thu Jun  1 09:58:01 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 1 Jun 2006 08:58:01 +0100 (BST)
Subject: [Plantlore-dev] [Bug #7704] History doesn't revive deleted AuthorOccs for restored Occs
Message-ID: <200606010758.k517w1k1000832@unicorn.berlios.de>

Bug #7704, was updated on 2006-May-31 18:40
Here is a current snapshot of the bug.

Project: Plantlore
Category: History
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 9
Submitted by: fraktalek
Assigned to : joselada
Summary: History doesn't revive deleted AuthorOccs for restored Occs

Details: Steps to reproduce:

1. Start Plantlore, Log in
2. Delete an occurrence by selecting it and clicking on delete
3. Go to whole history and undo the last change
4. Refresh overview
5. Try to edit the revived occurrence

Edit will throw a DBLayerException because the occurrence has no live AuthorOccurrences.

Encountered in revision: 409



For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7704&group_id=5975


From admin at berlios.de  Thu Jun  1 10:10:33 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 1 Jun 2006 09:10:33 +0100 (BST)
Subject: [Plantlore-dev] [Bug #7671] Save history of occurrence for edit
Message-ID: <200606010810.k518AX37001484@unicorn.berlios.de>

Bug #7671, was updated on 2006-May-30 20:25
Here is a current snapshot of the bug.

Project: Plantlore
Category: History
Status: Open
Resolution: None
Bug Group: Bug
Priority: 8
Submitted by: joselada
Assigned to : tkovarik
Summary: Save history of occurrence for edit

Details: History (edit) of occurrence is saved only for data from table tOccurrences.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7671&group_id=5975


From krater at berlios.de  Thu Jun  1 14:07:41 2006
From: krater at berlios.de (krater at berlios.de)
Date: Thu, 1 Jun 2006 14:07:41 +0200
Subject: [Plantlore-dev] r416 - in trunk/src/net/sf/plantlore: client client/imports/table client/imports/table/parsers common/record
Message-ID: <200606011207.k51C7fOs017652@sheep.berlios.de>

Author: krater
Date: 2006-06-01 14:07:38 +0200 (Thu, 01 Jun 2006)
New Revision: 416

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java
   trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
   trunk/src/net/sf/plantlore/client/imports/table/parsers/UnifiedTableParser.java
   trunk/src/net/sf/plantlore/common/record/Record.java
Log:
TableImport - some bugs fixed (improper use of shared records).

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-05-31 22:59:48 UTC (rev 415)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-01 12:07:38 UTC (rev 416)
@@ -91,6 +91,8 @@
 import net.sf.plantlore.client.imports.ImportMngView;
 import net.sf.plantlore.client.imports.ImportProgressCtrl;
 import net.sf.plantlore.client.imports.ImportProgressView;
+import net.sf.plantlore.client.imports.table.TableImportMng;
+import net.sf.plantlore.client.imports.table.TableImportMngCtrl;
 import net.sf.plantlore.client.login.Login;
 import net.sf.plantlore.client.login.LoginCtrl;
 import net.sf.plantlore.client.login.LoginView;
@@ -184,6 +186,10 @@
     ImportProgressCtrl importProgressCtrl;
     DecisionView importDecisionView;
     DecisionCtrl importDecisionCtrl;
+    
+    // Immutable Table Import
+    TableImportMng tableImportModel;
+    TableImportMngCtrl tableImportCtrl;
 
     //Bridges
     ManagerBridge managerBridge = new ManagerBridge();
@@ -194,7 +200,7 @@
     AbstractAction helpContentsAction = new HelpContentsAction();
     AbstractAction helpAboutAction = new HelpAboutAction();
     AbstractAction  exportAction = new ExportAction();
-    AbstractAction importAction = new ImportAction();
+    AbstractAction importAction = new TableImportAction();
     
     AbstractAction dataAuthorsAction = new DataAuthorsAction();
     AbstractAction dataPublicationsAction = new DataPublicationsAction();
@@ -264,7 +270,7 @@
         view.setRecordsPerPageListener(new RecordsPerPagePropertyChangeListener());
         
         view.setLoginAction(loginAction);
-        
+                
         constructDialogs();                
                
         // This is here in order to skip login procedure and connect to the database automatically
@@ -471,6 +477,30 @@
         }
     }
     
+    
+    class TableImportAction extends AbstractAction {
+        public TableImportAction() {
+            putValue(NAME, L10n.getString("Overview.TableImport"));
+            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.TableImportTT"));
+            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.TableImport"));            
+        } 
+
+        public void actionPerformed(ActionEvent actionEvent) {
+        	if(tableImportModel == null) {
+        		try {
+        			tableImportModel = new TableImportMng( model.getDatabase() );
+        			tableImportCtrl = new TableImportMngCtrl( tableImportModel, view );
+        		} catch(ImportException e) {
+        			logger.error("Import MVC cannot be created. " + e.getMessage());
+        			return;
+        		}
+        	}
+
+        	tableImportCtrl.setVisible( true );
+        }
+    }
+    
+    
     class ExportAction extends AbstractAction {
         public ExportAction() {
             putValue(NAME, L10n.getString("dataExport"));
@@ -505,8 +535,10 @@
             		 * FIXME: Solve this with Jakub.
             		 *==============================================================*/
             		SelectQuery query;
-            		if(searchModel == null) 
+            		if(searchModel == null) {
+            			System.out.println(">>>>>>>> CREATING A FAKE QUERY");
             			query = model.getDatabase().createQuery(Occurrence.class); // fake the query
+            		}
             		else {
             			Object[] queryParam = searchModel.constructExportQuery();
             			query = (SelectQuery)queryParam[0];
@@ -781,7 +813,7 @@
                 pb.setTitle(L10n.getString("Scheda.ProgressTitle"));
                 
                 task.start();
-            } catch(JRException ex) {
+            } catch(Exception ex) { // Unreachable CATCH block
                 logger.error("Broken report: "+ex);
                 JOptionPane.showMessageDialog(view,L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);
             }

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java	2006-05-31 22:59:48 UTC (rev 415)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java	2006-06-01 12:07:38 UTC (rev 416)
@@ -3,6 +3,7 @@
 import javax.swing.JFileChooser;
 import javax.swing.JOptionPane;
 
+import net.sf.plantlore.client.AppCoreView;
 import net.sf.plantlore.client.export.component.XFilter;
 import net.sf.plantlore.common.Task;
 import net.sf.plantlore.l10n.L10n;
@@ -12,12 +13,14 @@
 	
 	private TableImportMng model;
 	private JFileChooser choice;
+	private AppCoreView view;
 	
-	public TableImportMngCtrl(TableImportMng model) {
+	public TableImportMngCtrl(TableImportMng model, AppCoreView view) {
 		this.model = model;
+		this.view = view;
 		choice = new JFileChooser();
 		choice.setAcceptAllFileFilterUsed(false);
-		choice.addChoosableFileFilter( new XFilter("Update files (*.xml)", "*.xml") );
+		choice.addChoosableFileFilter( new XFilter("Table update files (*.xml)", ".xml") );
 	}
 	
 	public void setVisible(boolean visible) {
@@ -33,11 +36,11 @@
 				}
 				try {
 					Task task = model.createTableImportTask(choice.getSelectedFile().getAbsolutePath(), null);
-					new TableImportProgressBar(task, null);
+					new TableImportProgressBar(task, view);
 					task.start();
 				} catch(Exception e) {
 					JOptionPane.showMessageDialog(null,
-							L10n.getString("Error.ImportFailed") + e.getMessage(),
+							L10n.getString("Error.ImportFailed") + " " + e.getMessage(),
 							L10n.getString("Import.Failed"),
 							JOptionPane.WARNING_MESSAGE);
 				}

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-05-31 22:59:48 UTC (rev 415)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-01 12:07:38 UTC (rev 416)
@@ -6,6 +6,7 @@
 import org.apache.log4j.Logger;
 
 import static net.sf.plantlore.common.PlantloreConstants.RESTR_EQ;
+import net.sf.plantlore.client.imports.table.TableParser.Action;
 import net.sf.plantlore.common.Task;
 import net.sf.plantlore.common.exception.DBLayerException;
 import net.sf.plantlore.common.exception.ImportException;
@@ -106,7 +107,7 @@
 			int resultId = db.executeQuery( q ),
 			rows = db.getNumRows( resultId );
 			
-			Set<Record> cache = new HashSet<Record>(rows);
+			Collection<Record> cache = new HashSet<Record>(rows);
 			
 			for(int i = 0; i < rows; i++) {
 				Object[] pulp = db.more(resultId, i, i);
@@ -142,6 +143,11 @@
 					setStatusMessage(L10n.getFormattedString("Import.IncompleteRecord", count));					
 				}
 				
+				logger.debug(data.action+" "+data.record + 
+						((data.action == Action.UPDATE) ? 
+								" ==> " + data.replacement :
+								""));
+				
 				// Take action.
 				try {
 					switch(data.action) {
@@ -169,7 +175,7 @@
 								update( data.record, data.replacement );
 								cache.add( data.replacement );
 							}
-						updated++;
+						updated ++;
 						break;
 					}
 				} catch(ImportException ie) {
@@ -228,8 +234,13 @@
 		SelectQuery q = null;
 		int rows = 0;
 		try {
-			q = db.createQuery( parentTable.get(record.getClass()) );
-			q.addRestriction(RESTR_EQ, parentColumn.get(record.getClass()), null, record, null);
+			Class parent = parentTable.get( record.getClass() );
+			String column = parentColumn.get( record.getClass() );
+			
+			System.out.println(parent.getSimpleName()+"."+column);
+			
+			q = db.createQuery( parent );
+			q.addRestriction(RESTR_EQ, column, null, record, null);
 			int resultset = db.executeQuery(q); 
 			rows = db.getNumRows(resultset);
 		} catch (DBLayerException e) {

Modified: trunk/src/net/sf/plantlore/client/imports/table/parsers/UnifiedTableParser.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/parsers/UnifiedTableParser.java	2006-05-31 22:59:48 UTC (rev 415)
+++ trunk/src/net/sf/plantlore/client/imports/table/parsers/UnifiedTableParser.java	2006-06-01 12:07:38 UTC (rev 416)
@@ -16,7 +16,6 @@
 public class UnifiedTableParser implements TableParser {
 	
 	private Document document;
-	private Record current, replacement;
 	private DataHolder data = new DataHolder();
 	
 	private int numberOfRecords = -1;
@@ -54,11 +53,6 @@
             }
             else
             	throw new ParserException(L10n.getString("Error.IncorrectXMLFile"));
-            
-            current = (Record)table.newInstance();
-			replacement = (Record)table.newInstance();
-			data.record = current;
-			data.replacement = replacement;
 			
 			rootTable = table;
         } catch (Exception ex) {
@@ -77,22 +71,29 @@
 	throws ParserException {
 		if(recIterator == null)
 			return null;
-		
-		Node node = (Node) recIterator.next();
-		reconstruct( current, node );
-		node = node.getParent();
-		String name = (node == null) ? "add" : node.getName().toLowerCase();
-		
-		if( name.startsWith("add") )
-			data.action = Action.INSERT;
-		else if( name.startsWith("del") )
-			data.action = Action.DELETE;
-		else if( name.startsWith("upd")) {
-			data.action = Action.UPDATE;
-			node = (Node) recIterator.next();
-			if(node == null)
-				throw new ParserException("Error.MissingUpdateRecord");
-			reconstruct( replacement, node );
+
+		try {
+			data.record = (Record)rootTable.newInstance();
+			
+			Node node = (Node) recIterator.next();
+			reconstruct( data.record, node );
+			node = node.getParent();
+			String name = (node == null) ? "add" : node.getName().toLowerCase();
+			
+			if( name.startsWith("add") )
+				data.action = Action.INSERT;
+			else if( name.startsWith("del") )
+				data.action = Action.DELETE;
+			else if( name.startsWith("upd")) {
+				data.action = Action.UPDATE;
+				node = (Node) recIterator.next();
+				if(node == null)
+					throw new ParserException("Error.MissingUpdateRecord");
+				data.replacement = (Record)rootTable.newInstance();
+				reconstruct( data.replacement, node );
+			}
+		} catch(Exception e) {
+			throw new ParserException("Import.PartialyCorruptedRecord");
 		}
 		
 		return data;

Modified: trunk/src/net/sf/plantlore/common/record/Record.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Record.java	2006-05-31 22:59:48 UTC (rev 415)
+++ trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-01 12:07:38 UTC (rev 416)
@@ -351,6 +351,17 @@
 		return new ArrayList<String>(Arrays.asList(values));
 	}
 	
+	@Override
+	public int hashCode() {
+		int hash = 0;
+		for(String property : getProperties()) {
+			Object value = getValue(property);
+			if( value != null)
+				hash ^= value.hashCode(); 
+		}
+		return hash;
+	}
+	
 
 	/**
 	 * Convert the record into a string. 
@@ -362,7 +373,7 @@
 		StringBuilder sigma = new StringBuilder();
 		for(String property : this.getProperties())
 			sigma.append(getClass().getSimpleName()).append('.').
-			append(property).append(" = ").append(this.getValue(property)).append("; ");
+			append(property).append(" = ").append(this.getValue(property)).append(";\n");
 		for(String key : getForeignKeys()) {
 			Record subrecord = (Record)getValue(key); 
 			if(subrecord != null)	sigma.append( subrecord.toString() );



From admin at berlios.de  Thu Jun  1 11:26:43 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 1 Jun 2006 11:26:43 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7692] Set a default button for each dialog
Message-ID: <200606010926.k519Qhvk004510@unicorn.berlios.de>

Bug #7692, was updated on 2006-May-31 12:46
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: Works For Me
Bug Group: RFE
Priority: 4
Submitted by: krater
Assigned to : none
Summary: Set a default button for each dialog

Details: Every dialog should have a default button, that is, a button that will be "called" or "clicked" when the User presses Enter anywhere in the dialog. 

A perfect example is the Login-Authorization dialog: after you type a password, you hit enter and expect the Authorize button's action to be invoked.

Follow-Ups:

Date: 2006-Jun-01 11:26
By: krater

Comment:
Well, won't that be the legendary *third version* of Matisse :)?
-------------------------------------------------------

Date: 2006-May-31 22:59
By: fraktalek

Comment:
They know about it and plan  to add this function (together with other missing) in NB 6.0 :)
-------------------------------------------------------

Date: 2006-May-31 14:00
By: krater

Comment:
Each dialog (ie. xxxView.java by our convention) must have a default button. You can achieve it by adding the following line into the constructor of the dialog right after the "initComponents()":

initComponents();
getRootPane().setDefaultButton( my_default_button );

It's a shame that the default button cannot be set directly in Matisse...
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7692&group_id=5975


From admin at berlios.de  Thu Jun  1 15:30:48 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 1 Jun 2006 15:30:48 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7708] Easier adding of many occurrences for the same authors
Message-ID: <200606011330.k51DUmCu001867@unicorn.berlios.de>

Bug #7708, was updated on 2006-Jun-01 15:30
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 7
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Easier adding of many occurrences for the same authors

Details: In case an author is for example for a week in terrain he has a lot of data from diverse localities. Because the author is always the same for these data it would be nice if the Add dialog was able to remember authors of the last added occurrence.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7708&group_id=5975


From krater at berlios.de  Thu Jun  1 16:59:14 2006
From: krater at berlios.de (krater at berlios.de)
Date: Thu, 1 Jun 2006 16:59:14 +0200
Subject: [Plantlore-dev] r417 - trunk/src/net/sf/plantlore/client/imports/table
Message-ID: <200606011459.k51ExERd015244@sheep.berlios.de>

Author: krater
Date: 2006-06-01 16:59:14 +0200 (Thu, 01 Jun 2006)
New Revision: 417

Modified:
   trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
Log:
Problem with null ID's fixed.

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-01 12:07:38 UTC (rev 416)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-01 14:59:14 UTC (rev 417)
@@ -54,7 +54,7 @@
 	}
 	
 	
-
+	
 	/**
 	 * 
 	 * @param db	The database where the data will be imported.
@@ -107,11 +107,12 @@
 			int resultId = db.executeQuery( q ),
 			rows = db.getNumRows( resultId );
 			
-			Collection<Record> cache = new HashSet<Record>(rows);
+			Map<Record, Record> cache = new Hashtable<Record, Record>(rows);
 			
 			for(int i = 0; i < rows; i++) {
 				Object[] pulp = db.more(resultId, i, i);
-				cache.add( (Record)((Object[])(pulp[0]))[0] );
+				Record rec = (Record)((Object[])(pulp[0]))[0]; 
+				cache.put( rec, rec );
 			}
 			
 			db.closeQuery( q );
@@ -148,41 +149,48 @@
 								" ==> " + data.replacement :
 								""));
 				
+				
+				Record recordInDB = cache.get( data.record );
+				boolean isRecordInDB = recordInDB != null;
+								
 				// Take action.
 				try {
 					switch(data.action) {
 					case INSERT:
-						if( !cache.contains(data.record) ) {
+						if( !isRecordInDB ) {
 							insert( data.record );
-							cache.add( data.record );
+							cache.put( data.record, data.record );
 						}
 						inserted++;						
 						break;
 					case DELETE:
-						if( cache.contains(data.record) ) {
-							delete( data.record );
+						if( isRecordInDB ) {
+							delete( recordInDB );
 							cache.remove( data.record );
 						}
 						deleted++;
 						break;
 					case UPDATE:
-						if( !cache.contains(data.replacement) )
-							if( !cache.remove(data.record) ) {
+						Record replacementInDB = cache.get(data.replacement); 
+						if( replacementInDB == null )
+							if( !isRecordInDB ) {
 								insert( data.replacement );
-								cache.add( data.replacement );
+								cache.put( data.replacement, data.replacement );
 							}
 							else {
-								update( data.record, data.replacement );
-								cache.add( data.replacement );
+								cache.remove(data.record);
+								update( recordInDB, data.replacement );
+								cache.put( data.replacement, data.replacement );
 							}
 						updated ++;
 						break;
 					}
 				} catch(ImportException ie) {
-					logger.error("The import of the record No. " + count + " was unsuccessful! " + ie);
+					logger.error("The import of the record No. " + count + " was unsuccessful! " + ie.getMessage());
 					setStatusMessage( ie.getMessage() );
 				} catch(DBLayerException de) {
-					logger.error("Delete/update/insert failed! " + de);
+					logger.error("Delete/update/insert failed! " + de.getMessage());
+					de.printStackTrace();
 					setStatusMessage( L10n.getFormattedString("Error.UnableToProcess", count) + " " + 
 							((de.getMessage() == null) ? L10n.getString("Import.UnknownReason") : de.getMessage()) );
 				}
@@ -231,6 +239,9 @@
 	 */
 	protected int sharedBy(Record record) 
 	throws RemoteException {
+		if(record.getId() == null)
+			return 0;
+		
 		SelectQuery q = null;
 		int rows = 0;
 		try {
@@ -264,8 +275,11 @@
 	 */
 	protected void update(Record current, Record replacement) 
 	throws RemoteException, DBLayerException {
-		for(String property : current.getProperties())
+		
+		for(String property : current.getProperties()) {
+			System.out.println("                 replacing "+property);
 			current.setValue(property, replacement.getValue(property));
+		}
 		
 		db.executeUpdateInTransaction( current );
 	}
@@ -274,12 +288,14 @@
 	 */
 	protected void delete(Record record) 
 	throws RemoteException, DBLayerException, ImportException {
-		int sharers = sharedBy( record );
-		if( sharers > 0 ) {
-			logger.error("The "+record+" is in use by "+sharers+" other records. It cannot be deleted!");
-			throw new ImportException(L10n.getFormattedString("Error.DeletingSharedRecord", record, sharers));
+		if(record.getId() != null) {
+			int sharers = sharedBy( record );
+			if( sharers > 0 ) {
+				logger.error("The "+record+" is in use by "+sharers+" other records. It cannot be deleted!");
+				throw new ImportException(L10n.getFormattedString("Error.DeletingSharedRecord", record, sharers));
+			}
+			db.executeDeleteInTransaction( record );
 		}
-		db.executeDeleteInTransaction( record );
 	}
 	
 	



From krater at berlios.de  Thu Jun  1 17:12:46 2006
From: krater at berlios.de (krater at berlios.de)
Date: Thu, 1 Jun 2006 17:12:46 +0200
Subject: [Plantlore-dev] r418 - trunk/src/net/sf/plantlore/client/imports/table
Message-ID: <200606011512.k51FCkvL016793@sheep.berlios.de>

Author: krater
Date: 2006-06-01 17:12:46 +0200 (Thu, 01 Jun 2006)
New Revision: 418

Modified:
   trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
Log:
TableImport simplified - insert/update/delete do not share that one global transaction. This had to be done because when I started a transaction, inserted a record A that was not in the database, and tried to update the record A to a record B later, I got myself an exception from the database layer. The problem was with saving the history of such record. It seems that hibernate cannot update a record that has not been commited previously (or maybe hibernate can, but our db layer cannot :).

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-01 14:59:14 UTC (rev 417)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-01 15:12:46 UTC (rev 418)
@@ -95,8 +95,7 @@
 	 */
 	public Object task() throws Exception {
 		SelectQuery q = null;
-		boolean transactionInProgress =  false;
-		
+
 		logger.info("Import into "+table+" begins...");
 		
 		setLength( parser.getNumberOfRecords() );
@@ -118,9 +117,7 @@
 			db.closeQuery( q );
 			q = null;
 			
-			transactionInProgress = db.beginTransaction();
-			if( ! transactionInProgress )
-				throw new ImportException(L10n.getString("Error.TransactionRaceConditions"));
+			
 						
 			while( !isCanceled() && parser.hasNext() ) {
 				DataHolder data = null;
@@ -198,14 +195,13 @@
 
 			
 			if( !isCanceled() ) {
-				transactionInProgress = ! db.commitTransaction();
 				logger.info("Import completed. "+count+" records processed ("+
 						inserted+" inserted, "+updated+" updated, "+deleted+" deleted).");
 				setStatusMessage(L10n.getString("Import.Completed"));
 			}
 			else {
-				transactionInProgress = ! db.rollbackTransaction();
-				logger.info("Import aborted. Nothing will be stored in the database.");
+				logger.info("Import aborted. "+count+" records processed ("+
+						inserted+" inserted, "+updated+" updated, "+deleted+" deleted).");
 				setStatusMessage(L10n.getString("Import.Aborted"));
 			}
 			
@@ -213,8 +209,6 @@
 			try {
 				if(q != null) 
 					db.closeQuery( q );
-				if(transactionInProgress) 
-					transactionInProgress = ! db.rollbackTransaction();
 			} catch(Exception re) {}
 			
 			logger.fatal("Import ended prematurely. "+count+" records processed ("+
@@ -267,7 +261,7 @@
 	 */
 	protected void insert(Record record) 
 	throws RemoteException, DBLayerException {
-		db.executeInsertInTransaction( record );
+		db.executeInsert( record );
 
 	}
 	
@@ -276,12 +270,10 @@
 	protected void update(Record current, Record replacement) 
 	throws RemoteException, DBLayerException {
 		
-		for(String property : current.getProperties()) {
-			System.out.println("                 replacing "+property);
+		for(String property : current.getProperties())
 			current.setValue(property, replacement.getValue(property));
-		}
 		
-		db.executeUpdateInTransaction( current );
+		db.executeUpdate( current );
 	}
 		
 	/**
@@ -294,7 +286,7 @@
 				logger.error("The "+record+" is in use by "+sharers+" other records. It cannot be deleted!");
 				throw new ImportException(L10n.getFormattedString("Error.DeletingSharedRecord", record, sharers));
 			}
-			db.executeDeleteInTransaction( record );
+			db.executeDelete( record );
 		}
 	}
 	



From lada at berlios.de  Thu Jun  1 18:14:48 2006
From: lada at berlios.de (lada at berlios.de)
Date: Thu, 1 Jun 2006 18:14:48 +0200
Subject: [Plantlore-dev] r419 - in trunk/src/biocase/DataproBioCASE: configuration/datasources/plantLore configuration/datasources/plantLorePSWD configuration/querytool/skins/default configuration/querytool/skins/plantlore configuration/querytool/skins/plantlorePSWD www www/querytool/plantlore www/querytool/plantlore/images
Message-ID: <200606011614.k51GEmJ6023462@sheep.berlios.de>

Author: lada
Date: 2006-06-01 18:14:46 +0200 (Thu, 01 Jun 2006)
New Revision: 419

Added:
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/headImage3.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuAktuality2.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuDB2.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuEmpty3.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuOdkazy2.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuUvod4.gif
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styles.css
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/zalohaStyles.css
Removed:
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styly.css
Modified:
   trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/cmf_ABCD_1.20.xml
   trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/provider_setup_file.xml
   trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/cmf_ABCD_1.20.xml
   trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/provider_setup_file.xml
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDRecordlist.xslt
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html
   trunk/src/biocase/DataproBioCASE/www/index.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html
Log:
Web client - new desigen and work with correct data for anonymous or user. Some small changes are necessarily.

Modified: trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/cmf_ABCD_1.20.xml
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/cmf_ABCD_1.20.xml	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/cmf_ABCD_1.20.xml	2006-06-01 16:14:46 UTC (rev 419)
@@ -83,17 +83,17 @@
             <childElements>
               <dataElement name='SourceInstitutionCode' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceInstitutionCode'>
                 <mapping>
-                  <dbAttribute attribute='CSOURCEINSTITUTIONID' tablealias='metadata' type='text' nosearch='0'/>
+                  <dbAttribute attribute='csourceinstitutionid' tablealias='metadata' type='text' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceName'>
                 <mapping>
-                  <dbAttribute attribute='CSOURCEID' tablealias='metadata' type='text' nosearch='0'/>
+                  <dbAttribute attribute='csourceid' tablealias='metadata' type='text' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceLastUpdatedDate' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/OriginalSource/SourceLastUpdatedDate'>
                 <mapping>
-                  <dbAttribute attribute='CDATEMODIFIED' tablealias='metadata' type='date' nosearch='0'/>
+                  <dbAttribute attribute='cdatemodified' tablealias='metadata' type='date' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceVersion' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceVersion'/>
@@ -111,7 +111,7 @@
                 <childElements>
                   <dataElement name='DateSupplied' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/DateSupplied'>
                     <mapping>
-                      <dbAttribute attribute='CDATECREATE' tablealias='metadata' type='date' nosearch='0'/>
+                      <dbAttribute attribute='cdatecreate' tablealias='metadata' type='date' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' name='Supplier' min='1'>
@@ -138,7 +138,7 @@
                         <childElements>
                           <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Person/PersonName'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTNAME' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactname' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Person/SortPersonName'/>
@@ -153,7 +153,7 @@
                         <childElements>
                           <dataElement name='Address' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Addresses/Address'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTADDRESS' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactaddress' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Addresses/Address[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -191,7 +191,7 @@
                         <childElements>
                           <dataElement name='EmailAddress' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='token' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/EmailAddresses/EmailAddress'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTEMAIL' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactemail' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/EmailAddresses/EmailAddress[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -235,7 +235,7 @@
                                 <childElements>
                                   <dataElement name='OrganisationCode' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Organisation/OrganisationCodes/OrganisationCode'>
                                     <mapping>
-                                      <dbAttribute attribute='COWNERORGANIZATIONABBREV' tablealias='metadata' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='cownerorganizationabbrev' tablealias='metadata' type='text' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Organisation/OrganisationCodes/OrganisationCode[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -249,7 +249,7 @@
                             <childElements>
                               <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Person/PersonName'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTNAME' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactname' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Person/SortPersonName'/>
@@ -264,7 +264,7 @@
                             <childElements>
                               <dataElement name='Address' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Addresses/Address'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTADDRESS' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactaddress' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Addresses/Address[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -302,7 +302,7 @@
                             <childElements>
                               <dataElement name='EmailAddress' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='token' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/EmailAddresses/EmailAddress'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTEMAIL' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactemail' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/EmailAddresses/EmailAddress[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -352,7 +352,7 @@
                   </dataElement>
                   <dataElement name='Description' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Description'>
                     <mapping>
-                      <dbAttribute attribute='CDATASETDETAILS' tablealias='metadata' type='text' nosearch='0'/>
+                      <dbAttribute attribute='cdatasetdetails' tablealias='metadata' type='text' nosearch='0'/>
                     </mapping>
                     <attributes>
                       <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Description[@Language]' name='Language' w3cType='language' min='0'/>
@@ -368,13 +368,13 @@
                 <childElements>
                   <dataElement name='UnitID' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitID'>
                     <mapping>
-                      <dbAttribute attribute='CID' tablealias='occurrences' type='int' nosearch='0'/>
+                      <dbAttribute attribute='cid' tablealias='occurrences' type='int' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement name='LastEditor' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/LastEditor'/>
                   <dataElement name='DateLastEdited' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/Units/Unit/DateLastEdited'>
                     <mapping>
-                      <dbAttribute attribute='CUPDATEWHEN' tablealias='occurrences' type='date' nosearch='0'/>
+                      <dbAttribute attribute='cupdatewhen' tablealias='occurrences' type='date' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement name='UnitIDNumeric' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='int' path='/DataSets/DataSet/Units/Unit/UnitIDNumeric'/>
@@ -507,7 +507,7 @@
                   </dataElement>
                   <dataElement name='RecordBasis' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/RecordBasis'>
                     <mapping>
-                      <dbAttribute attribute='CRECORDBASIS' tablealias='metadata' type='text' nosearch='0'/>
+                      <dbAttribute attribute='crecordbasis' tablealias='metadata' type='text' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement path='/DataSets/DataSet/Units/Unit/NamedCollections' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' name='NamedCollections' min='0'>
@@ -535,17 +535,17 @@
                               </dataElement>
                               <dataElement name='NameAuthorYearString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/NameAuthorYearString'>
                                 <mapping>
-                                  <dbAttribute attribute='CSPECIES' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cspecies' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='ScientificNameString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameString'>
                                 <mapping>
-                                  <dbAttribute attribute='CGENUS' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cgenus' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='AuthorString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/AuthorString'>
                                 <mapping>
-                                  <dbAttribute attribute='CSCIENTIFICNAMEAUTHOR' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cscientificnameauthor' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='IdentificationQualifier' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/IdentificationQualifier'>
@@ -565,7 +565,7 @@
                                     <childElements>
                                       <dataElement name='Genus' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameAtomized/Bacterial/Genus'>
                                         <mapping>
-                                          <dbAttribute attribute='CGENUS' tablealias='plants' type='text' nosearch='0'/>
+                                          <dbAttribute attribute='cgenus' tablealias='plants' type='text' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='Subgenus' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameAtomized/Bacterial/Subgenus'/>
@@ -675,7 +675,7 @@
                         <childElements>
                           <dataElement name='Exsiccatum' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitCollectionDomain/HerbariumUnit/Exsiccatum'>
                             <mapping>
-                              <dbAttribute attribute='CHERBARIUM' tablealias='occurrences' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cherbarium' tablealias='occurrences' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                         </childElements>
@@ -989,17 +989,17 @@
                         <childElements>
                           <dataElement name='ReferenceCitation' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/ReferenceCitation'>
                             <mapping>
-                              <dbAttribute attribute='CCOLLECTIONNAME' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ccollectionname' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='ReferenceDetail' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/ReferenceDetail'>
                             <mapping>
-                              <dbAttribute attribute='CREFERENCEDETAIL' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='creferencedetail' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='URL' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='anyURI' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/URL'>
                             <mapping>
-                              <dbAttribute attribute='CURL' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='curl' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                         </childElements>
@@ -1185,7 +1185,7 @@
                           <dataElement name='DateText' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/DateText'/>
                           <dataElement name='ISODateTimeBegin' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/ISODateTimeBegin'>
                             <mapping>
-                              <dbAttribute attribute='CISODATETIMEBEGIN' tablealias='occurrences' type='date' nosearch='0'/>
+                              <dbAttribute attribute='cisodatetimebegin' tablealias='occurrences' type='date' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='DayNumberBegin' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='integer' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/DayNumberBegin'/>
@@ -1207,7 +1207,7 @@
                                 <childElements>
                                   <dataElement name='OrganisationName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Organization/OrganisationName'>
                                     <mapping>
-                                      <dbAttribute attribute='CORGANIZATION' tablealias='authors' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='corganization' tablealias='authors' type='text' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Organization/OrganisationName[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1228,7 +1228,7 @@
                                 <childElements>
                                   <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Person/PersonName'>
                                     <mapping>
-                                      <dbAttribute attribute='CWHOLENAME' tablealias='authors' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='cwholename' tablealias='authors' type='text' nosearch='0'/>
                                     </mapping>
                                   </dataElement>
                                   <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Person/SortPersonName'/>
@@ -1243,7 +1243,7 @@
                         <childElements>
                           <dataElement name='ProjectTitle' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/Project/ProjectTitle'>
                             <mapping>
-                              <dbAttribute attribute='CDATASETTITLE' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cdatasettitle' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/Project/ProjectTitle[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1346,7 +1346,7 @@
                         <childElements>
                           <dataElement name='LocalityText' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/LocalityText'>
                             <mapping>
-                              <dbAttribute attribute='CNAME' tablealias='villages' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cname' tablealias='villages' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/LocalityText[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1364,7 +1364,7 @@
                             <childElements>
                               <dataElement name='CountryName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Country/CountryName'>
                                 <mapping>
-                                  <dbAttribute attribute='CCOUNTRY' tablealias='habitats' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccountry' tablealias='habitats' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Country/CountryName[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1457,12 +1457,12 @@
                                     <childElements>
                                       <dataElement name='LongitudeDecimal' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/LongitudeDecimal'>
                                         <mapping>
-                                          <dbAttribute attribute='CLONGITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                          <dbAttribute attribute='clongitude' tablealias='habitats' type='float' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='LatitudeDecimal' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/LatitudeDecimal'>
                                         <mapping>
-                                          <dbAttribute attribute='CLATITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                          <dbAttribute attribute='clatitude' tablealias='habitats' type='float' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='SpatialDatum' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/SpatialDatum'/>
@@ -1508,7 +1508,7 @@
                                   </dataElement>
                                   <dataElement name='MeasurementLowerValue' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='decimal' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Altitude/MeasurementAtomized/MeasurementLowerValue'>
                                     <mapping>
-                                      <dbAttribute attribute='CALTITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                      <dbAttribute attribute='caltitude' tablealias='habitats' type='float' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Altitude/MeasurementAtomized/MeasurementLowerValue[@ValueDataType]' name='ValueDataType' w3cType='string' min='0'/>
@@ -1980,7 +1980,7 @@
                           </dataElement>
                           <dataElement name='Notes' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Notes'>
                             <mapping>
-                              <dbAttribute attribute='CNOTE' tablealias='habitats' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cnote' tablealias='habitats' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Notes[@Language]' name='Language' w3cType='language' min='0'/>

Modified: trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/provider_setup_file.xml
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/provider_setup_file.xml	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLore/provider_setup_file.xml	2006-06-01 16:14:46 UTC (rev 419)
@@ -1,89 +1,89 @@
 
 <Provider xmlns='http://www.biocase.org/schemas/providersetup/1.5' adminpassword='xcvbnm'>
   <Host>
-    <User>SYSDBA</User>
+    <User>postgres</User>
     <Password>masterkey</Password>
-    <Datasource>c:\Program Files\Firebird\Firebird_1_5\Database\plantloreHIBdata.fdb</Datasource>
+    <Datasource>plantloreKovo</Datasource>
     <DB_IP>localhost</DB_IP>
-    <DBMS>firebird</DBMS>
+    <DBMS>postgres</DBMS>
   </Host>
   <DB>
     <TextEncoding>utf_8</TextEncoding>
-    <TableAlias alias='authors' tablename='TAUTHORS'>
+    <TableAlias alias='authors' tablename='tauthors'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='authorsOccurrences' tablename='TAUTHORSOCCURRENCES'>
+    <TableAlias alias='authorsOccurrences' tablename='tauthorsoccurrences'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
       <ForeignKey target='authors'>
-        <Attribute dbType='int'>CAUTHORID</Attribute>
+        <Attribute dbType='int'>cauthorid</Attribute>
       </ForeignKey>
       <ForeignKey target='occurrences'>
-        <Attribute dbType='int'>COCCURRENCEID</Attribute>
+        <Attribute dbType='int'>coccurrenceid</Attribute>
       </ForeignKey>
     </TableAlias>
-    <TableAlias alias='habitats' tablename='THABITATS'>
+    <TableAlias alias='habitats' tablename='thabitats'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
+      <ForeignKey target='phytochoria'>
+        <Attribute dbType='int'>cphytochoriaid</Attribute>
+      </ForeignKey>
       <ForeignKey target='villages'>
-        <Attribute dbType='int'>CNEARESTVILLAGEID</Attribute>
+        <Attribute dbType='int'>cnearestvillageid</Attribute>
       </ForeignKey>
       <ForeignKey target='territories'>
-        <Attribute dbType='int'>CTERRITORYID</Attribute>
+        <Attribute dbType='int'>cterritoryid</Attribute>
       </ForeignKey>
-      <ForeignKey target='phytochoria'>
-        <Attribute dbType='int'>CPHYTOCHORIAID</Attribute>
-      </ForeignKey>
     </TableAlias>
-    <TableAlias alias='metadata' tablename='TMETADATA'>
+    <TableAlias alias='metadata' tablename='tmetadata'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='occurrences' tablename='TOCCURRENCES'>
+    <TableAlias alias='occurrences' tablename='toccurrences'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
       <ForeignKey target='habitats'>
-        <Attribute dbType='int'>CHABITATID</Attribute>
+        <Attribute dbType='int'>chabitatid</Attribute>
       </ForeignKey>
       <ForeignKey target='plants'>
-        <Attribute dbType='int'>CPLANTID</Attribute>
+        <Attribute dbType='int'>cplantid</Attribute>
       </ForeignKey>
       <ForeignKey target='publications'>
-        <Attribute dbType='int'>CPUBLICATIONSID</Attribute>
+        <Attribute dbType='int'>cpublicationsid</Attribute>
       </ForeignKey>
       <ForeignKey target='metadata'>
-        <Attribute dbType='int'>CMETADATAID</Attribute>
+        <Attribute dbType='int'>cmetadataid</Attribute>
       </ForeignKey>
     </TableAlias>
-    <TableAlias alias='phytochoria' tablename='TPHYTOCHORIA'>
+    <TableAlias alias='phytochoria' tablename='tphytochoria'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='plants' tablename='TPLANTS'>
+    <TableAlias alias='plants' tablename='tplants'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='publications' tablename='TPUBLICATIONS'>
+    <TableAlias alias='publications' tablename='tpublications'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='territories' tablename='TTERRITORIES'>
+    <TableAlias alias='territories' tablename='tterritories'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='villages' tablename='TVILLAGES'>
+    <TableAlias alias='villages' tablename='tvillages'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
   </DB>

Modified: trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/cmf_ABCD_1.20.xml
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/cmf_ABCD_1.20.xml	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/cmf_ABCD_1.20.xml	2006-06-01 16:14:46 UTC (rev 419)
@@ -83,17 +83,17 @@
             <childElements>
               <dataElement name='SourceInstitutionCode' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceInstitutionCode'>
                 <mapping>
-                  <dbAttribute attribute='CSOURCEINSTITUTIONID' tablealias='metadata' type='text' nosearch='0'/>
+                  <dbAttribute attribute='csourceinstitutionid' tablealias='metadata' type='text' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceName'>
                 <mapping>
-                  <dbAttribute attribute='CSOURCEID' tablealias='metadata' type='text' nosearch='0'/>
+                  <dbAttribute attribute='csourceid' tablealias='metadata' type='text' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceLastUpdatedDate' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/OriginalSource/SourceLastUpdatedDate'>
                 <mapping>
-                  <dbAttribute attribute='CDATEMODIFIED' tablealias='metadata' type='date' nosearch='0'/>
+                  <dbAttribute attribute='cdatemodified' tablealias='metadata' type='date' nosearch='0'/>
                 </mapping>
               </dataElement>
               <dataElement name='SourceVersion' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/OriginalSource/SourceVersion'/>
@@ -111,7 +111,7 @@
                 <childElements>
                   <dataElement name='DateSupplied' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/DateSupplied'>
                     <mapping>
-                      <dbAttribute attribute='CDATECREATE' tablealias='metadata' type='date' nosearch='0'/>
+                      <dbAttribute attribute='cdatecreate' tablealias='metadata' type='date' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' name='Supplier' min='1'>
@@ -138,7 +138,7 @@
                         <childElements>
                           <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Person/PersonName'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTNAME' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactname' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Person/SortPersonName'/>
@@ -153,7 +153,7 @@
                         <childElements>
                           <dataElement name='Address' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Addresses/Address'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTADDRESS' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactaddress' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/Addresses/Address[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -191,7 +191,7 @@
                         <childElements>
                           <dataElement name='EmailAddress' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='token' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/EmailAddresses/EmailAddress'>
                             <mapping>
-                              <dbAttribute attribute='CTECHNICALCONTACTEMAIL' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ctechnicalcontactemail' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Supplier/EmailAddresses/EmailAddress[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -235,7 +235,7 @@
                                 <childElements>
                                   <dataElement name='OrganisationCode' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Organisation/OrganisationCodes/OrganisationCode'>
                                     <mapping>
-                                      <dbAttribute attribute='COWNERORGANIZATIONABBREV' tablealias='metadata' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='cownerorganizationabbrev' tablealias='metadata' type='text' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Organisation/OrganisationCodes/OrganisationCode[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -249,7 +249,7 @@
                             <childElements>
                               <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Person/PersonName'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTNAME' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactname' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Person/SortPersonName'/>
@@ -264,7 +264,7 @@
                             <childElements>
                               <dataElement name='Address' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Addresses/Address'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTADDRESS' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactaddress' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/Addresses/Address[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -302,7 +302,7 @@
                             <childElements>
                               <dataElement name='EmailAddress' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='token' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/EmailAddresses/EmailAddress'>
                                 <mapping>
-                                  <dbAttribute attribute='CCONTENTCONTACTEMAIL' tablealias='metadata' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccontentcontactemail' tablealias='metadata' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Rights/LegalOwner/EmailAddresses/EmailAddress[@PreferredFlag]' name='PreferredFlag' w3cType='boolean' min='0'/>
@@ -352,7 +352,7 @@
                   </dataElement>
                   <dataElement name='Description' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Description'>
                     <mapping>
-                      <dbAttribute attribute='CDATASETDETAILS' tablealias='metadata' type='text' nosearch='0'/>
+                      <dbAttribute attribute='cdatasetdetails' tablealias='metadata' type='text' nosearch='0'/>
                     </mapping>
                     <attributes>
                       <attribute path='/DataSets/DataSet/DatasetDerivations/DatasetDerivation/Description[@Language]' name='Language' w3cType='language' min='0'/>
@@ -368,13 +368,13 @@
                 <childElements>
                   <dataElement name='UnitID' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitID'>
                     <mapping>
-                      <dbAttribute attribute='CID' tablealias='occurrences' type='int' nosearch='0'/>
+                      <dbAttribute attribute='cid' tablealias='occurrences' type='int' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement name='LastEditor' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/LastEditor'/>
                   <dataElement name='DateLastEdited' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='date' path='/DataSets/DataSet/Units/Unit/DateLastEdited'>
                     <mapping>
-                      <dbAttribute attribute='CUPDATEWHEN' tablealias='occurrences' type='date' nosearch='0'/>
+                      <dbAttribute attribute='cupdatewhen' tablealias='occurrences' type='date' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement name='UnitIDNumeric' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='int' path='/DataSets/DataSet/Units/Unit/UnitIDNumeric'/>
@@ -507,7 +507,7 @@
                   </dataElement>
                   <dataElement name='RecordBasis' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/RecordBasis'>
                     <mapping>
-                      <dbAttribute attribute='CRECORDBASIS' tablealias='metadata' type='text' nosearch='0'/>
+                      <dbAttribute attribute='crecordbasis' tablealias='metadata' type='text' nosearch='0'/>
                     </mapping>
                   </dataElement>
                   <dataElement path='/DataSets/DataSet/Units/Unit/NamedCollections' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' name='NamedCollections' min='0'>
@@ -535,17 +535,17 @@
                               </dataElement>
                               <dataElement name='NameAuthorYearString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/NameAuthorYearString'>
                                 <mapping>
-                                  <dbAttribute attribute='CSPECIES' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cspecies' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='ScientificNameString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameString'>
                                 <mapping>
-                                  <dbAttribute attribute='CGENUS' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cgenus' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='AuthorString' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/AuthorString'>
                                 <mapping>
-                                  <dbAttribute attribute='CSCIENTIFICNAMEAUTHOR' tablealias='plants' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='cscientificnameauthor' tablealias='plants' type='text' nosearch='0'/>
                                 </mapping>
                               </dataElement>
                               <dataElement name='IdentificationQualifier' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/IdentificationQualifier'>
@@ -565,7 +565,7 @@
                                     <childElements>
                                       <dataElement name='Genus' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameAtomized/Bacterial/Genus'>
                                         <mapping>
-                                          <dbAttribute attribute='CGENUS' tablealias='plants' type='text' nosearch='0'/>
+                                          <dbAttribute attribute='cgenus' tablealias='plants' type='text' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='Subgenus' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Identifications/Identification/TaxonIdentified/ScientificNameAtomized/Bacterial/Subgenus'/>
@@ -675,7 +675,7 @@
                         <childElements>
                           <dataElement name='Exsiccatum' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitCollectionDomain/HerbariumUnit/Exsiccatum'>
                             <mapping>
-                              <dbAttribute attribute='CHERBARIUM' tablealias='occurrences' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cherbarium' tablealias='occurrences' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                         </childElements>
@@ -989,17 +989,17 @@
                         <childElements>
                           <dataElement name='ReferenceCitation' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/ReferenceCitation'>
                             <mapping>
-                              <dbAttribute attribute='CCOLLECTIONNAME' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='ccollectionname' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='ReferenceDetail' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/ReferenceDetail'>
                             <mapping>
-                              <dbAttribute attribute='CREFERENCEDETAIL' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='creferencedetail' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='URL' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='anyURI' path='/DataSets/DataSet/Units/Unit/UnitReferences/UnitReference/URL'>
                             <mapping>
-                              <dbAttribute attribute='CURL' tablealias='publications' type='text' nosearch='0'/>
+                              <dbAttribute attribute='curl' tablealias='publications' type='text' nosearch='0'/>
                             </mapping>
                           </dataElement>
                         </childElements>
@@ -1185,7 +1185,7 @@
                           <dataElement name='DateText' min='0' max='-1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/DateText'/>
                           <dataElement name='ISODateTimeBegin' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/ISODateTimeBegin'>
                             <mapping>
-                              <dbAttribute attribute='CISODATETIMEBEGIN' tablealias='occurrences' type='date' nosearch='0'/>
+                              <dbAttribute attribute='cisodatetimebegin' tablealias='occurrences' type='date' nosearch='0'/>
                             </mapping>
                           </dataElement>
                           <dataElement name='DayNumberBegin' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='integer' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringDateTime/DayNumberBegin'/>
@@ -1207,7 +1207,7 @@
                                 <childElements>
                                   <dataElement name='OrganisationName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Organization/OrganisationName'>
                                     <mapping>
-                                      <dbAttribute attribute='CORGANIZATION' tablealias='authors' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='corganization' tablealias='authors' type='text' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Organization/OrganisationName[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1228,7 +1228,7 @@
                                 <childElements>
                                   <dataElement name='PersonName' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Person/PersonName'>
                                     <mapping>
-                                      <dbAttribute attribute='CWHOLENAME' tablealias='authors' type='text' nosearch='0'/>
+                                      <dbAttribute attribute='cwholename' tablealias='authors' type='text' nosearch='0'/>
                                     </mapping>
                                   </dataElement>
                                   <dataElement name='SortPersonName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringAgents/GatheringAgent/Person/SortPersonName'/>
@@ -1243,7 +1243,7 @@
                         <childElements>
                           <dataElement name='ProjectTitle' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/Project/ProjectTitle'>
                             <mapping>
-                              <dbAttribute attribute='CDATASETTITLE' tablealias='metadata' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cdatasettitle' tablealias='metadata' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/Project/ProjectTitle[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1346,7 +1346,7 @@
                         <childElements>
                           <dataElement name='LocalityText' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/LocalityText'>
                             <mapping>
-                              <dbAttribute attribute='CNAME' tablealias='villages' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cname' tablealias='villages' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/LocalityText[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1364,7 +1364,7 @@
                             <childElements>
                               <dataElement name='CountryName' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Country/CountryName'>
                                 <mapping>
-                                  <dbAttribute attribute='CCOUNTRY' tablealias='habitats' type='text' nosearch='0'/>
+                                  <dbAttribute attribute='ccountry' tablealias='habitats' type='text' nosearch='0'/>
                                 </mapping>
                                 <attributes>
                                   <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Country/CountryName[@Language]' name='Language' w3cType='language' min='0'/>
@@ -1457,12 +1457,12 @@
                                     <childElements>
                                       <dataElement name='LongitudeDecimal' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/LongitudeDecimal'>
                                         <mapping>
-                                          <dbAttribute attribute='CLONGITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                          <dbAttribute attribute='clongitude' tablealias='habitats' type='float' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='LatitudeDecimal' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/LatitudeDecimal'>
                                         <mapping>
-                                          <dbAttribute attribute='CLATITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                          <dbAttribute attribute='clatitude' tablealias='habitats' type='float' nosearch='0'/>
                                         </mapping>
                                       </dataElement>
                                       <dataElement name='SpatialDatum' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/SiteCoordinateSets/SiteCoordinates/CoordinatesLatLong/SpatialDatum'/>
@@ -1508,7 +1508,7 @@
                                   </dataElement>
                                   <dataElement name='MeasurementLowerValue' min='1' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='decimal' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Altitude/MeasurementAtomized/MeasurementLowerValue'>
                                     <mapping>
-                                      <dbAttribute attribute='CALTITUDE' tablealias='habitats' type='float' nosearch='0'/>
+                                      <dbAttribute attribute='caltitude' tablealias='habitats' type='float' nosearch='0'/>
                                     </mapping>
                                     <attributes>
                                       <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Altitude/MeasurementAtomized/MeasurementLowerValue[@ValueDataType]' name='ValueDataType' w3cType='string' min='0'/>
@@ -1980,7 +1980,7 @@
                           </dataElement>
                           <dataElement name='Notes' min='0' max='1' namespace='http://www.tdwg.org/schemas/abcd/1.2' w3cType='string' path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Notes'>
                             <mapping>
-                              <dbAttribute attribute='CNOTE' tablealias='habitats' type='text' nosearch='0'/>
+                              <dbAttribute attribute='cnote' tablealias='habitats' type='text' nosearch='0'/>
                             </mapping>
                             <attributes>
                               <attribute path='/DataSets/DataSet/Units/Unit/Gathering/GatheringSite/Notes[@Language]' name='Language' w3cType='language' min='0'/>

Modified: trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/provider_setup_file.xml
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/provider_setup_file.xml	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/datasources/plantLorePSWD/provider_setup_file.xml	2006-06-01 16:14:46 UTC (rev 419)
@@ -1,89 +1,89 @@
 
 <Provider xmlns='http://www.biocase.org/schemas/providersetup/1.5' adminpassword='xcvbnm'>
   <Host>
-    <User>SYSDBA</User>
+    <User>postgres</User>
     <Password>masterkey</Password>
-    <Datasource>c:\Program Files\Firebird\Firebird_1_5\Database\plantloreHIBdata.fdb</Datasource>
+    <Datasource>plantloreKovo</Datasource>
     <DB_IP>localhost</DB_IP>
-    <DBMS>firebird</DBMS>
+    <DBMS>postgres</DBMS>
   </Host>
   <DB>
     <TextEncoding>utf_8</TextEncoding>
-    <TableAlias alias='authors' tablename='TAUTHORS'>
+    <TableAlias alias='authors' tablename='tauthors'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='authorsOccurrences' tablename='TAUTHORSOCCURRENCES'>
+    <TableAlias alias='authorsOccurrences' tablename='tauthorsoccurrences'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
       <ForeignKey target='authors'>
-        <Attribute dbType='int'>CAUTHORID</Attribute>
+        <Attribute dbType='int'>cauthorid</Attribute>
       </ForeignKey>
       <ForeignKey target='occurrences'>
-        <Attribute dbType='int'>COCCURRENCEID</Attribute>
+        <Attribute dbType='int'>coccurrenceid</Attribute>
       </ForeignKey>
     </TableAlias>
-    <TableAlias alias='habitats' tablename='THABITATS'>
+    <TableAlias alias='habitats' tablename='thabitats'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
+      <ForeignKey target='phytochoria'>
+        <Attribute dbType='int'>cphytochoriaid</Attribute>
+      </ForeignKey>
       <ForeignKey target='villages'>
-        <Attribute dbType='int'>CNEARESTVILLAGEID</Attribute>
+        <Attribute dbType='int'>cnearestvillageid</Attribute>
       </ForeignKey>
       <ForeignKey target='territories'>
-        <Attribute dbType='int'>CTERRITORYID</Attribute>
+        <Attribute dbType='int'>cterritoryid</Attribute>
       </ForeignKey>
-      <ForeignKey target='phytochoria'>
-        <Attribute dbType='int'>CPHYTOCHORIAID</Attribute>
-      </ForeignKey>
     </TableAlias>
-    <TableAlias alias='metadata' tablename='TMETADATA'>
+    <TableAlias alias='metadata' tablename='tmetadata'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='occurrences' tablename='TOCCURRENCES'>
+    <TableAlias alias='occurrences' tablename='toccurrences'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
       <ForeignKey target='habitats'>
-        <Attribute dbType='int'>CHABITATID</Attribute>
+        <Attribute dbType='int'>chabitatid</Attribute>
       </ForeignKey>
       <ForeignKey target='plants'>
-        <Attribute dbType='int'>CPLANTID</Attribute>
+        <Attribute dbType='int'>cplantid</Attribute>
       </ForeignKey>
       <ForeignKey target='publications'>
-        <Attribute dbType='int'>CPUBLICATIONSID</Attribute>
+        <Attribute dbType='int'>cpublicationsid</Attribute>
       </ForeignKey>
       <ForeignKey target='metadata'>
-        <Attribute dbType='int'>CMETADATAID</Attribute>
+        <Attribute dbType='int'>cmetadataid</Attribute>
       </ForeignKey>
     </TableAlias>
-    <TableAlias alias='phytochoria' tablename='TPHYTOCHORIA'>
+    <TableAlias alias='phytochoria' tablename='tphytochoria'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='plants' tablename='TPLANTS'>
+    <TableAlias alias='plants' tablename='tplants'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='publications' tablename='TPUBLICATIONS'>
+    <TableAlias alias='publications' tablename='tpublications'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='territories' tablename='TTERRITORIES'>
+    <TableAlias alias='territories' tablename='tterritories'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
-    <TableAlias alias='villages' tablename='TVILLAGES'>
+    <TableAlias alias='villages' tablename='tvillages'>
       <PrimaryKey>
-        <Attribute dbType='int'>CID</Attribute>
+        <Attribute dbType='int'>cid</Attribute>
       </PrimaryKey>
     </TableAlias>
   </DB>

Added: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,25 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body>
+<div>
+      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
+      <br><hr color=#663333>   
+</div> 
+<div>
+    <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
+    Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
+    neusp?jete, tak kontaktujte administr?tora.</i>
+</div>
+<div align="center">
+    <br><br>
+    <a href="../index.html">HOME</a>    
+</div>
+</body>
+</html>
+

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDRecordlist.xslt
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDRecordlist.xslt	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDRecordlist.xslt	2006-06-01 16:14:46 UTC (rev 419)
@@ -4,6 +4,7 @@
 	<xsl:param name="wrapper_url"/>
 	<xsl:param name="dsa"/>
 	<xsl:param name="id"/>
+	<xsl:param name="login"/>
 	<xsl:template match="/">
 					
 				
@@ -23,7 +24,7 @@
 										</xsl:for-each>) </a>
 								</h3>
 								<p>
-									<span class="label">Last update: </span>
+									<span class="label">Posledn? aktualizace: </span>
 									<xsl:for-each select="n1:SourceLastUpdatedDate">
 										<xsl:apply-templates/>
 									</xsl:for-each>|
@@ -58,7 +59,7 @@
 											<td>
 												<!-- to link to the unit details we have to use the SourceInstitutionCode + SourceName + UnitID as GUID. Also include the wrapper_url cause might be different from the dsa  -->
 												<a>
-												<xsl:attribute name="href">details.cgi?dsa=<xsl:value-of select="$dsa"/>&amp;id=<xsl:value-of select="$id"/>&amp;wrapper_url=<xsl:value-of select="$wrapper_url"/>&amp;detail=unit&amp;SourceInstitutionCode=<xsl:value-of select="normalize-space(../../n1:OriginalSource/n1:SourceInstitutionCode)"/>&amp;SourceName=<xsl:value-of select="normalize-space(../../n1:OriginalSource/n1:SourceName)"/>&amp;UnitID=<xsl:value-of select="normalize-space(n1:UnitID)"/></xsl:attribute>
+												<xsl:attribute name="href">details.cgi?dsa=<xsl:value-of select="$dsa"/>&amp;id=<xsl:value-of select="$id"/>&amp;login=<xsl:value-of select="$login"/>&amp;wrapper_url=<xsl:value-of select="$wrapper_url"/>&amp;detail=unit&amp;SourceInstitutionCode=<xsl:value-of select="normalize-space(../../n1:OriginalSource/n1:SourceInstitutionCode)"/>&amp;SourceName=<xsl:value-of select="normalize-space(../../n1:OriginalSource/n1:SourceName)"/>&amp;UnitID=<xsl:value-of select="normalize-space(n1:UnitID)"/></xsl:attribute>
 													<xsl:for-each select="n1:UnitID">
 														<xsl:apply-templates/>
 													</xsl:for-each>
@@ -131,7 +132,7 @@
 	
 						</xsl:for-each>
 					</xsl:for-each>
-		<p style="font-size:10"><br/>Click on UnitId to get details. </p>
+		<p style="font-size:10"><br/>Pro zpobrazen? detailu klikn?te na UnitId. </p>
 	</xsl:template>
 </xsl:stylesheet>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt	2006-06-01 16:14:46 UTC (rev 419)
@@ -3,16 +3,41 @@
 	<xsl:output version="1.0" encoding="UTF-8" indent="yes" omit-xml-declaration="yes" media-type="text/html" />
 	<xsl:template match="/">
 
-					<!--      **************************************UNIT*********************************************  -->
+					<!--      **************************************DATA*********************************************  -->
 					<xsl:for-each select="n1:DataSets/n1:DataSet/n1:Units/n1:Unit">
 						<div id="Unit">
+						  						
+				<!--		<xsl:if test="n1:Identifications/n1:Identification/n1:TaxonIdentified/n1:NameAuthorYearString"> -->
+							<br/>
+							<span class="label"><b>Taxon: </b></span>
+							<xsl:value-of select="n1:Identifications/n1:Identification/n1:TaxonIdentified/n1:NameAuthorYearString"/>
+				<!--		</xsl:if>  -->
+						<br/>
+						            						
+							<span class="label"><b>Record Basis: </b></span>
+							<xsl:value-of select="n1:RecordBasis"/>						
+							<br/><br/>
+												
+            	<span class="label"><b>Village: </b></span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:NearNamedPlaces/n1:NamedPlaceRelation/n1:NearNamedPlace"/>
+					     <br/><br/>
+												            							
+							<span class="label"><b>Author (nalezce): </b></span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringAgents/n1:GatheringAgent/n1:Person/n1:PersonName"/>
+						  <br/><br/>
+												            
+							<span class="label"><b>Author (identifier): </b></span>
+							<xsl:value-of select="n1:Identifications/n1:Identification/n1:Identifier/n1:IdentifierPersonName/n1:PersonName"/>
+							<br/><br/>
+						
+						
 							<!-- *********************************/HEADER ************************************** 	-->
 							<table width="96%" border="3">
 								<tr>
 									<td>
 										<span class="style1">
 										
-<!-- ***********************************************************************+NAME****************************************************** -->												
+<!-- ************Sloupek s infem o Kytce  ***********************************************************+NAME****************************************************** -->												
 												<xsl:for-each select="n1:Identifications/n1:Identification">
 											<!--General rule for names -->
 											<!-- Avoid execution if there are no Identifications-->
@@ -265,12 +290,12 @@
 												<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:BiotopeData"/><br/>
 											</xsl:if>
 											<xsl:if test="string(n1:Gathering/n1:GatheringDateTime)">
-												<span class="label">Date: </span>
-												<xsl:value-of select="n1:Gathering/n1:GatheringDateTime"/><br/>
+												<span class="label">Year: </span>
+												<xsl:value-of select="n1:Gathering/n1:GatheringDateTime/n1:DateText"/><br/>
 											</xsl:if>
 											<xsl:if test="string(n1:Gathering/n1:Project/n1:ProjectTitle)">
 												<span class="label">Project: </span>
-												<xsl:value-of select="n1:Gathering/n1:ProjectTitle"/>
+												<xsl:value-of select="n1:Gathering/n1:Project/n1:ProjectTitle"/>
 											</xsl:if>
 
 										</td>

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,7 +2,8 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(start){
@@ -11,22 +12,27 @@
     };
 </script>
 </head>
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">                                
+   
+<div id="Content">  
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-
-<div id="Content">
-  <p><em><br>
-    <!--VAR:filter_display-->
-    </em>
-  </p>
-
   <form name="recordlist" method="post" action="recordlist.cgi">
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
     <input type="hidden" name="id" value="<!--VAR:id-->">
+    <input type="hidden" name="login" value="<!--VAR:login-->">
     <input type="hidden" name="wrapper_url" value="<!--VAR:wrapper_url-->">
     <input type="hidden" name="schema" value="<!--VAR:schema-->">
     <input type="hidden" name="filter" value="<!--VAR:filter-->">
@@ -47,9 +53,11 @@
 
 </div>
 
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+</div>
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,21 +2,34 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
 
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>N?lezov? data - vyhled?van?</h1>            
+   
 <div  id="Content">
   <p>&nbsp;</p>
   <form action="grouping.cgi" method="post" name="query">  
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
     <input type="hidden" name="id" value="<!--VAR:id-->">
+    <input type="hidden" name="login" value="<!--VAR:login-->">
     <input type="hidden" name="wrapper_url" value="<!--VAR:wrapper_url-->">
     <input type="hidden" name="schema" value="<!--VAR:schema-->">
     
@@ -57,6 +70,9 @@
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+ </div>    
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,21 +2,34 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(val){
         document.groupform.con<!--VAR:groupingCon-->.value=val;
 		document.groupform.submit();
-    };
+    };    
 </script>
 </head>
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
 
+
+<body id="page">
+<div class="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                     
+
 <div id="Content">
   <p><em><br>
   <!--VAR:filter_display--><br>
@@ -37,6 +50,7 @@
   <form name="groupform" method="post" action="recordlist.cgi">
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
     <input type="hidden" name="id" value="<!--VAR:id-->">
+    <input type="hidden" name="login" value="<!--VAR:login-->">
     <input type="hidden" name="wrapper_url" value="<!--VAR:wrapper_url-->">
     <input type="hidden" name="filter" value="<!--VAR:filter-->">
     <input type="hidden" name="start" value="0">
@@ -54,6 +68,8 @@
 </div>
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
+</div>
+</div>
 
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,7 +2,8 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(start){
@@ -11,14 +12,21 @@
     };
 </script>
 </head>
-
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-
-
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">                                
+            
 <div  id="Content">
   <p><em><br><!--VAR:filter_display--><br></em></p>
 
@@ -45,6 +53,7 @@
   <form name="recordlist" method="post" action="recordlist.cgi">
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
     <input type="hidden" name="id" value="<!--VAR:id-->">
+    <input type="hidden" name="login" value="<!--VAR:login-->">
     <input type="hidden" name="wrapper_url" value="<!--VAR:wrapper_url-->">
     <input type="hidden" name="schema" value="<!--VAR:schema-->">
     <input type="hidden" name="filter" value="<!--VAR:filter-->">
@@ -69,6 +78,9 @@
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+</div>
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,7 +2,8 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(start){
@@ -11,19 +12,23 @@
     };
 </script>
 </head>
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">                                
+   
+<div id="Content">  
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-
-<div id="Content">
-  <p><em><br>
-    <!--VAR:filter_display-->
-    </em>
-  </p>
-
   <form name="recordlist" method="post" action="recordlist.cgi">
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
     <input type="hidden" name="id" value="<!--VAR:id-->">
@@ -48,9 +53,11 @@
 
 </div>
 
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+</div>
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,16 +2,28 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
 
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>N?lezov? data - vyhled?van?</h1>            
+   
 <div  id="Content">
   <p>&nbsp;</p>
   <form action="grouping.cgi" method="post" name="query">  
@@ -58,6 +70,9 @@
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+ </div>    
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,21 +2,35 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(val){
         document.groupform.con<!--VAR:groupingCon-->.value=val;
 		document.groupform.submit();
-    };
+    };        
 </script>
 </head>
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
 
+
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>            
+   
+
 <div id="Content">
   <p><em><br>
   <!--VAR:filter_display--><br>
@@ -56,6 +70,9 @@
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+</div>
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,7 +2,8 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 <script language="JavaScript" type="text/JavaScript">
     function updateForm(start){
@@ -11,14 +12,21 @@
     };
 </script>
 </head>
-
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-
-
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">                                
+            
 <div  id="Content">
   <p><em><br><!--VAR:filter_display--><br></em></p>
 
@@ -70,6 +78,9 @@
 
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
 
+</div>
+</div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/www/index.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/index.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/index.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,23 +2,51 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="querytool/plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="querytool/plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="querytool/plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-<div>
-    <i>Toto bude ?vodn? str?nka pro N?lezovou datab?zi JBS - pov?d?n? o spole?nosti a datab?zi, aktuality, atd.</i>
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+        <div id="menuUvod"><a href="./querytool/plantlore/uvod.html"><img src="./querytool/plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./querytool/plantlore/aktuality.html"><img src="./querytool/plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./querytool/plantlore/databaze.html"><img src="./querytool/plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./querytool/plantlore/odkazy.html"><img src="./querytool/plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>Jiho?esk? pobo?ka ?esk? botanick? spole?nosti</h1>
+            Sdru?uje z?jemce o botaniku z ?ad profesion?l? i amat?r?. Byla zalo?ena dne 1. listopadu
+            1959 za ??asti jiho?esk?ch botanik?, ochran??? a z?stupc? hlavn?ho v?boru tehdy
+            ?eskoslovensk? botanick? spole?nosti p?i krajsk?m vlastiv?dn?m muzeu v ?esk?ch
+            Bud?jovic?ch jako prvn? region?ln? pobo?ka v tehdej??m ?eskoslovensku.
+            Jednou z nejd?le?it?j??ch ?innost? pobo?ky je kolektivn? floristicko-fytogeografick? pr?zkum
+            m?lo floristicky zn?m?ch oblast? ji?n?ch ?ech.<br>
+            Pobo?ka je za?t?t?na Jiho?esk?m muzeem v ?esk?ch Bud?jovic?ch s n?m? po??d? p?edn??ky,
+            exkurze pro ve?ejnost a organizuje ur?ovac? semin??e a kolektivn? floristick? pr?zkumy.
+            Pod?l? se s floristickou sekc? ?esk? botanick? spole?nosti na p??prav? celost?tn?ch
+            floristick?ch kurz? na ?zem? ji?n?ch ?ech. D?le spolupracuje s jednotliv?mi autory Kv?teny
+            ?R, kter?m poskytuje ?daje o roz???en? pr?v?zpracov?van?ch taxon?. Dopl?uje ?daje o
+            v?skytu rostlin v ji?n? ??sti ?ech do s??ov?ch map pro Fytokartografick? synt?zy ?R.
+            Spravuje knihovnu, kter? obsahuje n?kolik stovek knih a ?asopis? v?etn? rukopisn?ch prac?.
+            Spolupracuje s hornorakousk?mi botaniky v podob? spole?n?ch v?cedenn?ch ter?nn?ch setk?n?
+            p?ev??n? na ?zem? Rakouska. Postupn? je budov?na centr?ln? floristick? kartot?ka, kter?
+            zachycuje floristick? ?daje z publikovan?ch i rukopisn?ch prac? o kv?ten? ji?n? ??sti ?ech.
+            D?le vytv??? datab?zi floristick?ch z?znam?
+        </div> 
+        <br><br>
+        <a href="querytool/main.cgi?dsa=plantlore">Data pro v?echny</a><br> 
+        <a href="querytool/main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>
+        <a href="javascript:threeColumn()">ddd</a>
+        
+    </div>        
 </div>
-<div align="center">
-    <br><br>
-    <a href="querytool/main.cgi?dsa=plantlore">Data pro v?echny</a><br> 
-    <a href="querytool/main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>
-</div>
 </body>
 </html>
 

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,29 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="position.css">
+<link rel="stylesheet" type="text/css" href="styles.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+      <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>Aktuality</h1>           
+    </div>    
+</div>
+</body>
+</html>
+

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,33 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="position.css">
+<link rel="stylesheet" type="text/css" href="styles.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+        <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>N?lezov? datab?ze ?esk? botanick? spole?nosti</h1>           
+        </div> 
+        <br><br>
+        <a href="../main.cgi?dsa=plantlore">Data pro v?echny</a><br> 
+        <a href="../main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>
+    </div>    
+</div>
+</body>
+</html>
+

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,25 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body>
+<div>
+      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
+      <br><hr color=#663333>   
+</div> 
+<div>
+    <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
+    Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
+    neusp?jete, tak kontaktujte administr?tora.</i>
+</div>
+<div align="center">
+    <br><br>
+    <a href="../index.html">HOME</a>    
+</div>
+</body>
+</html>
+

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/headImage3.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/headImage3.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuAktuality2.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuAktuality2.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuDB2.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuDB2.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuEmpty3.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuEmpty3.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuOdkazy2.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuOdkazy2.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuUvod4.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/images/menuUvod4.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,29 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="position.css">
+<link rel="stylesheet" type="text/css" href="styles.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>Zaj?mav? odkazy</h1>            
+    </div>    
+</div>
+</body>
+</html>
+

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -2,42 +2,51 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./plantlore/uvod.html"><img src="./plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./plantlore/aktuality.html"><img src="./plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./plantlore/databaze.html"><img src="./plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./plantlore/odkazy.html"><img src="./plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>P?ihl??en? do n?lezov? datab?ze</h1>     
+            
+            <div align="center">
+            <br>
+            <table width="300" border="0" cellspacing="0" cellpadding="0">                
+                <form action="<!--VAR:script-->" method="post">
+                <input name="dsa" type="hidden" value="<!--VAR:dsa-->">        
+                <tr>
+                  <td>Login</td>
+                  <td><input name="login" type="text" size="40"></td>
+                </tr>
+                <tr>
+                   <td>Password</td>
+                   <td><input name="passwd" type="password" size="40"></td>
+                 </tr> 
+                 <tr>
+                   <td colspan="2" align="center"><input type="submit" name="Submit" value="Submit"></td>
+                 </tr> 
+                </form>   
+            </table>          
+            <p>
+              <!--VAR:debug-->
+            </p>
+          </div>
+                   
+    </div>    
 </div> 
-
-<div align="center">
-  <br>
-  <table width="300" border="0" cellspacing="0" cellpadding="0">
-    <tr>
-      <th scope="col" colspan="2">Please authenticate with your login and password:<br><br></th>
-    </tr>
-    <form action="<!--VAR:script-->" method="post">
-    <input name="dsa" type="hidden" value="<!--VAR:dsa-->">        
-    <tr>
-      <td>Login</td>
-      <td><input name="login" type="text" size="40"></td>
-    </tr>
-    <tr>
-       <td>Password</td>
-       <td><input name="passwd" type="password" size="40"></td>
-     </tr> 
-     <tr>
-       <td colspan="2" align="center"><input type="submit" name="Submit" value="Submit"></td>
-     </tr> 
-    </form>   
-  </table>
-
-  <p>
-    <!--VAR:debug-->
-</p>
-</div>
-
 </body>
 </html>

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,79 @@
+#page {    
+  background-color: grey;
+}
+
+#mainContainer {
+  position: absolute;
+  left: 10%; top: 0px;
+  width: 800px; height: 100%;
+  background-attachment: scroll;
+  background-color: white;
+}
+
+#head{
+  position: absolute;
+  left: 0px; top: 0px;
+  width: 800px; height: 122px;  
+  background: transparent url('./images/headImage3.gif') no-repeat;
+}
+
+#menu{
+  position: absolute;
+  left: 0px; top: 122px; 
+  width: 800px; height: 20px;   
+}
+
+#menuUvod{
+  position: absolute;
+  left: 0px; top: 0px; 
+  width: 150px; height: 20px;
+  background: transparent url('./images/menuUvod4.gif') no-repeat;
+}
+
+#menuNews{
+  position: absolute;
+  left: 151px; top: 0px;
+  width: 100px; height: 20px;  
+  background: transparent url('./images/menuAktuality2.gif') no-repeat;
+}
+
+#menuDB{
+  position: absolute;
+  left: 252px; top: 0px;  
+  width: 150px; height: 20px; 
+  background: transparent url('./images/menuDB2.gif') no-repeat;
+}
+
+#menuRef{
+  position: absolute;
+  left: 403px; top: 0px;
+  width: 100px; height: 20px;   
+  background: transparent url('./images/menuOdkazy2.gif') no-repeat;
+}
+
+#menuEmpty{
+  position: absolute;
+  left: 503px; top: 0px;
+  width: 295px; height: 20px;   
+  background: transparent url('./images/menuEmpty3.gif') no-repeat;
+}
+
+#lineLeft{
+  position: absolute;
+  left: 150px; top: 141px;
+  width: 1px; height: 75%;   
+  background-color: #DCDDDE;
+}
+
+#lineRight{
+  position: absolute;
+  left: 650px; top: 141px;
+  width: 1px; height: 75%;   
+  background-color: #DCDDDE;
+}
+
+#mainPage {
+  position: absolute;
+  left: 165px; top: 155px;
+  width: 470px; height: 75%; 
+}

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styles.css
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styles.css	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styles.css	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,175 @@
+h1 {
+text-align :center;
+font-family :"Times New Roman", serif;
+font-weight: bold;
+font-size: 13pt;
+color: #325870;
+}
+
+.mainText {
+font-family :"Times New Roman", serif;
+font-size: 10pt;
+text-align: justify;
+color: #575B5D;
+}
+
+
+
+body {
+margin:0px;
+padding:0px;
+/*font-family :"Times New Roman", serif;*/
+font-size:11pt;
+font-weight:normal;
+text-align :justify;
+background-color: grey;
+/*background-image: url(./images/sand-light.jpeg)*/
+}
+
+
+#Content {
+    margin:0px 25px;
+}
+
+#Footer {
+    /*logo biocase */
+    margin:0px 0px;
+    color: #333333;
+    padding-top: 5px;
+    padding-right: 10px;
+    padding-bottom: 5px;
+    padding-left: 10px;
+    text-align: right;
+    vertical-align: middle;
+    border: 0px solid #999999;
+    }   
+p {
+    margin:0px 0px 6px;
+  }
+
+a {
+    color:#5c81a7;
+    font-size:11px;
+    text-decoration:none;
+    font-weight:600;
+    font-family:verdana, arial, helvetica, sans-serif;
+
+    }
+a:link {
+    color:#5c81a7;
+}
+a:visited {
+    color:#5c81a7;
+}
+a:hover {
+    color:green;
+}
+.layout {
+	border: none;
+	padding: 0px;
+	height: 0px;
+	width: 0px;		
+}
+table{    
+    padding: 0px;
+    margin: 0px;
+ border-spacing: 0px;
+ border-collapse: collapse;
+
+}
+th{
+    padding-left:3px;
+    padding-right:3px;
+    padding-top:4px;
+    font-size: 12px;
+    font-weight: bold;
+    text-align: left;
+    padding-bottom: 2px;
+}
+
+tr{
+    font-size: 11px;
+}
+td{
+    padding: 1 3;    
+}
+
+h2 {
+    font-size: 16px;
+    font-weight: bold;
+    margin-bottom: 24px;
+    margin-left: 5px;
+
+}
+h3 {
+    font-size: 14px;
+    font-weight: bold;
+    margin-bottom: 12px;
+}
+h4 {
+    font-size: 11px;
+    font-weight: bold;
+    margin-bottom: 6px;
+}
+
+
+
+}
+.label {
+	font-weight: bold;
+	vertical-align: top;
+}
+
+img {
+    border: none;
+}
+.subtitleInHeader {
+    font-size: 12px;
+    font-weight: normal;
+}
+input {
+    font-family: Verdana, Arial, Helvetica, sans-serif;
+    font-size: 11px;
+
+}
+.goodstatus
+{
+    color: #009900;
+    font-weight: bold;
+}
+.badstatus
+{
+    color: #FF0000;
+    font-weight: bold;
+}
+.dependstatus
+{
+    color: #FF6600;
+    font-weight: bold;
+}
+
+.dependstatus
+{
+    color: #FF6600;
+    font-weight: bold;
+}
+
+.prefered
+{
+    color: red;
+    font-weight: bold;
+}
+
+.preferedbig
+{
+    font-size: 14px;
+    font-weight: bold;
+}
+
+
+
+.bcblue {
+    /* mix-in class for all elements that need blue background */
+    background-color:                   #91acc8;
+    }
+    

Deleted: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styly.css
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styly.css	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/styly.css	2006-06-01 16:14:46 UTC (rev 419)
@@ -1,166 +0,0 @@
-body {
-margin:0px;
-padding:0px;
-/*font-family :"Times New Roman", serif;*/
-font-size:11pt;
-font-weight:normal;
-text-align :justify;
-color:#000000;
-background-image: url(./images/sand-light.jpeg)
-}
-
-h1{
-text-align :center;
-/*font-family :"Times New Roman", serif;*/
-font-weight:bold;
-font-size:22pt;
-color:#663333;
-margin-bottom: 12px;
-}
-
-#Content {
-    margin:0px 25px;
-}
-
-#Footer {
-    /*logo biocase */
-    margin:0px 0px;
-    color: #333333;
-    padding-top: 5px;
-    padding-right: 10px;
-    padding-bottom: 5px;
-    padding-left: 10px;
-    text-align: right;
-    vertical-align: middle;
-    border: 0px solid #999999;
-    }   
-p {
-    margin:0px 0px 6px;
-  }
-
-a {
-    color:#5c81a7;
-    font-size:11px;
-    text-decoration:none;
-    font-weight:600;
-    font-family:verdana, arial, helvetica, sans-serif;
-
-    }
-a:link {
-    color:#5c81a7;
-}
-a:visited {
-    color:#5c81a7;
-}
-a:hover {
-    color:green;
-}
-.layout {
-	border: none;
-	padding: 0px;
-	height: 0px;
-	width: 0px;		
-}
-table{    
-    padding: 0px;
-    margin: 0px;
- border-spacing: 0px;
- border-collapse: collapse;
-
-}
-th{
-    padding-left:3px;
-    padding-right:3px;
-    padding-top:4px;
-    font-size: 12px;
-    font-weight: bold;
-    text-align: left;
-    padding-bottom: 2px;
-}
-
-tr{
-    font-size: 11px;
-}
-td{
-    padding: 1 3;    
-}
-
-h2 {
-    font-size: 16px;
-    font-weight: bold;
-    margin-bottom: 24px;
-    margin-left: 5px;
-
-}
-h3 {
-    font-size: 14px;
-    font-weight: bold;
-    margin-bottom: 12px;
-}
-h4 {
-    font-size: 11px;
-    font-weight: bold;
-    margin-bottom: 6px;
-}
-
-
-
-}
-.label {
-	font-weight: bold;
-	vertical-align: top;
-}
-
-img {
-    border: none;
-}
-.subtitleInHeader {
-    font-size: 12px;
-    font-weight: normal;
-}
-input {
-    font-family: Verdana, Arial, Helvetica, sans-serif;
-    font-size: 11px;
-
-}
-.goodstatus
-{
-    color: #009900;
-    font-weight: bold;
-}
-.badstatus
-{
-    color: #FF0000;
-    font-weight: bold;
-}
-.dependstatus
-{
-    color: #FF6600;
-    font-weight: bold;
-}
-
-.dependstatus
-{
-    color: #FF6600;
-    font-weight: bold;
-}
-
-.prefered
-{
-    color: red;
-    font-weight: bold;
-}
-
-.preferedbig
-{
-    font-size: 14px;
-    font-weight: bold;
-}
-
-
-
-.bcblue {
-    /* mix-in class for all elements that need blue background */
-    background-color:                   #91acc8;
-    }
-    

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,47 @@
+<html>
+<head>
+<title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link rel="stylesheet" type="text/css" href="position.css">
+<link rel="stylesheet" type="text/css" href="styles.css">
+<link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
+</head>
+
+<body id="page">
+<div id="mainContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div> 
+    <div id="mainPage">
+        <div class="mainText">        
+            <h1>Jiho?esk? pobo?ka ?esk? botanick? spole?nosti</h1>
+            Sdru?uje z?jemce o botaniku z ?ad profesion?l? i amat?r?. Byla zalo?ena dne 1. listopadu
+            1959 za ??asti jiho?esk?ch botanik?, ochran??? a z?stupc? hlavn?ho v?boru tehdy
+            ?eskoslovensk? botanick? spole?nosti p?i krajsk?m vlastiv?dn?m muzeu v ?esk?ch
+            Bud?jovic?ch jako prvn? region?ln? pobo?ka v tehdej??m ?eskoslovensku.
+            Jednou z nejd?le?it?j??ch ?innost? pobo?ky je kolektivn? floristicko-fytogeografick? pr?zkum
+            m?lo floristicky zn?m?ch oblast? ji?n?ch ?ech.<br>
+            Pobo?ka je za?t?t?na Jiho?esk?m muzeem v ?esk?ch Bud?jovic?ch s n?m? po??d? p?edn??ky,
+            exkurze pro ve?ejnost a organizuje ur?ovac? semin??e a kolektivn? floristick? pr?zkumy.
+            Pod?l? se s floristickou sekc? ?esk? botanick? spole?nosti na p??prav? celost?tn?ch
+            floristick?ch kurz? na ?zem? ji?n?ch ?ech. D?le spolupracuje s jednotliv?mi autory Kv?teny
+            ?R, kter?m poskytuje ?daje o roz???en? pr?v?zpracov?van?ch taxon?. Dopl?uje ?daje o
+            v?skytu rostlin v ji?n? ??sti ?ech do s??ov?ch map pro Fytokartografick? synt?zy ?R.
+            Spravuje knihovnu, kter? obsahuje n?kolik stovek knih a ?asopis? v?etn? rukopisn?ch prac?.
+            Spolupracuje s hornorakousk?mi botaniky v podob? spole?n?ch v?cedenn?ch ter?nn?ch setk?n?
+            p?ev??n? na ?zem? Rakouska. Postupn? je budov?na centr?ln? floristick? kartot?ka, kter?
+            zachycuje floristick? ?daje z publikovan?ch i rukopisn?ch prac? o kv?ten? ji?n? ??sti ?ech.
+            D?le vytv??? datab?zi floristick?ch z?znam?
+        </div>        
+    </div>    
+</div>
+</body>
+</html>
+

Added: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/zalohaStyles.css
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/zalohaStyles.css	2006-06-01 15:12:46 UTC (rev 418)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/zalohaStyles.css	2006-06-01 16:14:46 UTC (rev 419)
@@ -0,0 +1,175 @@
+h1 {
+text-align :center;
+font-family :"Times New Roman", serif;
+font-weight: bold;
+font-size: 13pt;
+color: #325870;
+}
+
+.mainText {
+font-family :"Times New Roman", serif;
+font-size: 10pt;
+text-align: justify;
+color: #575B5D;
+}
+
+
+
+body {
+margin:0px;
+padding:0px;
+/*font-family :"Times New Roman", serif;*/
+font-size:11pt;
+font-weight:normal;
+text-align :justify;
+background-color: grey;
+/*background-image: url(./images/sand-light.jpeg)*/
+}
+
+
+#Content {
+    margin:0px 25px;
+}
+
+#Footer {
+    /*logo biocase */
+    margin:0px 0px;
+    color: #333333;
+    padding-top: 5px;
+    padding-right: 10px;
+    padding-bottom: 5px;
+    padding-left: 10px;
+    text-align: right;
+    vertical-align: middle;
+    border: 0px solid #999999;
+    }   
+p {
+    margin:0px 0px 6px;
+  }
+
+a {
+    color:#5c81a7;
+    font-size:11px;
+    text-decoration:none;
+    font-weight:600;
+    font-family:verdana, arial, helvetica, sans-serif;
+
+    }
+a:link {
+    color:#5c81a7;
+}
+a:visited {
+    color:#5c81a7;
+}
+a:hover {
+    color:green;
+}
+.layout {
+	border: none;
+	padding: 0px;
+	height: 0px;
+	width: 0px;		
+}
+table{    
+    padding: 0px;
+    margin: 0px;
+ border-spacing: 0px;
+ border-collapse: collapse;
+
+}
+th{
+    padding-left:3px;
+    padding-right:3px;
+    padding-top:4px;
+    font-size: 12px;
+    font-weight: bold;
+    text-align: left;
+    padding-bottom: 2px;
+}
+
+tr{
+    font-size: 11px;
+}
+td{
+    padding: 1 3;    
+}
+
+h2 {
+    font-size: 16px;
+    font-weight: bold;
+    margin-bottom: 24px;
+    margin-left: 5px;
+
+}
+h3 {
+    font-size: 14px;
+    font-weight: bold;
+    margin-bottom: 12px;
+}
+h4 {
+    font-size: 11px;
+    font-weight: bold;
+    margin-bottom: 6px;
+}
+
+
+
+}
+.label {
+	font-weight: bold;
+	vertical-align: top;
+}
+
+img {
+    border: none;
+}
+.subtitleInHeader {
+    font-size: 12px;
+    font-weight: normal;
+}
+input {
+    font-family: Verdana, Arial, Helvetica, sans-serif;
+    font-size: 11px;
+
+}
+.goodstatus
+{
+    color: #009900;
+    font-weight: bold;
+}
+.badstatus
+{
+    color: #FF0000;
+    font-weight: bold;
+}
+.dependstatus
+{
+    color: #FF6600;
+    font-weight: bold;
+}
+
+.dependstatus
+{
+    color: #FF6600;
+    font-weight: bold;
+}
+
+.prefered
+{
+    color: red;
+    font-weight: bold;
+}
+
+.preferedbig
+{
+    font-size: 14px;
+    font-weight: bold;
+}
+
+
+
+.bcblue {
+    /* mix-in class for all elements that need blue background */
+    background-color:                   #91acc8;
+    }
+    



From krater at berlios.de  Thu Jun  1 21:01:39 2006
From: krater at berlios.de (krater at berlios.de)
Date: Thu, 1 Jun 2006 21:01:39 +0200
Subject: [Plantlore-dev] r420 - trunk/src/net/sf/plantlore/server
Message-ID: <200606011901.k51J1d9x014283@sheep.berlios.de>

Author: krater
Date: 2006-06-01 21:01:34 +0200 (Thu, 01 Jun 2006)
New Revision: 420

Modified:
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Support for a short database identifier added.

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-01 16:14:46 UTC (rev 419)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-01 19:01:34 UTC (rev 420)
@@ -85,21 +85,33 @@
     private static final int UPDATE = 2;
     private static final int DELETE = 3;
     
+    private String databaseConnectionPrefix;
+    
     /**
      * Creates a new instance of HibernateDBLayer.
      * 
      *  @param undertaker The object that is responsible for cleanup if the client crashes. 
      */
     public HibernateDBLayer(Undertaker undertaker) {
-    	this();
-    	this.undertaker = undertaker;
-    	logger.debug("      completely completed.");
+    	this(undertaker, "");
     }
     
+    public HibernateDBLayer(String databaseConnectionPrefix) {
+    	this(null, databaseConnectionPrefix);
+    }
+    
+    public HibernateDBLayer() {
+    	this(null, "");
+    }
+    
+    
     /** Creates a new instance of HibernateDBLayer */
-    public HibernateDBLayer() {
-        logger = Logger.getLogger(this.getClass().getPackage().getName());                
-        logger.debug("      Constructing a new HibernateDBLayer ...");        
+    public HibernateDBLayer(Undertaker undertaker, String databaseConnectionPrefix) {
+        logger = Logger.getLogger(this.getClass().getPackage().getName());
+        logger.debug("      Constructing a new HibernateDBLayer ...");
+        
+        this.databaseConnectionPrefix = databaseConnectionPrefix;
+        
         // Initialize pool of result sets, initial capacity = INITIAL POOL SIZE
         results = new Hashtable<Integer, ScrollableResults>(INITIAL_POOL_SIZE); 
         // Initialize maximum result id
@@ -108,6 +120,9 @@
         // Table of all living queries, initial capacity = INITIAL_POOL_SIZE
         queries = new Hashtable<SelectQuery, SelectQuery>(INITIAL_POOL_SIZE);        
         sessions = new Hashtable<SelectQuery, Session>(INITIAL_POOL_SIZE);
+        
+        this.undertaker = undertaker;
+        
         logger.debug("      completed.");
     }
     
@@ -139,7 +154,7 @@
         }
         // TODO: this should be loaded from a configuration file on the server
         // We are temporarily using this for DB authetication and user athentication as well
-        cfg.setProperty("hibernate.connection.url", dbID);
+        cfg.setProperty("hibernate.connection.url", databaseConnectionPrefix + dbID);
         cfg.setProperty("hibernate.connection.username", user);
         cfg.setProperty("hibernate.connection.password", password);
         try {



From krater at berlios.de  Thu Jun  1 21:28:14 2006
From: krater at berlios.de (krater at berlios.de)
Date: Thu, 1 Jun 2006 21:28:14 +0200
Subject: [Plantlore-dev] r421 - trunk/src/net/sf/plantlore/server
Message-ID: <200606011928.k51JSEnb025283@sheep.berlios.de>

Author: krater
Date: 2006-06-01 21:28:13 +0200 (Thu, 01 Jun 2006)
New Revision: 421

Modified:
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Support for a different DatabaseUser and DatabasePassword added.

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-01 19:01:34 UTC (rev 420)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-01 19:28:13 UTC (rev 421)
@@ -86,6 +86,8 @@
     private static final int DELETE = 3;
     
     private String databaseConnectionPrefix;
+    private String databaseMasterUser;
+    private String databaseMasterPassword;
     
     /**
      * Creates a new instance of HibernateDBLayer.
@@ -93,20 +95,24 @@
      *  @param undertaker The object that is responsible for cleanup if the client crashes. 
      */
     public HibernateDBLayer(Undertaker undertaker) {
-    	this(undertaker, "");
+    	this(undertaker, "", null, null);
     }
     
     public HibernateDBLayer(String databaseConnectionPrefix) {
-    	this(null, databaseConnectionPrefix);
+    	this(null, databaseConnectionPrefix, null, null);
     }
     
     public HibernateDBLayer() {
-    	this(null, "");
+    	this(null, "", null, null);
     }
     
     
     /** Creates a new instance of HibernateDBLayer */
-    public HibernateDBLayer(Undertaker undertaker, String databaseConnectionPrefix) {
+    public HibernateDBLayer(
+    		Undertaker undertaker, 
+    		String databaseConnectionPrefix,
+    		String user,
+    		String password) {
         logger = Logger.getLogger(this.getClass().getPackage().getName());
         logger.debug("      Constructing a new HibernateDBLayer ...");
         
@@ -122,6 +128,8 @@
         sessions = new Hashtable<SelectQuery, Session>(INITIAL_POOL_SIZE);
         
         this.undertaker = undertaker;
+        databaseMasterUser = user;
+        databaseMasterPassword = password;
         
         logger.debug("      completed.");
     }
@@ -153,10 +161,13 @@
             throw ex;
         }
         // TODO: this should be loaded from a configuration file on the server
-        // We are temporarily using this for DB authetication and user athentication as well
+        // TEMPORARY CODE STARTS HERE
+        databaseMasterUser = user;
+        databaseMasterPassword = password;
+        // TEMPORARY CODE ENDS HERE
         cfg.setProperty("hibernate.connection.url", databaseConnectionPrefix + dbID);
-        cfg.setProperty("hibernate.connection.username", user);
-        cfg.setProperty("hibernate.connection.password", password);
+        cfg.setProperty("hibernate.connection.username", databaseMasterUser);
+        cfg.setProperty("hibernate.connection.password", databaseMasterPassword);
         try {
             // Build session factory
             sessionFactory = cfg.buildSessionFactory();



From fraktalek at berlios.de  Thu Jun  1 22:03:02 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Thu, 1 Jun 2006 22:03:02 +0200
Subject: [Plantlore-dev] r422 - in trunk/src/net/sf/plantlore: client l10n
Message-ID: <200606012003.k51K32RR022828@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-01 22:03:00 +0200 (Thu, 01 Jun 2006)
New Revision: 422

Modified:
   trunk/src/net/sf/plantlore/client/AddEdit.java
   trunk/src/net/sf/plantlore/client/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/AddEditView.form
   trunk/src/net/sf/plantlore/client/AddEditView.java
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
Implemented [ Bug #7708 ] Easier adding of many occurrences for the same authors.
In the process fixed AddEdit so that it is again possible not to enter not required items.



Modified: trunk/src/net/sf/plantlore/client/AddEdit.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-01 20:03:00 UTC (rev 422)
@@ -106,6 +106,7 @@
     //helper variable to avoid recursion potentially caused by phytCode and phytName updates
     private Boolean skipUpdate = false;
     private Boolean editMode = false;
+    private Boolean preloadAuthors = false;
     
     
     /** Creates a new instance of AddEdit */
@@ -1215,7 +1216,8 @@
     //the not null values are forced by calling checkData before store()
     public void clear() {
         logger.debug("Clearing add model");
-        clearAuthors();
+        if (! preloadAuthors)
+            clearAuthors();
         habitatDescription = null;
         year = Calendar.getInstance().get(Calendar.YEAR);
         habitatNote = null;
@@ -1235,7 +1237,10 @@
         setChanged();
         notifyObservers("CLEAR");
     }
-    
+ 
+    public void setPreloadAuthorsEnabled(boolean preloadAuthors) {
+        this.preloadAuthors = preloadAuthors;
+    }
 }
 
 

Modified: trunk/src/net/sf/plantlore/client/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-01 20:03:00 UTC (rev 422)
@@ -31,6 +31,7 @@
 import javax.swing.AbstractAction;
 import javax.swing.DefaultCellEditor;
 import javax.swing.JButton;
+import javax.swing.JCheckBox;
 import javax.swing.JComboBox;
 import javax.swing.JFormattedTextField;
 import javax.swing.JOptionPane;
@@ -116,6 +117,8 @@
         view.cancelButton.addMouseListener(new CancelButtonListener());
         view.helpButton.addMouseListener(new HelpButtonListener());
         view.checklistButton.setAction(new ChecklistAction());
+        
+        view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
     }
     
     
@@ -509,5 +512,11 @@
         }
     }//HelpButtonListener
     
+    class PreloadCheckBox implements ActionListener {
+        public void actionPerformed(ActionEvent e) {
+            JCheckBox cb = (JCheckBox) e.getSource();
+            model.setPreloadAuthorsEnabled(cb.isSelected());
+        }        
+    }
 }
 

Modified: trunk/src/net/sf/plantlore/client/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-01 20:03:00 UTC (rev 422)
@@ -278,10 +278,10 @@
           </Border>
         </Property>
         <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
-          <Dimension value="[800, 490]"/>
+          <Dimension value="[800, 510]"/>
         </Property>
         <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
-          <Dimension value="[800, 490]"/>
+          <Dimension value="[800, 510]"/>
         </Property>
       </Properties>
       <Constraints>
@@ -293,31 +293,31 @@
       <Layout>
         <DimensionLayout dim="0">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Group type="102" alignment="0" attributes="0">
-                  <EmptySpace min="-2" pref="12" max="-2" attributes="0"/>
-                  <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="1" attributes="0">
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="1" attributes="0">
                       <Group type="102" alignment="0" attributes="0">
                           <Component id="jPanel4" min="-2" max="-2" attributes="1"/>
                           <EmptySpace max="-2" attributes="0"/>
-                          <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
+                          <Component id="jPanel10" max="32767" attributes="0"/>
                       </Group>
                       <Group type="102" alignment="1" attributes="0">
-                          <Group type="103" groupAlignment="0" max="-2" attributes="0">
-                              <Group type="102" attributes="1">
+                          <Group type="103" groupAlignment="0" attributes="0">
+                              <Group type="102" attributes="0">
                                   <Component id="jPanel1" min="-2" max="-2" attributes="1"/>
                                   <EmptySpace max="-2" attributes="0"/>
                                   <Component id="jPanel6" max="32767" attributes="1"/>
                               </Group>
-                              <Component id="jPanel5" min="-2" max="-2" attributes="1"/>
+                              <Component id="jPanel5" max="32767" attributes="1"/>
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
-                          <Group type="103" groupAlignment="0" attributes="0">
+                          <Group type="103" groupAlignment="1" attributes="0">
                               <Component id="jPanel9" max="32767" attributes="1"/>
                               <Component id="jPanel7" alignment="0" max="32767" attributes="1"/>
                           </Group>
                       </Group>
                   </Group>
-                  <EmptySpace max="-2" attributes="0"/>
+                  <EmptySpace min="-2" pref="2" max="-2" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -325,26 +325,23 @@
           <Group type="103" groupAlignment="0" attributes="0">
               <Group type="102" alignment="0" attributes="0">
                   <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jPanel5" max="32767" attributes="1"/>
                       <Component id="jPanel7" max="32767" attributes="1"/>
+                      <Component id="jPanel5" min="-2" max="-2" attributes="1"/>
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jPanel9" max="32767" attributes="1"/>
                       <Component id="jPanel6" max="32767" attributes="1"/>
-                      <Component id="jPanel1" alignment="1" max="32767" attributes="1"/>
+                      <Group type="103" alignment="0" groupAlignment="0" max="-2" attributes="0">
+                          <Component id="jPanel1" max="32767" attributes="1"/>
+                          <Component id="jPanel9" alignment="0" max="32767" attributes="1"/>
+                      </Group>
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
-                  <Group type="103" groupAlignment="1" attributes="0">
-                      <Group type="102" attributes="0">
-                          <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace min="-2" pref="288" max="-2" attributes="0"/>
-                      </Group>
-                      <Group type="102" alignment="1" attributes="0">
-                          <Component id="jPanel4" min="-2" max="-2" attributes="1"/>
-                          <EmptySpace min="-2" pref="274" max="-2" attributes="0"/>
-                      </Group>
+                  <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                      <Component id="jPanel4" min="0" pref="168" max="32767" attributes="1"/>
+                      <Component id="jPanel10" alignment="0" max="32767" attributes="1"/>
                   </Group>
+                  <EmptySpace pref="283" max="32767" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -382,8 +379,8 @@
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="dayLabel" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="dayChooser" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
+                      <Component id="dayChooser" pref="140" max="32767" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -810,7 +807,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane4" pref="190" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="200" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1062,7 +1059,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane5" pref="190" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="200" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1098,11 +1095,70 @@
             </Container>
           </SubComponents>
         </Container>
-        <Component class="javax.swing.JLabel" name="requiredInfoLabel">
+        <Container class="javax.swing.JPanel" name="jPanel10">
           <Properties>
-            <Property name="text" type="java.lang.String" value="requiredInfoLabel"/>
+            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+              <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+                <TitledBorder title="Info">
+                  <ResourceString PropertyName="titleX" bundle="net/sf/plantlore/l10n/Plantlore.properties" key="AddEdit.InfoPanel" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </TitledBorder>
+              </Border>
+            </Property>
           </Properties>
-        </Component>
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="314" max="32767" attributes="0"/>
+                  </Group>
+                  <Group type="102" alignment="1" attributes="0">
+                      <EmptySpace pref="241" max="32767" attributes="0"/>
+                      <Component id="preloadAuthorsCheckBox" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="90" max="32767" attributes="0"/>
+                      <Component id="preloadAuthorsCheckBox" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Component class="javax.swing.JLabel" name="requiredInfoLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="requiredInfoLabel"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JCheckBox" name="preloadAuthorsCheckBox">
+              <Properties>
+                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+                  <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="AddEdit.PreloadAuthors" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </Property>
+                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
+                    <EmptyBorder bottom="0" left="0" right="0" top="0"/>
+                  </Border>
+                </Property>
+                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                  <Insets value="[0, 0, 0, 0]"/>
+                </Property>
+              </Properties>
+              <AuxValues>
+                <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+              </AuxValues>
+            </Component>
+          </SubComponents>
+        </Container>
       </SubComponents>
     </Container>
     <Container class="javax.swing.JPanel" name="jPanel8">

Modified: trunk/src/net/sf/plantlore/client/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-01 20:03:00 UTC (rev 422)
@@ -44,7 +44,7 @@
     private Logger logger;
     private static final int DIALOG_WIDTH = 890;
     private static final String REQUIRED_STRING  = "(*)";
-    private boolean visible=false;
+    private boolean visible=true;
     private AddEdit model;
     private boolean inEditMode = false;
     private boolean inAddMode = true;
@@ -69,6 +69,12 @@
         //if (inEditMode)
         //    loadComponentData();
         
+        if (inEditMode)
+            preloadAuthorsCheckBox.setVisible(false);
+        else
+            preloadAuthorsCheckBox.setVisible(true);
+        
+        extendedButton.setVisible(false); //the button is of no use... the analysis didn't count on NotNull items in the extended part...
         jPanel3.setVisible(visible);
         jPanel2.setPreferredSize(new Dimension(DIALOG_WIDTH,190));
         jPanel8.setPreferredSize(new Dimension(DIALOG_WIDTH,50));
@@ -145,7 +151,9 @@
         jPanel9 = new javax.swing.JPanel();
         jScrollPane5 = new javax.swing.JScrollPane();
         occurrenceNoteArea = new javax.swing.JTextArea();
+        jPanel10 = new javax.swing.JPanel();
         requiredInfoLabel = new javax.swing.JLabel();
+        preloadAuthorsCheckBox = new javax.swing.JCheckBox();
         jPanel8 = new javax.swing.JPanel();
         cancelButton = new javax.swing.JButton();
         okButton = new javax.swing.JButton();
@@ -269,8 +277,8 @@
         getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);
 
         jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.ExtendedData"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
-        jPanel3.setMinimumSize(new java.awt.Dimension(800, 490));
-        jPanel3.setPreferredSize(new java.awt.Dimension(800, 490));
+        jPanel3.setMinimumSize(new java.awt.Dimension(800, 510));
+        jPanel3.setPreferredSize(new java.awt.Dimension(800, 510));
         jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.TimePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
         monthLabel.setText("Month:");
 
@@ -303,8 +311,8 @@
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(dayLabel)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(dayChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .add(dayChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
+                .addContainerGap())
         );
         jPanel4Layout.setVerticalGroup(
             jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -478,7 +486,7 @@
             jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel7Layout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
+                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                 .addContainerGap())
         );
         jPanel7Layout.setVerticalGroup(
@@ -587,7 +595,7 @@
             jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel9Layout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
+                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                 .addContainerGap())
         );
         jPanel9Layout.setVerticalGroup(
@@ -597,51 +605,77 @@
                 .addContainerGap())
         );
 
+        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(L10n.getString("AddEdit.InfoPanel")));
         requiredInfoLabel.setText("requiredInfoLabel");
 
+        preloadAuthorsCheckBox.setText(L10n.getString("AddEdit.PreloadAuthors"));
+        preloadAuthorsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
+        preloadAuthorsCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
+
+        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
+        jPanel10.setLayout(jPanel10Layout);
+        jPanel10Layout.setHorizontalGroup(
+            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel10Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(requiredInfoLabel)
+                .addContainerGap(314, Short.MAX_VALUE))
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
+                .addContainerGap(241, Short.MAX_VALUE)
+                .add(preloadAuthorsCheckBox)
+                .addContainerGap())
+        );
+        jPanel10Layout.setVerticalGroup(
+            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel10Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(requiredInfoLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 90, Short.MAX_VALUE)
+                .add(preloadAuthorsCheckBox)
+                .addContainerGap())
+        );
+
         org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
         jPanel3.setLayout(jPanel3Layout);
         jPanel3Layout.setHorizontalGroup(
             jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(jPanel3Layout.createSequentialGroup()
-                .add(12, 12, 12)
-                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jPanel3Layout.createSequentialGroup()
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                         .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(requiredInfoLabel))
-                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
-                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
+                        .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(jPanel3Layout.createSequentialGroup()
+                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel3Layout.createSequentialGroup()
                                 .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                 .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-                            .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                             .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                            .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
-                .addContainerGap())
+                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
+                .add(2, 2, 2))
         );
         jPanel3Layout.setVerticalGroup(
             jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel3Layout.createSequentialGroup()
                 .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
+                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                        .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
-                    .add(jPanel3Layout.createSequentialGroup()
-                        .add(requiredInfoLabel)
-                        .add(288, 288, 288))
-                    .add(jPanel3Layout.createSequentialGroup()
-                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                        .add(274, 274, 274))))
+                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
+                    .add(jPanel4, 0, 168, Short.MAX_VALUE)
+                    .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .addContainerGap(283, Short.MAX_VALUE))
         );
         getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);
 
@@ -808,7 +842,10 @@
     }
     
     public void clearComponentData() {
-        resetAuthorModel(); initAuthorTable();
+        if ( ! preloadAuthorsCheckBox.isSelected() ) {
+            resetAuthorModel(); initAuthorTable();
+        }
+        
         townComboBox.setSelectedIndex(-1);
         taxonTextArea.setText("");
         descriptionArea.setText("");
@@ -973,7 +1010,7 @@
                 if (model.getVillages() == null)
                     townComboBox.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    townComboBox.setModel(new DefaultComboBoxModel(model.getVillages()));;                
+                    townComboBox.setModel(new DefaultComboBoxModel(model.getVillages()));          
             }
             
             if (s.equals("TERRITORIES_CHANGED")) {
@@ -981,7 +1018,7 @@
                 if (model.getTerritories() == null)
                     territoryNameCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    territoryNameCombo.setModel(new DefaultComboBoxModel(model.getTerritories()));;                                
+                    territoryNameCombo.setModel(new DefaultComboBoxModel(model.getTerritories()));                            
             }
 
             if (s.equals("PHYTNAMES_CHANGED")) {
@@ -989,7 +1026,7 @@
                 if (model.getPhytNames() == null)
                     phytNameCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    phytNameCombo.setModel(new DefaultComboBoxModel(model.getPhytNames()));;                                
+                    phytNameCombo.setModel(new DefaultComboBoxModel(model.getPhytNames()));                         
             }
 
             if (s.equals("PHYTCODES_CHANGED")) {
@@ -997,7 +1034,7 @@
                 if (model.getPhytCodes() == null)
                     phytCodeCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    phytCodeCombo.setModel(new DefaultComboBoxModel(model.getPhytCodes()));;                                
+                    phytCodeCombo.setModel(new DefaultComboBoxModel(model.getPhytCodes()));                          
             }
 
             if (s.equals("COUNTRIES_CHANGED")) {
@@ -1005,7 +1042,8 @@
                 if (model.getCountries() == null)
                     phytCountryCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    phytCountryCombo.setModel(new DefaultComboBoxModel(model.getCountries()));;                                
+                    phytCountryCombo.setModel(new DefaultComboBoxModel(model.getCountries()));       
+                phytCountryCombo.insertItemAt(model.EMPTY_STRING,0);
             }
             
             if (s.equals("SOURCES_CHANGED")) {
@@ -1013,7 +1051,8 @@
                 if (model.getSources() == null)
                     sourceCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    sourceCombo.setModel(new DefaultComboBoxModel(model.getSources()));;                                
+                    sourceCombo.setModel(new DefaultComboBoxModel(model.getSources()));
+                sourceCombo.insertItemAt(model.EMPTY_STRING,0);
             }
             
             if (s.equals("PUBLICATIONS_CHANGED")) {
@@ -1021,7 +1060,8 @@
                 if (model.getPublications() == null)
                     publicationCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    publicationCombo.setModel(new DefaultComboBoxModel(model.getPublications()));;                                
+                    publicationCombo.setModel(new DefaultComboBoxModel(model.getPublications()));
+                publicationCombo.insertItemAt(model.EMPTY_PAIR,0);
             }
 
             if (s.equals("PROJECTS_CHANGED")) {
@@ -1029,7 +1069,7 @@
                 if (model.getProjects() == null)
                     projectCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                 else
-                    projectCombo.setModel(new DefaultComboBoxModel(model.getProjects()));;                                
+                    projectCombo.setModel(new DefaultComboBoxModel(model.getProjects()));                              
             }
             
         }
@@ -1055,6 +1095,7 @@
     protected javax.swing.JLabel herbariumLabel;
     protected javax.swing.JTextField herbariumTextField;
     protected javax.swing.JPanel jPanel1;
+    private javax.swing.JPanel jPanel10;
     protected javax.swing.JPanel jPanel2;
     private javax.swing.JPanel jPanel3;
     protected javax.swing.JPanel jPanel4;
@@ -1083,6 +1124,7 @@
     protected javax.swing.JComboBox phytNameCombo;
     protected javax.swing.JLabel phytNameLabel;
     protected javax.swing.JLabel placeDescriptionLabel;
+    protected javax.swing.JCheckBox preloadAuthorsCheckBox;
     protected javax.swing.JComboBox projectCombo;
     protected javax.swing.JLabel projectLabel;
     protected javax.swing.JComboBox publicationCombo;

Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-01 20:03:00 UTC (rev 422)
@@ -394,7 +394,9 @@
     }
     
     public String[] loadAuthorRoles() throws DBLayerException, RemoteException {
-        SelectQuery sq;
+        authorRoles = new String[] {"collected","revised","other"};
+        return authorRoles;
+        /*SelectQuery sq;
         int resultid;
         int resultsCount;
         Object[] records;
@@ -416,7 +418,7 @@
         }
         logger.info("Loaded: "+resultsCount+" author roles.");
         setChanged(); notifyObservers("LOADED");
-        return authorRoles;
+        return authorRoles;*/
     }
 
     public Pair<String, Integer>[] loadVillages() throws DBLayerException, RemoteException {

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-01 20:03:00 UTC (rev 422)
@@ -1133,3 +1133,7 @@
 
 Message.FillingDialogs=Storing data into dialogs
 Overview.MenuOccurrences=Occurrences
+
+AddEdit.PreloadAuthors=remember entered authors
+
+AddEdit.InfoPanel=Info

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-01 20:03:00 UTC (rev 422)
@@ -767,3 +767,7 @@
 Message.FillingDialogs=Ukl\u00E1d\u00E1m data do dialog\u016F
 
 Overview.MenuOccurrences=&N\u00E1lezy
+
+AddEdit.PreloadAuthors=zapamatuj si zadan\u00E9 autory
+
+AddEdit.InfoPanel=Info

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-01 19:28:13 UTC (rev 421)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-01 20:03:00 UTC (rev 422)
@@ -835,3 +835,7 @@
 Message.FillingDialogs=Constructing dialogs
 
 Overview.MenuOccurrences=Occurrences
+
+AddEdit.PreloadAuthors=remember entered authors
+
+AddEdit.InfoPanel=Info



From admin at berlios.de  Thu Jun  1 22:03:32 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 1 Jun 2006 22:03:32 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7708] Easier adding of many occurrences for the same authors
Message-ID: <200606012003.k51K3Wtv010889@unicorn.berlios.de>

Bug #7708, was updated on 2006-Jun-01 15:30
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 7
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Easier adding of many occurrences for the same authors

Details: In case an author is for example for a week in terrain he has a lot of data from diverse localities. Because the author is always the same for these data it would be nice if the Add dialog was able to remember authors of the last added occurrence.

Follow-Ups:

Date: 2006-Jun-01 22:03
By: fraktalek

Comment:
Implemented in revision 422. 
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7708&group_id=5975


From admin at berlios.de  Fri Jun  2 00:19:11 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 00:19:11 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7717] Rights not implemented
Message-ID: <200606012219.k51MJBgf016680@unicorn.berlios.de>

Bug #7717, was updated on 2006-Jun-02 00:19
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 1
Submitted by: fraktalek
Assigned to : none
Summary: Rights not implemented

Details: !!!

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7717&group_id=5975


From admin at berlios.de  Fri Jun  2 00:20:11 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 00:20:11 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7717] Rights not implemented
Message-ID: <200606012220.k51MKBLL016786@unicorn.berlios.de>

Bug #7717, was updated on 2006-Jun-02 00:19
Here is a current snapshot of the bug.

Project: Plantlore
Category: General
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: fraktalek
Assigned to : none
Summary: Rights not implemented

Details: !!!

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7717&group_id=5975


From kovo at berlios.de  Fri Jun  2 02:24:19 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Fri, 2 Jun 2006 02:24:19 +0200
Subject: [Plantlore-dev] r423 - trunk/lib
Message-ID: <200606020024.k520OJSR031733@sheep.berlios.de>

Author: kovo
Date: 2006-06-02 02:23:38 +0200 (Fri, 02 Jun 2006)
New Revision: 423

Added:
   trunk/lib/jaybird-full-2.1.0.jar
Log:
New version of JayBird JDBC driver for Firebird. Encoding should work with this version and connection strings with ?lc_ctype=UTF8

Added: trunk/lib/jaybird-full-2.1.0.jar
===================================================================
(Binary files differ)


Property changes on: trunk/lib/jaybird-full-2.1.0.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From tkovarik at gmail.com  Fri Jun  2 02:25:27 2006
From: tkovarik at gmail.com (Tomas Kovarik)
Date: Fri, 2 Jun 2006 02:25:27 +0200
Subject: [Plantlore-dev] Kodovanie v Plantlore
Message-ID: <ea88f1620606011725w32f0325cm436b3277d4c01e58@mail.gmail.com>

Caute,

riesili sme este teraz vecer s Jakubom ten problem s kodovanim (v GUI
klientovi, nie v BioCASE). Zistili sme, ze problem je v JDBC driveri, ktory
sam nevie spravne urcit kodovanie, preto je nutne zadat mu ho explicitne.
Aby Plantlore s Firebirdom fungovala so spravnym kodovanim je treba pouzit
takyto connection string (s prislusnym hostname a nazvom databaze)

jdbc:firebirdsql:
natalka.kolej.mff.cuni.cz/3050:/data/plantloreHIBdataUTF.fdb?lc_ctype=UTF8

Skusal som ci nieco podobne nejde spravit aj s MySQL. Nasiel som ze tam sa
to kodovanie zadava do toho connection stringu takto:

jdbc:mysql://localhost:3306/plantlorenew?characterEncoding=UTF-8
alebo
jdbc:mysql://localhost:3306/plantlorenew?useUnicode=true&characterEncoding=UTF-8

Bohuzial mi to s tou mojou MySQL databazou nepomohlo, mam ale podozrenie ze
nie je spravne vytvorena (lebo aj v phpMyAdmine sa zobrazuju ceske znaky
blbo).

Na to, aby vam to fungovalo musite upgradnut JDBC driver k Firebirdu - na
JayBird ver. 2.1.0. Commitol som novu verziu do SVNka, nezabudnite updatnut
a upravit si nastavenia kniznic projektu (zmenilo sa meno toho jaru!)

Majte sa

Kovo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060602/578a317b/attachment.html>

From kovo at berlios.de  Fri Jun  2 04:29:20 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Fri, 2 Jun 2006 04:29:20 +0200
Subject: [Plantlore-dev] r424 - trunk/analysis/database
Message-ID: <200606020229.k522TKQs025621@sheep.berlios.de>

Author: kovo
Date: 2006-06-02 04:29:15 +0200 (Fri, 02 Jun 2006)
New Revision: 424

Added:
   trunk/analysis/database/CreateDB_MySQL.sql
   trunk/analysis/database/CreateDB_Postgre.sql
Modified:
   trunk/analysis/database/DBModel_postgres.sql
   trunk/analysis/database/DBmodel_MySQL.sql
Log:
Updated scripts for creating table structure. DBmodel_* files now include data for the THISTORYCOLUMN table. Added scripts to create the database.

Added: trunk/analysis/database/CreateDB_MySQL.sql
===================================================================
--- trunk/analysis/database/CreateDB_MySQL.sql	2006-06-02 00:23:38 UTC (rev 423)
+++ trunk/analysis/database/CreateDB_MySQL.sql	2006-06-02 02:29:15 UTC (rev 424)
@@ -0,0 +1 @@
+CREATE DATABASE `plantlore` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
\ No newline at end of file

Added: trunk/analysis/database/CreateDB_Postgre.sql
===================================================================
--- trunk/analysis/database/CreateDB_Postgre.sql	2006-06-02 00:23:38 UTC (rev 423)
+++ trunk/analysis/database/CreateDB_Postgre.sql	2006-06-02 02:29:15 UTC (rev 424)
@@ -0,0 +1,4 @@
+CREATE DATABASE plantlore
+  WITH OWNER = postgres
+       ENCODING = 'UNICODE'
+       TABLESPACE = pg_default;
\ No newline at end of file

Modified: trunk/analysis/database/DBModel_postgres.sql
===================================================================
--- trunk/analysis/database/DBModel_postgres.sql	2006-06-02 00:23:38 UTC (rev 423)
+++ trunk/analysis/database/DBModel_postgres.sql	2006-06-02 02:29:15 UTC (rev 424)
@@ -1,7 +1,8 @@
 /*************************************************************/
 /*							     */
 /* SQL script for creating Plantlore database for PostgreSQL */
-/* 		Version: 4.4. 2006			     */
+/* 		Version: 02.6. 2006			     */
+/*	    Tested with PostgreSQL 8.0.3		     */
 /*							     */
 /*************************************************************/
 SET client_encoding = 'UNICODE';
@@ -12,16 +13,17 @@
 
 SET default_with_oids = true;
 
+/* Table: TLASTDATAVERSION */
 CREATE TABLE TLASTDATAVERSION (
     CID                  INTEGER NOT NULL,
     CDATE                DATE NOT NULL,
-    CPLANTSVERSION    INTEGER DEFAULT 0 NOT NULL,
+    CPLANTSVERSION    	 INTEGER DEFAULT 0 NOT NULL,
     CVILLAGESVERSION     INTEGER DEFAULT 0 NOT NULL,
     CPHYTOCHORIAVERSION  INTEGER DEFAULT 0 NOT NULL,
     CTERRITORYVERSION    INTEGER DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TAUTHORS, Owner: SYSDBA */
+/* Table: TAUTHORS */
 CREATE TABLE TAUTHORS (
     CID               SERIAL NOT NULL,    
     CWHOLENAME        VARCHAR(50) NOT NULL,
@@ -36,7 +38,7 @@
     CDELETE           SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TAUTHORSOCCURRENCES, Owner: SYSDBA */
+/* Table: TAUTHORSOCCURRENCES */
 CREATE TABLE TAUTHORSOCCURRENCES (
     CAUTHORID          SERIAL NOT NULL,
     COCCURRENCEID      INTEGER NOT NULL,
@@ -46,7 +48,7 @@
     CDELETE           SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: THABITATS, Owner: SYSDBA */
+/* Table: THABITATS */
 CREATE TABLE THABITATS (
     CID                SERIAL NOT NULL,
     CTERRITORYID       INTEGER NOT NULL,
@@ -62,7 +64,7 @@
     CDELETE            SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: THISTORY, Owner: SYSDBA */
+/* Table: THISTORY */
 CREATE TABLE THISTORY (
         CID       SERIAL NOT NULL,
         CCOLUMNID INTEGER NOT NULL,
@@ -71,7 +73,7 @@
         CNEWVALUE VARCHAR(4096),
 PRIMARY KEY (CID));
 
-/* Table: THISTORYCHANGE, Owner: SYSDBA */
+/* Table: THISTORYCHANGE */
 CREATE TABLE THISTORYCHANGE (
     CID            SERIAL NOT NULL,
     COCCURRENCEID  INTEGER  DEFAULT 0,
@@ -82,14 +84,14 @@
     CWHO           INTEGER NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: THISTORYCOLUMN, Owner: SYSDBA */
+/* Table: THISTORYCOLUMN */
 CREATE TABLE THISTORYCOLUMN (
     CID          SERIAL NOT NULL,
     CTABLENAME   VARCHAR(20) NOT NULL,
     CCOLUMNNAME  VARCHAR(30),
 PRIMARY KEY (CID));
 
-/* Table: TMETADATA, Owner: SYSDBA */
+/* Table: TMETADATA */
 CREATE TABLE TMETADATA (
     CID                       SERIAL NOT NULL,
     CTECHNICALCONTACTNAME     VARCHAR(50) NOT NULL,
@@ -110,7 +112,7 @@
     CDELETE                   SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TOCCURRENCES, Owner: SYSDBA */
+/* Table: TOCCURRENCES */
 CREATE TABLE TOCCURRENCES (
     CID                SERIAL NOT NULL,
     CUNITIDDB          VARCHAR(30) NOT NULL,
@@ -134,14 +136,14 @@
     CDELETE            SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TPHYTOCHORIA, Owner: SYSDBA */
+/* Table: TPHYTOCHORIA */
 CREATE TABLE TPHYTOCHORIA (
     CID    SERIAL NOT NULL,
     CCODE  VARCHAR(5) NOT NULL,
     CNAME  VARCHAR(50) NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TPLANTS, Owner: SYSDBA */
+/* Table: TPLANTS */
 CREATE TABLE TPLANTS (
     CID                    SERIAL NOT NULL,
     CSURVEYTAXID           VARCHAR(20) NOT NULL,
@@ -155,7 +157,7 @@
 PRIMARY KEY (CID));
 
 
-/* Table: TPUBLICATIONS, Owner: SYSDBA */
+/* Table: TPUBLICATIONS */
 CREATE TABLE TPUBLICATIONS (
     CID                         SERIAL NOT NULL,
     CCOLLECTIONNAME             VARCHAR(30),
@@ -170,7 +172,7 @@
     CDELETE                     SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TRIGHT, Owner: SYSDBA */
+/* Table: TRIGHT */
 CREATE TABLE TRIGHT (
     CID             SERIAL NOT NULL,
     CADMINISTRATOR  SMALLINT DEFAULT 0 NOT NULL,
@@ -180,13 +182,13 @@
     CADD            SMALLINT DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TTERRITORIES, Owner: SYSDBA */
+/* Table: TTERRITORIES */
 CREATE TABLE TTERRITORIES (
     CID    SERIAL NOT NULL,
     CNAME  VARCHAR(100) NOT NULL,
 PRIMARY KEY (CID));
 
-/* Table: TUSER, Owner: SYSDBA */
+/* Table: TUSER */
 CREATE TABLE TUSER (
     CID          SERIAL NOT NULL,
     CLOGIN       VARCHAR(20) NOT NULL,
@@ -203,7 +205,7 @@
 PRIMARY KEY (CID));
 
 
-/* Table: TVILLAGES, Owner: SYSDBA */
+/* Table: TVILLAGES */
 CREATE TABLE TVILLAGES (
     CID    SERIAL NOT NULL,
     CNAME  VARCHAR(50) NOT NULL,
@@ -245,53 +247,65 @@
 
 ALTER TABLE TPUBLICATIONS ADD FOREIGN KEY (CCREATEWHO) REFERENCES TUSER (CID);
 
+CREATE USER plantlore
+  PASSWORD 'plantlore'
+  NOCREATEDB NOCREATEUSER;
 
-/* Grant role for this database */
+CREATE USER www
+  ENCRYPTED PASSWORD 'plantlore'
+  NOCREATEDB NOCREATEUSER;
 
-/* Role: BOTANIK, Owner: SYSDBA 
-CREATE ROLE defaultAdmin;
-CREATE ROLE defaultUser;
-CREATE ROLE WWW;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORSOCCURRENCES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THABITATS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORY TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCHANGE TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCOLUMN TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TMETADATA TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TOCCURRENCES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPHYTOCHORIA TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPLANTS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TTERRITORIES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TUSER TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TRIGHT TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TVILLAGES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPUBLICATIONS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TLASTDATAVERSION TO plantlore;
 
-Grant permissions for this database 
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORSOCCURRENCES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THABITATS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORY TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCHANGE TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCOLUMN TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TMETADATA TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TOCCURRENCES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPHYTOCHORIA TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPLANTS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TTERRITORIES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TUSER TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TRIGHT TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TVILLAGES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPUBLICATIONS TO ROLE defaultAdmin;
-GRANT defaultAdmin TO LADA;
-GRANT defaultAdmin TO SYSDBA;
-*/
+GRANT SELECT ON TAUTHORS TO www;
+GRANT SELECT ON TAUTHORSOCCURRENCES TO www;
+GRANT SELECT ON THABITATS TO www;
+GRANT SELECT ON THISTORY TO www;
+GRANT SELECT ON THISTORYCHANGE TO www;
+GRANT SELECT ON THISTORYCOLUMN TO www;
+GRANT SELECT ON TMETADATA TO www;
+GRANT SELECT ON TOCCURRENCES TO www;
+GRANT SELECT ON TPHYTOCHORIA TO www;
+GRANT SELECT ON TPLANTS TO www;
+GRANT SELECT ON TTERRITORIES TO www;
+GRANT SELECT ON TUSER TO www;
+GRANT SELECT ON TRIGHT TO www;
+GRANT SELECT ON TVILLAGES TO www;
+GRANT SELECT ON TPUBLICATIONS TO www;
+GRANT SELECT ON TLASTDATAVERSION TO www;
+
+
 /* View: TAUTHORREVISION */
-/*
 CREATE VIEW TAUTHORREVISION(
     CID,
     COCCURRENCEID,
     CWHOLENAME,
     CEMAIL,
     CADDRESS,
-    CRESULTREVISION,
     CDAY,
     CMONTH,
     CYEAR)
 AS
-select AO.CID, AO.coccurrenceid, A.cwholename, A.CEMAIL, A.CADDRESS, AO.cresultrevisition, O.cdaycollected, O.cmonthcollected, O.cyearcollected
-from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO JOIN toccurrences O  ON (A.CID = AO.cauthorid) ON (AO.coccurrenceid = O.cid)
-WHERE AO.crole = 'revision'
-;
-*/
+select AO.CID, AO.coccurrenceid, A.cwholename, A.CEMAIL, A.CADDRESS, O.cdaycollected, O.cmonthcollected, O.cyearcollected
+from (TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON A.CID = AO.cauthorid) JOIN toccurrences O ON AO.coccurrenceid = O.cid
+WHERE AO.crole = 'revision';
+
 /* View: TAUTHORCOLLECT */
-/*
 CREATE VIEW TAUTHORCOLLECT(
     CID,    
     COCCURRENCEID,
@@ -301,13 +315,11 @@
     CADDRESS)
 AS
 select AO.CID, AO.coccurrenceid, A.CWHOLENAME, A.CORGANIZATION, A.CEMAIL, A.CADDRESS
-from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON (A.CID = AO.cauthorid)
-WHERE AO.crole = 'collect'
-;
-*/
+from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON A.CID = AO.cauthorid
+WHERE AO.crole = 'collect';
+
 /* View: TAUTHORIDENTIFY */
-/*
-CREATE VIEW TAUTHORIDENTIFY(
+CREATE OR REPLACE VIEW TAUTHORIDENTIFY (
     CID,
     COCCURRENCEID,
     CWHOLENAME,
@@ -315,7 +327,75 @@
     CADDRESS)
 AS
 select AO.CID, AO.coccurrenceid, A.CWHOLENAME, A.CEMAIL, A.CADDRESS
-from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON (A.CID = AO.cauthorid)
-WHERE AO.crole = 'identify'
-;
-*/
+from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON A.CID = AO.cauthorid
+WHERE AO.crole = 'identify';
+
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (1, 'AUTHOROCCURRENCE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (2, 'OCCURRENCE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (3, 'HABITAT', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (4, 'AUTHOR', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (5, 'METADATA', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (6, 'PUBLICATION', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (7, 'TERRITORY', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (8, 'VILLAGE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (9, 'PHYTOCHORION', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (10, 'AUTHOROCCURRENCE', 'author');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (11, 'AUTHOROCCURRENCE', 'role');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (12, 'AUTHOROCCURRENCE', 'resultRevision');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (13, 'OCCURRENCE', 'plant');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (14, 'OCCURRENCE', 'yearCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (15, 'OCCURRENCE', 'monthCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (16, 'OCCURRENCE', 'dayCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (17, 'OCCURRENCE', 'timeCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (18, 'OCCURRENCE', 'dataSource');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (19, 'OCCURRENCE', 'publication');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (20, 'OCCURRENCE', 'herbarium');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (21, 'OCCURRENCE', 'metadata');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (22, 'OCCURRENCE', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (23, 'HABITAT', 'territory');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (24, 'HABITAT', 'phytochorion');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (25, 'HABITAT', 'nearestVillage');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (26, 'HABITAT', 'quadrant');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (27, 'HABITAT', 'description');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (28, 'HABITAT', 'country');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (29, 'HABITAT', 'altitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (30, 'HABITAT', 'latitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (31, 'HABITAT', 'longitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (32, 'HABITAT', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (33, 'AUTHOR', 'wholeName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (34, 'AUTHOR', 'organization');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (35, 'AUTHOR', 'role');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (36, 'AUTHOR', 'address');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (37, 'AUTHOR', 'phoneNumber');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (38, 'AUTHOR', 'email');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (39, 'AUTHOR', 'url');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (40, 'AUTHOR', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (41, 'METADATA', 'technicalContactName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (42, 'METADATA', 'technicalContactAddress');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (43, 'METADATA', 'technicalContactEmail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (44, 'METADATA', 'contentContactName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (45, 'METADATA', 'contentContactAddress');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (46, 'METADATA', 'contentContactEmail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (47, 'METADATA', 'dataSetTitle');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (48, 'METADATA', 'dataSetDetails');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (49, 'METADATA', 'sourceInstitutionId');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (50, 'METADATA', 'sourceId');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (51, 'METADATA', 'ownerOrganizationAbbrev');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (52, 'METADATA', 'dateCreate');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (53, 'METADATA', 'dateModified');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (54, 'METADATA', 'recordBasis');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (55, 'METADATA', 'biotopeText');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (56, 'METADATA', 'versionPlantsFile');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (57, 'PUBLICATION', 'collectionName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (58, 'PUBLICATION', 'collectionYearPublication');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (59, 'PUBLICATION', 'journalName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (60, 'PUBLICATION', 'journalAuthorName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (61, 'PUBLICATION', 'referenceCitation');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (62, 'PUBLICATION', 'referenceDetail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (63, 'PUBLICATION', 'url');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (64, 'PUBLICATION', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (65, 'VILLAGE', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (66, 'TERRITORY', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (67, 'PHYTOCHORIA', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (68, 'PHYTOCHORIA', 'code');
+

Modified: trunk/analysis/database/DBmodel_MySQL.sql
===================================================================
--- trunk/analysis/database/DBmodel_MySQL.sql	2006-06-02 00:23:38 UTC (rev 423)
+++ trunk/analysis/database/DBmodel_MySQL.sql	2006-06-02 02:29:15 UTC (rev 424)
@@ -1,3 +1,11 @@
+/********************************************************/
+/*							*/
+/* SQL script for creating Plantlore database for MySQL */
+/* 		Version: 02.6. 2006			*/
+/*	     Tested with MySQL 4.1.14			*/
+/*							*/
+/********************************************************/
+
 CREATE TABLE TLASTDATAVERSION (
     CID                  INTEGER NOT NULL,
     CDATE                DATE NOT NULL,
@@ -7,40 +15,6 @@
     CTERRITORYVERSION    INTEGER DEFAULT 0 NOT NULL,
 PRIMARY KEY (CID));
 
-CREATE TABLE TAUTHORS (
-    CID               INTEGER NOT NULL auto_increment,    
-    CWHOLENAME        VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    CORGANIZATION     VARCHAR(50) CHARACTER SET UTF8,
-    CTELEPHONENUMBER  VARCHAR(20) CHARACTER SET UTF8,
-    CROLE             VARCHAR(30) CHARACTER SET UTF8,
-    CADDRESS          VARCHAR(255) CHARACTER SET UTF8,
-    CEMAIL            VARCHAR(100) CHARACTER SET UTF8,
-    CURL              VARCHAR(255) CHARACTER SET UTF8,
-    CNOTE             VARCHAR(4096) CHARACTER SET UTF8,
-    CCRATEWHO         INTEGER NOT NULL,
-    CDELETE           SMALLINT DEFAULT 0,
-PRIMARY KEY (CID),
-FOREIGN KEY (CCREATEWHO) REFERENCES TUSER(CID));
-
-CREATE TABLE TMETADATA (
-    CID                       INTEGER NOT NULL auto_increment,
-    CTECHNICALCONTACTNAME     VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    CTECHNICALCONTACTEMAIL    VARCHAR(100) CHARACTER SET UTF8,
-    CTECHNICALCONTACTADDRESS  VARCHAR(255) CHARACTER SET UTF8,
-    CCONTENTCONTACTNAME       VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    CCONTENTCONTACTEMAIL      VARCHAR(100) CHARACTER SET UTF8,
-    CCONTENTCONTACTADDRESS    VARCHAR(255) CHARACTER SET UTF8,
-    CDATASETTITLE             VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    CDATASETDETAILS           VARCHAR(255) CHARACTER SET UTF8,
-    CSOURCEINSTITUTIONID      VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    CSOURCEID                 VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
-    COWNERORGANIZATIONABBREV  VARCHAR(50) CHARACTER SET UTF8,
-    CDATECREATE               TIMESTAMP NOT NULL,
-    CDATEMODIFIED             TIMESTAMP NOT NULL,
-    CRECORDBASIS              VARCHAR(15) CHARACTER SET UTF8,
-    CBIOTOPETEXT              VARCHAR(50) CHARACTER SET UTF8,    
-PRIMARY KEY (CID));
-
 CREATE TABLE TPLANTS (
     CID                    INTEGER NOT NULL auto_increment,
     CSURVEYTAXID           VARCHAR(20) CHARACTER SET UTF8 NOT NULL,
@@ -53,30 +27,6 @@
     CNOTE                  VARCHAR(255) CHARACTER SET UTF8,
 PRIMARY KEY (CID));
 
-CREATE TABLE TPUBLICATIONS (
-    CID                         INTEGER NOT NULL auto_increment,
-    CCOLLECTIONNAME             VARCHAR(30) CHARACTER SET UTF8,
-    CCOLLECTIONYEARPUBLICATION  SMALLINT,
-    CJOURNALNAME                VARCHAR(60) CHARACTER SET UTF8,
-    CJOURNALAUTHORNAME          VARCHAR(30) CHARACTER SET UTF8,
-    CREFERENCECITATION          VARCHAR(255) NOT NULL,
-    CREFERENCEDETAIL            VARCHAR(20) CHARACTER SET UTF8,
-    CURL                        VARCHAR(100) CHARACTER SET UTF8,
-    CNOTE                       VARCHAR(4096) CHARACTER SET UTF8,
-    CCRATEWHO                   INTEGER NOT NULL,
-    CDELETE                     SMALLINT DEFAULT 0,
-PRIMARY KEY (CID),
-FOREIGN KEY (CCREATEWHO) REFERENCES TUSER(CID));
-
-CREATE TABLE TRIGHT (
-    CID             INTEGER NOT NULL auto_increment,
-    CADMINISTRATOR  SMALLINT DEFAULT 0 NOT NULL,
-    CEDITALL        SMALLINT DEFAULT 0 NOT NULL,
-    CEDITGROUP      VARCHAR(4096) CHARACTER SET UTF8,
-    CSEECOLUMNS     VARCHAR(4096) CHARACTER SET UTF8,
-    CADD            SMALLINT DEFAULT 0 NOT NULL,
-PRIMARY KEY (CID));
-
 CREATE TABLE TTERRITORIES (
     CID    INTEGER NOT NULL auto_increment,
     CNAME  VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
@@ -93,6 +43,15 @@
     CNAME  VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
 PRIMARY KEY (CID));
 
+CREATE TABLE TRIGHT (
+    CID             INTEGER NOT NULL auto_increment,
+    CADMINISTRATOR  SMALLINT DEFAULT 0 NOT NULL,
+    CEDITALL        SMALLINT DEFAULT 0 NOT NULL,
+    CEDITGROUP      VARCHAR(4096) CHARACTER SET UTF8,
+    CSEECOLUMNS     VARCHAR(4096) CHARACTER SET UTF8,
+    CADD            SMALLINT DEFAULT 0 NOT NULL,
+PRIMARY KEY (CID));
+
 CREATE TABLE TUSER (
     CID          INTEGER NOT NULL auto_increment,
     CLOGIN       VARCHAR(20) CHARACTER SET UTF8 NOT NULL,
@@ -103,12 +62,62 @@
     CEMAIL       VARCHAR(50) CHARACTER SET UTF8,
     CADDRESS     VARCHAR(255) CHARACTER SET UTF8,
     CCREATEWHEN  TIMESTAMP NOT NULL,
-    CDROPWHEN    TIMESTAMP,
+    CDROPWHEN    TIMESTAMP NULL DEFAULT NULL,
     CRIGHTID     INTEGER NOT NULL ,
     CNOTE        VARCHAR(4096) CHARACTER SET UTF8,
 PRIMARY KEY (CID),
 FOREIGN KEY (CRIGHTID) REFERENCES tright(CID));
 
+CREATE TABLE TMETADATA (
+    CID                       INTEGER NOT NULL auto_increment,
+    CTECHNICALCONTACTNAME     VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    CTECHNICALCONTACTEMAIL    VARCHAR(100) CHARACTER SET UTF8,
+    CTECHNICALCONTACTADDRESS  VARCHAR(255) CHARACTER SET UTF8,
+    CCONTENTCONTACTNAME       VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    CCONTENTCONTACTEMAIL      VARCHAR(100) CHARACTER SET UTF8,
+    CCONTENTCONTACTADDRESS    VARCHAR(255) CHARACTER SET UTF8,
+    CDATASETTITLE             VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    CDATASETDETAILS           VARCHAR(255) CHARACTER SET UTF8,
+    CSOURCEINSTITUTIONID      VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    CSOURCEID                 VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    COWNERORGANIZATIONABBREV  VARCHAR(50) CHARACTER SET UTF8,
+    CDATECREATE               TIMESTAMP NOT NULL,
+    CDATEMODIFIED             TIMESTAMP NOT NULL,
+    CRECORDBASIS              VARCHAR(15) CHARACTER SET UTF8,
+    CBIOTOPETEXT              VARCHAR(50) CHARACTER SET UTF8,    
+    CDELETE                   SMALLINT DEFAULT 0,
+PRIMARY KEY (CID));
+
+CREATE TABLE TPUBLICATIONS (
+    CID                         INTEGER NOT NULL auto_increment,
+    CCOLLECTIONNAME             VARCHAR(30) CHARACTER SET UTF8,
+    CCOLLECTIONYEARPUBLICATION  SMALLINT,
+    CJOURNALNAME                VARCHAR(60) CHARACTER SET UTF8,
+    CJOURNALAUTHORNAME          VARCHAR(30) CHARACTER SET UTF8,
+    CREFERENCECITATION          VARCHAR(255) NOT NULL,
+    CREFERENCEDETAIL            VARCHAR(20) CHARACTER SET UTF8,
+    CURL                        VARCHAR(100) CHARACTER SET UTF8,
+    CNOTE                       VARCHAR(4096) CHARACTER SET UTF8,
+    CCREATEWHO                  INTEGER NOT NULL,
+    CDELETE                     SMALLINT DEFAULT 0,
+PRIMARY KEY (CID),
+FOREIGN KEY (CCREATEWHO) REFERENCES TUSER(CID));
+
+CREATE TABLE TAUTHORS (
+    CID               INTEGER NOT NULL auto_increment,    
+    CWHOLENAME        VARCHAR(50) CHARACTER SET UTF8 NOT NULL,
+    CORGANIZATION     VARCHAR(50) CHARACTER SET UTF8,
+    CTELEPHONENUMBER  VARCHAR(20) CHARACTER SET UTF8,
+    CROLE             VARCHAR(30) CHARACTER SET UTF8,
+    CADDRESS          VARCHAR(255) CHARACTER SET UTF8,
+    CEMAIL            VARCHAR(100) CHARACTER SET UTF8,
+    CURL              VARCHAR(255) CHARACTER SET UTF8,
+    CNOTE             VARCHAR(4096) CHARACTER SET UTF8,
+    CCREATEWHO         INTEGER NOT NULL,
+    CDELETE           SMALLINT DEFAULT 0,
+PRIMARY KEY (CID),
+FOREIGN KEY (CCREATEWHO) REFERENCES TUSER(CID));
+
 CREATE TABLE THABITATS (
     CID                INTEGER NOT NULL auto_increment,
     CTERRITORYID       INTEGER NOT NULL,
@@ -183,7 +192,6 @@
     CWHEN          TIMESTAMP NOT NULL,
     CWHO           INTEGER NOT NULL,
 PRIMARY KEY (CID),
-FOREIGN KEY (COCCURRENCEID) REFERENCES TOCCURRENCES(CID),
 FOREIGN KEY (CWHO) REFERENCES TUSER(CID));
 
 CREATE TABLE THISTORY (
@@ -196,36 +204,119 @@
 FOREIGN KEY (CCOLUMNID) REFERENCES THISTORYCOLUMN(CID),
 FOREIGN KEY (CCHANGEID) REFERENCES THISTORYCHANGE(CID));
 
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (1, 'AUTHOROCCURRENCE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (2, 'OCCURRENCE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (3, 'HABITAT', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (4, 'AUTHOR', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (5, 'METADATA', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (6, 'PUBLICATION', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (7, 'TERRITORY', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (8, 'VILLAGE', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (9, 'PHYTOCHORION', NULL);
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (10, 'AUTHOROCCURRENCE', 'author');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (11, 'AUTHOROCCURRENCE', 'role');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (12, 'AUTHOROCCURRENCE', 'resultRevision');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (13, 'OCCURRENCE', 'plant');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (14, 'OCCURRENCE', 'yearCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (15, 'OCCURRENCE', 'monthCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (16, 'OCCURRENCE', 'dayCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (17, 'OCCURRENCE', 'timeCollected');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (18, 'OCCURRENCE', 'dataSource');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (19, 'OCCURRENCE', 'publication');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (20, 'OCCURRENCE', 'herbarium');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (21, 'OCCURRENCE', 'metadata');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (22, 'OCCURRENCE', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (23, 'HABITAT', 'territory');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (24, 'HABITAT', 'phytochorion');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (25, 'HABITAT', 'nearestVillage');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (26, 'HABITAT', 'quadrant');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (27, 'HABITAT', 'description');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (28, 'HABITAT', 'country');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (29, 'HABITAT', 'altitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (30, 'HABITAT', 'latitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (31, 'HABITAT', 'longitude');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (32, 'HABITAT', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (33, 'AUTHOR', 'wholeName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (34, 'AUTHOR', 'organization');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (35, 'AUTHOR', 'role');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (36, 'AUTHOR', 'address');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (37, 'AUTHOR', 'phoneNumber');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (38, 'AUTHOR', 'email');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (39, 'AUTHOR', 'url');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (40, 'AUTHOR', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (41, 'METADATA', 'technicalContactName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (42, 'METADATA', 'technicalContactAddress');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (43, 'METADATA', 'technicalContactEmail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (44, 'METADATA', 'contentContactName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (45, 'METADATA', 'contentContactAddress');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (46, 'METADATA', 'contentContactEmail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (47, 'METADATA', 'dataSetTitle');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (48, 'METADATA', 'dataSetDetails');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (49, 'METADATA', 'sourceInstitutionId');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (50, 'METADATA', 'sourceId');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (51, 'METADATA', 'ownerOrganizationAbbrev');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (52, 'METADATA', 'dateCreate');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (53, 'METADATA', 'dateModified');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (54, 'METADATA', 'recordBasis');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (55, 'METADATA', 'biotopeText');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (56, 'METADATA', 'versionPlantsFile');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (57, 'PUBLICATION', 'collectionName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (58, 'PUBLICATION', 'collectionYearPublication');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (59, 'PUBLICATION', 'journalName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (60, 'PUBLICATION', 'journalAuthorName');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (61, 'PUBLICATION', 'referenceCitation');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (62, 'PUBLICATION', 'referenceDetail');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (63, 'PUBLICATION', 'url');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (64, 'PUBLICATION', 'note');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (65, 'VILLAGE', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (66, 'TERRITORY', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (67, 'PHYTOCHORIA', 'name');
+INSERT INTO thistorycolumn (cid, ctablename, ccolumnname) VALUES (68, 'PHYTOCHORIA', 'code');
 
+/* CREATE USER was added in MySQL 5.0.2 therefore this was not tested... */
 
-/**********************************ZATIM NEUPRAVENO PRO MYSQL*******************/
-/* Grant role for this database */
+/*
+CREATE USER 'plantlore' IDENTIFIED BY PASSWORD 'plantlore';
+CREATE USER 'www' IDENTIFIED BY PASSWORD 'www';
 
-/* Role: BOTANIK, Owner: SYSDBA */
-CREATE ROLE defaultAdmin;
-CREATE ROLE defaultUser;
-CREATE ROLE WWW;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORSOCCURRENCES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THABITATS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORY TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCHANGE TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCOLUMN TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TMETADATA TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TOCCURRENCES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPHYTOCHORIA TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPLANTS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TTERRITORIES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TUSER TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TRIGHT TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TVILLAGES TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPUBLICATIONS TO plantlore;
+GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TLASTDATAVERSION TO plantlore;
 
-/* Grant permissions for this database */
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TAUTHORSOCCURRENCES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THABITATS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORY TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCHANGE TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON THISTORYCOLUMN TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TMETADATA TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TOCCURRENCES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPHYTOCHORIA TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPLANTS TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TTERRITORIES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TUSER TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TRIGHT TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TVILLAGES TO ROLE defaultAdmin;
-GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON TPUBLICATIONS TO ROLE defaultAdmin;
-GRANT defaultAdmin TO LADA;
-GRANT defaultAdmin TO SYSDBA;
+GRANT SELECT ON TAUTHORS TO www;
+GRANT SELECT ON TAUTHORSOCCURRENCES TO www;
+GRANT SELECT ON THABITATS TO www;
+GRANT SELECT ON THISTORY TO www;
+GRANT SELECT ON THISTORYCHANGE TO www;
+GRANT SELECT ON THISTORYCOLUMN TO www;
+GRANT SELECT ON TMETADATA TO www;
+GRANT SELECT ON TOCCURRENCES TO www;
+GRANT SELECT ON TPHYTOCHORIA TO www;
+GRANT SELECT ON TPLANTS TO www;
+GRANT SELECT ON TTERRITORIES TO www;
+GRANT SELECT ON TUSER TO www;
+GRANT SELECT ON TRIGHT TO www;
+GRANT SELECT ON TVILLAGES TO www;
+GRANT SELECT ON TPUBLICATIONS TO www;
+GRANT SELECT ON TLASTDATAVERSION TO www;
+*/
 
-/* View: TAUTHORREVISION */
+/* CREATE VIEW was added in MySQL 5.0.1 therefore this was not tested ... was MySQL a database system prior to 5.0? */
+
+/*
 CREATE VIEW TAUTHORREVISION(
     CID,
     COCCURRENCEID,
@@ -239,10 +330,8 @@
 AS
 select AO.CID, AO.coccurrenceid, A.cwholename, A.CEMAIL, A.CADDRESS, AO.CNOTE, O.cdaycollected, O.cmonthcollected, O.cyearcollected
 from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO JOIN toccurrences O  ON (A.CID = AO.cauthorid) ON (AO.coccurrenceid = O.cid)
-WHERE AO.crole = 'revision'
-;
+WHERE AO.crole = 'revision';
 
-/* View: TAUTHORCOLLECT */
 CREATE VIEW TAUTHORCOLLECT(
     CID,    
     COCCURRENCEID,
@@ -253,10 +342,8 @@
 AS
 select AO.CID, AO.coccurrenceid, A.CWHOLENAME, A.CORGANIZATION, A.CEMAIL, A.CADDRESS
 from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON (A.CID = AO.cauthorid)
-WHERE AO.crole = 'collect'
-;
+WHERE AO.crole = 'collect';
 
-/* View: TAUTHORIDENTIFY */
 CREATE VIEW TAUTHORIDENTIFY(
     CID,
     COCCURRENCEID,
@@ -266,5 +353,5 @@
 AS
 select AO.CID, AO.coccurrenceid, A.CWHOLENAME, A.CEMAIL, A.CADDRESS
 from TAUTHORS A JOIN TAUTHORSOCCURRENCES AO ON (A.CID = AO.cauthorid)
-WHERE AO.crole = 'identify'
-;
+WHERE AO.crole = 'identify';
+*/



From tkovarik at gmail.com  Fri Jun  2 04:31:54 2006
From: tkovarik at gmail.com (Tomas Kovarik)
Date: Fri, 2 Jun 2006 04:31:54 +0200
Subject: [Plantlore-dev] Kodovanie v Plantlore - MySQL
Message-ID: <ea88f1620606011931g4f2cbb12g35df07050878eb14@mail.gmail.com>

Funguje to aj v MySQL (verzia 4.1.14). Connection string je
jdbc:mysql://localhost:3306/plantlore?characterEncoding=UTF-8

Kovo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060602/3e9b87f3/attachment.html>

From admin at berlios.de  Fri Jun  2 04:38:51 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 04:38:51 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7718] Add Help and Cancel buttons to login windows
Message-ID: <200606020238.k522cpaL014360@unicorn.berlios.de>

Bug #7718, was updated on 2006-Jun-02 04:38
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Open
Resolution: None
Bug Group: RFE
Priority: 3
Submitted by: tkovarik
Assigned to : krater
Summary: Add Help and Cancel buttons to login windows

Details: Add Help and Cancel buttons to Select DB window and Connect to <selected database> window.
User should be able to access help when logging in and it is nice to have a chance to close (cancel) the dialog (other than the cross in the upper right corner)

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7718&group_id=5975


From kovo at berlios.de  Fri Jun  2 06:25:14 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Fri, 2 Jun 2006 06:25:14 +0200
Subject: [Plantlore-dev] r425 - in trunk/src/net/sf/plantlore: client client/authors client/history client/metadata client/publications client/user common
Message-ID: <200606020425.k524PE2H002139@sheep.berlios.de>

Author: kovo
Date: 2006-06-02 06:25:09 +0200 (Fri, 02 Jun 2006)
New Revision: 425

Modified:
   trunk/src/net/sf/plantlore/client/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/AddEditView.form
   trunk/src/net/sf/plantlore/client/AddEditView.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/Plantlore.java
   trunk/src/net/sf/plantlore/client/SearchCtrl.java
   trunk/src/net/sf/plantlore/client/SearchView.form
   trunk/src/net/sf/plantlore/client/SearchView.java
   trunk/src/net/sf/plantlore/client/authors/AddAuthorCtrl.java
   trunk/src/net/sf/plantlore/client/authors/AddAuthorView.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
   trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.form
   trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.java
   trunk/src/net/sf/plantlore/client/history/HistoryCtrl.java
   trunk/src/net/sf/plantlore/client/history/HistoryView.form
   trunk/src/net/sf/plantlore/client/history/HistoryView.java
   trunk/src/net/sf/plantlore/client/history/WholeHistoryCtrl.java
   trunk/src/net/sf/plantlore/client/history/WholeHistoryView.java
   trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataCtrl.java
   trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.form
   trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.java
   trunk/src/net/sf/plantlore/client/metadata/MetadataManagerCtrl.java
   trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.form
   trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.java
   trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java
   trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java
   trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java
   trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java
   trunk/src/net/sf/plantlore/client/user/AddEditUserCtrl.java
   trunk/src/net/sf/plantlore/client/user/AddEditUserView.java
   trunk/src/net/sf/plantlore/client/user/UserManagerCtrl.java
   trunk/src/net/sf/plantlore/client/user/UserManagerView.form
   trunk/src/net/sf/plantlore/client/user/UserManagerView.java
   trunk/src/net/sf/plantlore/common/PlantloreHelp.java
Log:
[Bug #7666] Help cannot be invoked from modal dialog. Help framework rewritten. It is no longer required to create actionListeners since JavaHelp creates them automatically. All help buttons using previous help version were updated. Help key activation (F1) was added as well. How to use new functionality:
public static void addButtonHelp(String section, Component button) - Display help when the given button is pressed (automatically creates listener)
public static void addComponentHelp(String section, Component comp) - Add context-sensitive help for a generic component.
public static void addKeyHelp(String section, Component comp) - Display help when default help key is pressed (F1 on Windows). Help is displayed in case 
"comp" has focus. To display help for the whole dialog (focus is anywhere in the dialog) use addKeyHelp(section, this.getRootPane())

Modified: trunk/src/net/sf/plantlore/client/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -115,7 +115,6 @@
         view.extendedButton.addMouseListener(new ExtendedButtonListener());
         view.okButton.addMouseListener(new OkButtonListener());
         view.cancelButton.addMouseListener(new CancelButtonListener());
-        view.helpButton.addMouseListener(new HelpButtonListener());
         view.checklistButton.setAction(new ChecklistAction());
         
         view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
@@ -504,13 +503,6 @@
             view.setVisible(false);
         }
     }//CancelButtonListener
-
-    class HelpButtonListener extends MouseAdapter {
-        public void mouseClicked(MouseEvent e) {
-            logger.info("Help inovked from the AddEdit dialog.");
-            PlantloreHelp.showHelp(PlantloreHelp.ADD_OCCURRENCE);            
-        }
-    }//HelpButtonListener
     
     class PreloadCheckBox implements ActionListener {
         public void actionPerformed(ActionEvent e) {

Modified: trunk/src/net/sf/plantlore/client/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -58,11 +58,11 @@
                   <Group type="103" groupAlignment="0" attributes="0">
                       <Group type="102" alignment="0" attributes="0">
                           <Component id="yearSpinner" min="-2" pref="73" max="-2" attributes="0"/>
-                          <EmptySpace pref="164" max="32767" attributes="0"/>
+                          <EmptySpace pref="204" max="32767" attributes="0"/>
                           <Component id="checklistButton" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <Component id="jScrollPane3" alignment="0" pref="329" max="32767" attributes="1"/>
-                      <Component id="jScrollPane1" alignment="0" pref="329" max="32767" attributes="0"/>
+                      <Component id="jScrollPane3" alignment="0" pref="354" max="32767" attributes="1"/>
+                      <Component id="jScrollPane1" alignment="0" pref="354" max="32767" attributes="0"/>
                   </Group>
                   <EmptySpace min="-2" pref="85" max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="1" attributes="0">
@@ -71,12 +71,12 @@
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="1" attributes="0">
-                      <Component id="townComboBox" pref="216" max="32767" attributes="1"/>
+                      <Component id="townComboBox" pref="241" max="32767" attributes="1"/>
                       <Group type="102" alignment="0" attributes="0">
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
                               <Component id="extendedButton" alignment="0" min="-2" max="-2" attributes="0"/>
-                              <Component id="jScrollPane2" alignment="0" pref="216" max="32767" attributes="1"/>
+                              <Component id="jScrollPane2" alignment="0" pref="241" max="32767" attributes="1"/>
                           </Group>
                       </Group>
                   </Group>
@@ -308,7 +308,7 @@
                                   <EmptySpace max="-2" attributes="0"/>
                                   <Component id="jPanel6" max="32767" attributes="1"/>
                               </Group>
-                              <Component id="jPanel5" max="32767" attributes="1"/>
+                              <Component id="jPanel5" pref="561" max="32767" attributes="1"/>
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="1" attributes="0">
@@ -338,10 +338,10 @@
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" max="-2" attributes="0">
-                      <Component id="jPanel4" min="0" pref="168" max="32767" attributes="1"/>
+                      <Component id="jPanel4" min="0" max="32767" attributes="1"/>
                       <Component id="jPanel10" alignment="0" max="32767" attributes="1"/>
                   </Group>
-                  <EmptySpace pref="283" max="32767" attributes="0"/>
+                  <EmptySpace pref="276" max="32767" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -400,7 +400,7 @@
                               </Group>
                           </Group>
                           <Component id="dayLabel" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="dayChooser" alignment="0" max="32767" attributes="0"/>
+                          <Component id="dayChooser" alignment="0" pref="132" max="32767" attributes="0"/>
                       </Group>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
@@ -679,7 +679,7 @@
                           <Component id="herbariumTextField" alignment="0" pref="113" max="32767" attributes="1"/>
                           <Component id="sourceCombo" alignment="0" pref="171" max="32767" attributes="1"/>
                       </Group>
-                      <EmptySpace pref="76" max="32767" attributes="0"/>
+                      <EmptySpace pref="106" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -690,7 +690,7 @@
                           <Component id="sourceLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="sourceCombo" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace max="32767" attributes="0"/>
+                      <EmptySpace pref="14" max="32767" attributes="0"/>
                       <Group type="103" groupAlignment="1" attributes="0">
                           <Component id="publicationLabel" min="-2" max="-2" attributes="0"/>
                           <Component id="publicationCombo" min="-2" max="-2" attributes="0"/>
@@ -807,7 +807,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane4" pref="200" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="230" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -815,7 +815,7 @@
             <DimensionLayout dim="1">
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
-                      <Component id="jScrollPane4" pref="96" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="93" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1059,7 +1059,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane5" pref="200" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="230" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1067,7 +1067,7 @@
             <DimensionLayout dim="1">
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
-                      <Component id="jScrollPane5" pref="109" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="112" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1112,10 +1112,10 @@
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="314" max="32767" attributes="0"/>
+                      <EmptySpace pref="389" max="32767" attributes="0"/>
                   </Group>
                   <Group type="102" alignment="1" attributes="0">
-                      <EmptySpace pref="241" max="32767" attributes="0"/>
+                      <EmptySpace pref="327" max="32767" attributes="0"/>
                       <Component id="preloadAuthorsCheckBox" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
@@ -1126,7 +1126,7 @@
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="90" max="32767" attributes="0"/>
+                      <EmptySpace pref="94" max="32767" attributes="0"/>
                       <Component id="preloadAuthorsCheckBox" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
@@ -1174,7 +1174,7 @@
               <Group type="102" alignment="1" attributes="0">
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="helpButton" linkSize="12" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace pref="598" max="32767" attributes="0"/>
+                  <EmptySpace pref="626" max="32767" attributes="0"/>
                   <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/client/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -31,6 +31,7 @@
 import net.sf.plantlore.common.AutoComboBoxNG3;
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.Pair;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.TabTransfersFocus;
 import net.sf.plantlore.common.record.AuthorOccurrence;
 import net.sf.plantlore.l10n.L10n;
@@ -61,6 +62,8 @@
         this.inAddMode = ! edit;
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.ADD_OCCURRENCE, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.ADD_OCCURRENCE, this.helpButton);
         
         getRootPane().setDefaultButton(okButton);
         
@@ -228,22 +231,22 @@
                 .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(jPanel2Layout.createSequentialGroup()
                         .add(yearSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 164, Short.MAX_VALUE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 204, Short.MAX_VALUE)
                         .add(checklistButton))
-                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
-                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
+                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE))
                 .add(85, 85, 85)
                 .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                     .add(townLabel)
                     .add(placeDescriptionLabel))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
-                    .add(townComboBox, 0, 216, Short.MAX_VALUE)
+                    .add(townComboBox, 0, 241, Short.MAX_VALUE)
                     .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(extendedButton)
-                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))))
+                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))))
                 .addContainerGap())
         );
         jPanel2Layout.setVerticalGroup(
@@ -327,7 +330,7 @@
                             .add(timeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                             .add(timeLabel)))
                     .add(dayLabel)
-                    .add(dayChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(dayChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, Short.MAX_VALUE))
                 .addContainerGap())
         );
 
@@ -449,7 +452,7 @@
                     .add(publicationCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .add(herbariumTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                     .add(sourceCombo, 0, 171, Short.MAX_VALUE))
-                .addContainerGap(76, Short.MAX_VALUE))
+                .addContainerGap(106, Short.MAX_VALUE))
         );
         jPanel6Layout.setVerticalGroup(
             jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -457,7 +460,7 @@
                 .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(sourceLabel)
                     .add(sourceCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                 .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                     .add(publicationLabel)
                     .add(publicationCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
@@ -486,13 +489,13 @@
             jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel7Layout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
+                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                 .addContainerGap())
         );
         jPanel7Layout.setVerticalGroup(
             jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel7Layout.createSequentialGroup()
-                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
+                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                 .addContainerGap())
         );
 
@@ -595,13 +598,13 @@
             jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel9Layout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
+                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                 .addContainerGap())
         );
         jPanel9Layout.setVerticalGroup(
             jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel9Layout.createSequentialGroup()
-                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
+                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                 .addContainerGap())
         );
 
@@ -619,9 +622,9 @@
             .add(jPanel10Layout.createSequentialGroup()
                 .addContainerGap()
                 .add(requiredInfoLabel)
-                .addContainerGap(314, Short.MAX_VALUE))
+                .addContainerGap(389, Short.MAX_VALUE))
             .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
-                .addContainerGap(241, Short.MAX_VALUE)
+                .addContainerGap(327, Short.MAX_VALUE)
                 .add(preloadAuthorsCheckBox)
                 .addContainerGap())
         );
@@ -630,7 +633,7 @@
             .add(jPanel10Layout.createSequentialGroup()
                 .addContainerGap()
                 .add(requiredInfoLabel)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 90, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 94, Short.MAX_VALUE)
                 .add(preloadAuthorsCheckBox)
                 .addContainerGap())
         );
@@ -652,7 +655,7 @@
                                 .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                 .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-                            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                             .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
@@ -673,9 +676,9 @@
                         .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
-                    .add(jPanel4, 0, 168, Short.MAX_VALUE)
+                    .add(jPanel4, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-                .addContainerGap(283, Short.MAX_VALUE))
+                .addContainerGap(276, Short.MAX_VALUE))
         );
         getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);
 
@@ -697,7 +700,7 @@
             .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8Layout.createSequentialGroup()
                 .addContainerGap()
                 .add(helpButton)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 598, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 626, Short.MAX_VALUE)
                 .add(okButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(cancelButton)

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -862,15 +862,10 @@
             putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuDataAuthors"));                        
         }
         public void actionPerformed(ActionEvent e) {
-            //try {
-                AuthorManager authModel = new AuthorManager(model.getDatabase());
-                AuthorManagerView authView = new AuthorManagerView(authModel, view, false);
-                AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel, authView);
-                //authModel.pokus();
-                authView.setVisible(true);                
-            //} catch(RemoteException e) {
-            //	System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-            //}                
+            AuthorManager authModel = new AuthorManager(model.getDatabase());
+            AuthorManagerView authView = new AuthorManagerView(authModel, view, true);
+            AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel, authView);
+            authView.setVisible(true);                
         }
         
     }
@@ -885,7 +880,7 @@
 
         public void actionPerformed(ActionEvent actionEvent) {
             publicationManagerModel = new PublicationManager(model.getDatabase());
-            publicationManagerView = new PublicationManagerView(publicationManagerModel, view, false);
+            publicationManagerView = new PublicationManagerView(publicationManagerModel, view, true);
             publicationManagerCtrl = new PublicationManagerCtrl(publicationManagerModel, publicationManagerView);
             publicationManagerView.setVisible(true); 
         }

Modified: trunk/src/net/sf/plantlore/client/Plantlore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Plantlore.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/Plantlore.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -19,6 +19,8 @@
 import javax.swing.JFrame;
 import javax.swing.JOptionPane;
 import javax.swing.UIManager;
+import net.sf.plantlore.common.PlantloreHelp;
+import net.sf.plantlore.common.exception.PlantloreException;
 
 import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.BasicConfigurator;
@@ -80,6 +82,13 @@
         } catch (IOException ex) {
             ex.printStackTrace();
         }
+        // Initialize Help
+        try {
+            PlantloreHelp.initialize();
+        } catch (PlantloreException e) {
+            // TODO: Display error message
+        }
+        
         plantlore.run();
     }
     

Modified: trunk/src/net/sf/plantlore/client/SearchCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/SearchCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/SearchCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -86,7 +86,6 @@
         view.extendedButton.addMouseListener(new ExtendedButtonListener());
         view.okButton.addMouseListener(new OkButtonListener());
         view.cancelButton.addMouseListener(new CancelButtonListener());
-        view.helpButton.addMouseListener(new HelpButtonListener());
         
         //------- Time
         view.monthChooser.addPropertyChangeListener("month",new MonthChangeListener());
@@ -410,13 +409,5 @@
             view.setVisible(false);
         }
     }//CancelButtonListener
-
-    class HelpButtonListener extends MouseAdapter {
-        public void mouseClicked(MouseEvent e) {
-            logger.info("Help inovked from the Search dialog.");
-            PlantloreHelp.showHelp(PlantloreHelp.SEARCH_OCCURRENCE);            
-        }
-    }//HelpButtonListener
-    
 }
 

Modified: trunk/src/net/sf/plantlore/client/SearchView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/SearchView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/SearchView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -55,8 +55,8 @@
                   <Component id="taxonLabel" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jScrollPane3" pref="245" max="32767" attributes="1"/>
-                      <Component id="jScrollPane1" alignment="0" pref="245" max="32767" attributes="0"/>
+                      <Component id="jScrollPane3" pref="270" max="32767" attributes="1"/>
+                      <Component id="jScrollPane1" alignment="0" pref="270" max="32767" attributes="0"/>
                   </Group>
                   <EmptySpace min="-2" pref="85" max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="1" attributes="0">
@@ -65,8 +65,8 @@
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="townComboBox" alignment="1" pref="300" max="32767" attributes="1"/>
-                      <Component id="jScrollPane2" alignment="0" pref="300" max="32767" attributes="1"/>
+                      <Component id="townComboBox" alignment="1" pref="325" max="32767" attributes="1"/>
+                      <Component id="jScrollPane2" alignment="0" pref="325" max="32767" attributes="1"/>
                       <Component id="extendedButton" min="-2" max="-2" attributes="0"/>
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
@@ -94,7 +94,7 @@
                           <Component id="jScrollPane1" min="-2" pref="82" max="-2" attributes="0"/>
                           <EmptySpace min="-2" pref="14" max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="jScrollPane3" pref="67" max="32767" attributes="1"/>
+                              <Component id="jScrollPane3" pref="65" max="32767" attributes="1"/>
                               <Component id="taxonLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                           </Group>
                       </Group>
@@ -474,8 +474,8 @@
                               </Group>
                               <EmptySpace max="-2" attributes="0"/>
                               <Group type="103" groupAlignment="0" attributes="0">
-                                  <Component id="phytCountryCombo" pref="173" max="32767" attributes="1"/>
-                                  <Component id="phytNameCombo" alignment="0" pref="173" max="32767" attributes="1"/>
+                                  <Component id="phytCountryCombo" pref="177" max="32767" attributes="1"/>
+                                  <Component id="phytNameCombo" alignment="0" pref="177" max="32767" attributes="1"/>
                               </Group>
                           </Group>
                           <Group type="102" alignment="0" attributes="1">
@@ -527,7 +527,7 @@
                           <Component id="quadrantLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="quadrantTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace max="32767" attributes="0"/>
+                      <EmptySpace pref="13" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -673,7 +673,7 @@
                           <Component id="sourceLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="sourceCombo" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace pref="12" max="32767" attributes="0"/>
+                      <EmptySpace pref="15" max="32767" attributes="0"/>
                       <Group type="103" groupAlignment="1" attributes="0">
                           <Component id="publicationLabel" min="-2" max="-2" attributes="0"/>
                           <Component id="publicationCombo" min="-2" max="-2" attributes="0"/>
@@ -790,7 +790,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane4" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="279" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -798,7 +798,7 @@
             <DimensionLayout dim="1">
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
-                      <Component id="jScrollPane4" pref="96" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="91" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -900,7 +900,7 @@
                           <Component id="longitudeLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="longitudeTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace pref="48" max="32767" attributes="0"/>
+                      <EmptySpace pref="43" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -1039,7 +1039,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane5" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="279" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1047,7 +1047,7 @@
             <DimensionLayout dim="1">
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
-                      <Component id="jScrollPane5" pref="115" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="113" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1090,7 +1090,7 @@
               <Group type="102" alignment="1" attributes="0">
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="helpButton" linkSize="12" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace pref="598" max="32767" attributes="0"/>
+                  <EmptySpace pref="626" max="32767" attributes="0"/>
                   <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/client/SearchView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/SearchView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/SearchView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -18,6 +18,7 @@
 import net.sf.plantlore.common.AutoComboBoxNG3;
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.Pair;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.TabTransfersFocus;
 import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.Logger;
@@ -40,6 +41,8 @@
         model.addObserver(this);
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.SEARCH_OCCURRENCE, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.SEARCH_OCCURRENCE, this.helpButton);
         
         getRootPane().setDefaultButton(okButton);
         

Modified: trunk/src/net/sf/plantlore/client/authors/AddAuthorCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AddAuthorCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/authors/AddAuthorCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -49,7 +49,6 @@
         this.view = addView;
         // Add listeners for buttons and fields
         view.closeBtnAddActionListener(new CloseButtonListener());
-        view.helpBtnAddActionListener(new HelpButtonListener());
         view.saveBtnAddActionListener(new SaveAuthorButtonListener());        
         view.nameAddPropertyChangeListener(new NameFieldPropertyChangeListener());
         view.organizationAddPropertyChangeListener(new OrganizationFieldPropertyChangeListener());
@@ -88,17 +87,6 @@
     }
 
     /**
-     * ActionListener class controlling the <b>help</b> button on the form.
-     */    
-    class HelpButtonListener implements ActionListener {
-        public void actionPerformed(ActionEvent e) {
-            // Display help viewer      
-            logger.info("Help inovked from the Add/Edit author window");
-            PlantloreHelp.showHelp(PlantloreHelp.AUTHOR_MANAGER);
-        }
-    }
-    
-    /**
      * ActionListener class controlling the <b>Save author</b> button on the form. Checks whether all the 
      * required fields have been set and calls model to save the data when the button is clicked.
      * This metod is used for saving new author as well as updating the existing one.

Modified: trunk/src/net/sf/plantlore/client/authors/AddAuthorView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AddAuthorView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/authors/AddAuthorView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -13,6 +13,7 @@
 import java.util.Observer;
 import javax.swing.JDialog;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.TransferFocus;
 import net.sf.plantlore.l10n.L10n;
 import javax.swing.text.AttributeSet;
@@ -40,6 +41,8 @@
         this.model = authModel;
         this.model.addObserver(this);         
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.ADD_AUTHOR, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.ADD_AUTHOR, this.helpBtn);        
         // Center the dialog on the screen
         this.setLocationRelativeTo(null);
     }

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -49,7 +49,6 @@
         this.view = authView;
         // Add action listeners to buttons
         view.closeBtnAddActionListener(new CloseButtonListener());
-        view.helpBtnAddActionListener(new HelpButtonListener());
         view.addBtnAddActionListener(new AddAuthorButtonListener());
         view.searchBtnAddActionlistener(new SearchAuthorButtonListener());
         view.deleteBtnAddActionListener(new DeleteAuthorButtonListener());
@@ -130,17 +129,6 @@
     }
 
     /**
-     * ActionListener class controlling the <b>help</b> button on the form.
-     */    
-    class HelpButtonListener implements ActionListener {
-        public void actionPerformed(ActionEvent e) {
-            // Display help viewer            
-            logger.info("Help inovked from the AuthorManager window");
-            PlantloreHelp.showHelp(PlantloreHelp.ADD_AUTHOR);            
-        }
-    }
-    
-    /**
      * ActionListener class controlling the <b>Add author</b> button on the form.
      */    
     class AddAuthorButtonListener implements ActionListener {
@@ -152,7 +140,7 @@
             }
             // Display dialog for adding / editing authors. This dialog shares model with
             // the rest of the AuthorManager.
-            AddAuthorView addAuthView = new AddAuthorView(model, view.getFrame(), false);
+            AddAuthorView addAuthView = new AddAuthorView(model, view.getFrame(), true);
             AddAuthorCtrl addAuthCtrl = new AddAuthorCtrl(model, addAuthView);            
             // We are going to add author, no editing
             model.setEditAuthor(null);

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -17,6 +17,7 @@
 import javax.swing.JFrame;
 import javax.swing.JOptionPane;
 import javax.swing.table.DefaultTableModel;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.l10n.L10n;
 
@@ -36,6 +37,7 @@
     /** Contents of the table with the query result */
     private String[][] tableData;
     
+    PlantloreHelp help;
     /**
      * Creates new form AuthorManagerView 
      * 
@@ -48,6 +50,8 @@
         this.model = model;
         this.model.addObserver(this);         
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.AUTHOR_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.AUTHOR_MANAGER, this.helpBtn);
         // Center the dialog on the screen
         this.setLocationRelativeTo(null);        
     }

Modified: trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -60,7 +60,7 @@
       <Layout>
         <DimensionLayout dim="0">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="jScrollPane2" alignment="0" pref="373" max="32767" attributes="0"/>
+              <Component id="jScrollPane2" alignment="0" pref="377" max="32767" attributes="0"/>
           </Group>
         </DimensionLayout>
         <DimensionLayout dim="1">

Modified: trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/DetailsHistoryView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -9,6 +9,7 @@
 import java.util.Observable;
 import java.util.Observer;
 import javax.swing.JDialog;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.l10n.L10n;
 
 /**
@@ -24,6 +25,8 @@
         super(parent, modal);
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents(); 
+        PlantloreHelp.addKeyHelp(PlantloreHelp.HISTORY_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.HISTORY_MANAGER, this.helpButton);        
         this.detailsTextArea.setEditable(false);
     }
     

Modified: trunk/src/net/sf/plantlore/client/history/HistoryCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/HistoryCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/HistoryCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -31,7 +31,6 @@
              
         view.okButton.addActionListener(new okButtonListener());
         view.closeButton.addActionListener(new closeButtonListener());
-        view.helpButton.addActionListener(new helpButtonListener());
         view.previousButton.addActionListener(new previousButtonListener());
         view.nextButton.addActionListener(new nextButtonListener());
         view.selectAllButton.addActionListener(new selectAllButtonListener());
@@ -63,19 +62,6 @@
    }
    
    /**
-    * On Help should call help.
-    *
-    */
-   class helpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");     
-           PlantloreHelp.showHelp(PlantloreHelp.HISTORY_MANAGER); 
-       }
-   }
-   
-   /**
     * 
     *
     */

Modified: trunk/src/net/sf/plantlore/client/history/HistoryView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/history/HistoryView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/HistoryView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -92,7 +92,7 @@
                       <Component id="authorValueLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                       <Component id="taxonValueLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                   </Group>
-                  <EmptySpace pref="424" max="32767" attributes="0"/>
+                  <EmptySpace pref="428" max="32767" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -198,7 +198,7 @@
                       <Component id="whoInsertValueLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                       <Component id="whenInsertValueLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                   </Group>
-                  <EmptySpace pref="427" max="32767" attributes="0"/>
+                  <EmptySpace pref="431" max="32767" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>

Modified: trunk/src/net/sf/plantlore/client/history/HistoryView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/HistoryView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/HistoryView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -13,6 +13,7 @@
 import javax.swing.JOptionPane;
 import javax.swing.JTable;
 import javax.swing.table.TableColumn;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.l10n.L10n;
 
 /**
@@ -35,6 +36,8 @@
         this.model = model;
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.HISTORY_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.HISTORY_MANAGER, this.helpButton);        
         getTable().setModel(new HistoryTableModel(model));           
     }
     

Modified: trunk/src/net/sf/plantlore/client/history/WholeHistoryCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/WholeHistoryCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/WholeHistoryCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -37,7 +37,6 @@
                   
         view.okButton.addActionListener(new okButtonListener());
         view.closeButton.addActionListener(new closeButtonListener());
-        view.helpButton.addActionListener(new helpButtonListener());
         view.previousButton.addActionListener(new previousButtonListener());
         view.nextButton.addActionListener(new nextButtonListener());     
         view.undoToDateButton.addActionListener(new undoToDateButtonListener());
@@ -69,19 +68,6 @@
    }
    
    /**
-    * On Help should call help.
-    *
-    */
-   class helpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");
-           PlantloreHelp.showHelp(PlantloreHelp.HISTORY_MANAGER); 
-       }
-   }
-   
-   /**
     * 
     *
     */

Modified: trunk/src/net/sf/plantlore/client/history/WholeHistoryView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/WholeHistoryView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/history/WholeHistoryView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -11,6 +11,7 @@
 import javax.swing.DefaultListSelectionModel;
 import javax.swing.JDialog;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.l10n.L10n;
 
 /**
@@ -29,6 +30,8 @@
         this.model = model;
         setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.HISTORY_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.HISTORY_MANAGER, this.helpButton);        
         this.tableHistoryList.setRowSelectionAllowed(true);
         this.tableHistoryList.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);
         this.tableHistoryList.setModel(new WholeHistoryTableModel(model));                

Modified: trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -34,7 +34,6 @@
         this.view = view;
         
         view.closeButton.addActionListener(new closeButtonListener());
-        view.helpButton.addActionListener(new helpButtonListener());
         view.operationButton.addActionListener(new operationButtonListener());
     }
     
@@ -48,20 +47,7 @@
     	   view.close();
        }
    }
-   
-   /**
-    * On Help should call help.
-    *
-    */
-   class helpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");
-           PlantloreHelp.showHelp(PlantloreHelp.METDATA_ADD); 
-       }
-   }
-   
+     
    /*
     *
     */

Modified: trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -66,7 +66,7 @@
           <Group type="103" groupAlignment="0" attributes="0">
               <Group type="102" alignment="0" attributes="0">
                   <Group type="103" groupAlignment="1" max="-2" attributes="0">
-                      <Component id="jPanel4" alignment="0" max="32767" attributes="1"/>
+                      <Component id="jPanel4" alignment="0" pref="636" max="32767" attributes="1"/>
                       <Component id="jPanel5" alignment="0" max="32767" attributes="1"/>
                   </Group>
                   <EmptySpace max="32767" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/AddEditMetadataView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -13,6 +13,7 @@
 import javax.swing.JDialog;
 import javax.swing.JFormattedTextField;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.record.Metadata;
 import net.sf.plantlore.l10n.L10n;
 
@@ -32,6 +33,8 @@
         super(parent, modal);
         this.model = model;
         initComponents();        
+        PlantloreHelp.addKeyHelp(PlantloreHelp.METDATA_ADD, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.METDATA_ADD, this.helpButton);        
     }
     
      public void update(Observable observable, Object object)

Modified: trunk/src/net/sf/plantlore/client/metadata/MetadataManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/MetadataManagerCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/MetadataManagerCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -35,7 +35,6 @@
         this.view = view;
           
         view.closeButton.addActionListener(new closeButtonListener());
-        view.helpButton.addActionListener(new helpButtonListener());        
         view.previousButton.addActionListener(new previousButtonListener());
         view.nextButton.addActionListener(new nextButtonListener());            
         view.toDisplayValueTextField.addActionListener(new rowSetDisplayChangeListener());    
@@ -58,21 +57,8 @@
     	   view.close();
        }
    }
-   
+     
    /**
-    * On Help should call help.
-    *
-    */
-   class helpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");
-           PlantloreHelp.showHelp(PlantloreHelp.METDATA_MANAGER); 
-       }
-   }
-   
-   /**
     * 
     *
     */

Modified: trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -316,8 +316,8 @@
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="sourceInstitutionIdText" pref="99" max="32767" attributes="1"/>
-                              <Component id="sourceIdText" alignment="0" pref="99" max="32767" attributes="1"/>
+                              <Component id="sourceInstitutionIdText" pref="103" max="32767" attributes="1"/>
+                              <Component id="sourceIdText" alignment="0" pref="103" max="32767" attributes="1"/>
                           </Group>
                           <EmptySpace min="-2" pref="15" max="-2" attributes="0"/>
                           <Component id="dataSetTitleLabel" min="-2" max="-2" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/metadata/MetadataManagerView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -10,6 +10,7 @@
 import java.util.Observer;
 import javax.swing.DefaultListSelectionModel;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.l10n.L10n;
 
 /**
@@ -28,6 +29,8 @@
         super(parent, modal);
         this.model = model;
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.METDATA_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.METDATA_MANAGER, this.helpButton);        
         sortButtonGroup.add(sortAscendingRadioButton);
         sortButtonGroup.add(sortDescendingRadioButton);
         sortButtonGroup.setSelected(sortAscendingRadioButton.getModel(), true);

Modified: trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -49,7 +49,6 @@
         this.view = addView;
         // Add listeners for buttons and fields
         view.closeBtnAddActionListener(new CloseButtonListener());
-        view.helpBtnAddActionListener(new HelpButtonListener());
         view.saveBtnAddActionListener(new SavePublicationButtonListener());        
         view.collectionNameAddPropertyChangeListener(new CollectionNameFieldPropertyChangeListener());
         view.publicationYearAddPropertyChangeListener(new PublicationYearFieldPropertyChangeListener());
@@ -88,17 +87,6 @@
     }
 
     /**
-     * ActionListener class controlling the <b>help</b> button on the form.
-     */    
-    class HelpButtonListener implements ActionListener {
-        public void actionPerformed(ActionEvent e) {
-            // Display help viewer      
-            logger.info("Help inovked from the Add/Edit author window");
-            PlantloreHelp.showHelp(PlantloreHelp.AUTHOR_MANAGER);
-        }
-    }
-    
-    /**
      * ActionListener class controlling the <b>Save publication</b> button on the form. Checks whether all 
      * the required fields have been set and calls model to save the data when the button is clicked.
      * This metod is used for saving new publication as well as updating the existing one.

Modified: trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -13,6 +13,7 @@
 import java.util.Observer;
 import javax.swing.JDialog;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.TransferFocus;
 import net.sf.plantlore.l10n.L10n;
 
@@ -38,6 +39,8 @@
         this.model = publModel;
         this.model.addObserver(this);         
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.PUBLICATION_ADD, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.PUBLICATION_ADD, this.helpBtn);        
         // Center the dialog on the screen
         this.setLocationRelativeTo(null);        
     }

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -50,7 +50,6 @@
         this.view = publView;
         // Add action listeners to buttons
         view.closeBtnAddActionListener(new CloseButtonListener());
-        view.helpBtnAddActionListener(new HelpButtonListener());
         view.addBtnAddActionListener(new AddPublicationButtonListener());
         view.searchBtnAddActionlistener(new SearchPublicationButtonListener());
         view.deleteBtnAddActionListener(new DeletePublicationButtonListener());
@@ -134,24 +133,13 @@
     }
 
     /**
-     * ActionListener class controlling the <b>help</b> button on the form.
-     */    
-    class HelpButtonListener implements ActionListener {
-        public void actionPerformed(ActionEvent e) {
-            // Display help viewer            
-            logger.info("Help inovked from the AuthorManager window");
-            PlantloreHelp.showHelp(PlantloreHelp.ADD_AUTHOR);            
-        }
-    }
-    
-    /**
      * ActionListener class controlling the <b>Add publication</b> button on the form.
      */    
     class AddPublicationButtonListener implements ActionListener {
         public void actionPerformed(ActionEvent e) {
             // Display dialog for adding / editing publications. This dialog shares model with
             // the rest of the PublicationManager.
-            AddPublicationView addPublView = new AddPublicationView(model, view.getFrame(), false);
+            AddPublicationView addPublView = new AddPublicationView(model, view.getFrame(), true);
             AddPublicationCtrl addPublCtrl = new AddPublicationCtrl(model, addPublView);            
             // We are going to add publication, no editing
             model.setEditPublication(null);

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -17,6 +17,7 @@
 import javax.swing.JFrame;
 import javax.swing.JOptionPane;
 import javax.swing.table.DefaultTableModel;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.common.record.Publication;
 import net.sf.plantlore.l10n.L10n;
@@ -49,6 +50,8 @@
         this.model = model;
         this.model.addObserver(this);
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.PUBLICATION_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.PUBLICATION_MANAGER, this.helpBtn);        
         // Center the dialog on the screen
         this.setLocationRelativeTo(null);
     }

Modified: trunk/src/net/sf/plantlore/client/user/AddEditUserCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/user/AddEditUserCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/user/AddEditUserCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -41,7 +41,6 @@
         this.view = view;
         
         view.closeButton.addActionListener(new CloseButtonListener());
-        view.helpButton.addActionListener(new HelpButtonListener());
         view.operationButton.addActionListener(new OperationButtonListener());
         view.editGroupTextArea.addFocusListener(new UserAreaListener());
     }
@@ -57,19 +56,6 @@
        }
    }
    
-   /**
-    * On Help should call help.
-    *
-    */
-   class HelpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");
-           PlantloreHelp.showHelp(PlantloreHelp.USER_RIGHTS); 
-       }
-   }
-   
    /*
     *
     */

Modified: trunk/src/net/sf/plantlore/client/user/AddEditUserView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/user/AddEditUserView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/user/AddEditUserView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -14,6 +14,7 @@
 import javax.swing.JOptionPane;
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.Pair;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.common.TabTransfersFocus;
 import net.sf.plantlore.common.record.Right;
 import net.sf.plantlore.common.record.User;
@@ -35,6 +36,8 @@
         super(parent, modal);
         this.model = model;
         initComponents(); 
+        PlantloreHelp.addKeyHelp(PlantloreHelp.USER_ADD, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.USER_ADD, this.helpButton);        
         new TabTransfersFocus(noteText);
         new TabTransfersFocus(editGroupTextArea);                
     }

Modified: trunk/src/net/sf/plantlore/client/user/UserManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/user/UserManagerCtrl.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/user/UserManagerCtrl.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -39,7 +39,6 @@
         this.view = view;
           
         view.closeButton.addActionListener(new closeButtonListener());
-        view.helpButton.addActionListener(new helpButtonListener());        
         view.previousButton.addActionListener(new previousButtonListener());
         view.nextButton.addActionListener(new nextButtonListener());            
         view.toDisplayValueTextField.addActionListener(new rowSetDisplayChangeListener());    
@@ -65,21 +64,8 @@
     	   view.close();
        }
    }
-   
+     
    /**
-    * On Help should call help.
-    *
-    */
-   class helpButtonListener implements ActionListener {
-       public void actionPerformed(ActionEvent actionEvent)
-       {    	  
-    	   // Display help viewer            
-    	   System.out.println("Tady se bude volat Help!");
-           PlantloreHelp.showHelp(PlantloreHelp.USER_MANAGER); 
-       }
-   }
-   
-   /**
     * 
     *
     */

Modified: trunk/src/net/sf/plantlore/client/user/UserManagerView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/user/UserManagerView.form	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/user/UserManagerView.form	2006-06-02 04:25:09 UTC (rev 425)
@@ -326,8 +326,8 @@
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="loginSearchText" pref="79" max="32767" attributes="1"/>
-                              <Component id="wholeNameSearchText" pref="79" max="32767" attributes="1"/>
+                              <Component id="loginSearchText" pref="85" max="32767" attributes="1"/>
+                              <Component id="wholeNameSearchText" pref="85" max="32767" attributes="1"/>
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
@@ -336,8 +336,8 @@
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="addressSearchText" alignment="0" pref="98" max="32767" attributes="1"/>
-                              <Component id="emailSearchText" alignment="0" pref="98" max="32767" attributes="1"/>
+                              <Component id="addressSearchText" alignment="0" pref="104" max="32767" attributes="1"/>
+                              <Component id="emailSearchText" alignment="0" pref="104" max="32767" attributes="1"/>
                           </Group>
                       </Group>
                       <Component id="searchButton" min="-2" pref="120" max="-2" attributes="1"/>
@@ -571,7 +571,7 @@
                       <Component id="showAllUserRadioBUtton" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="showCurrentUserRadioButton" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
+                      <EmptySpace pref="15" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>

Modified: trunk/src/net/sf/plantlore/client/user/UserManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/user/UserManagerView.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/client/user/UserManagerView.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -10,6 +10,7 @@
 import java.util.Observer;
 import javax.swing.DefaultListSelectionModel;
 import javax.swing.JOptionPane;
+import net.sf.plantlore.common.PlantloreHelp;
 import net.sf.plantlore.l10n.L10n;
 
 /**
@@ -30,6 +31,8 @@
         super(parent, modal);
         this.model = model;
         initComponents();
+        PlantloreHelp.addKeyHelp(PlantloreHelp.USER_MANAGER, this.getRootPane());
+        PlantloreHelp.addButtonHelp(PlantloreHelp.USER_MANAGER, this.helpButton);        
         sortButtonGroup.add(sortAscendingRadioButton);
         sortButtonGroup.add(sortDescendingRadioButton);
         sortButtonGroup.setSelected(sortAscendingRadioButton.getModel(), true);

Modified: trunk/src/net/sf/plantlore/common/PlantloreHelp.java
===================================================================
--- trunk/src/net/sf/plantlore/common/PlantloreHelp.java	2006-06-02 02:29:15 UTC (rev 424)
+++ trunk/src/net/sf/plantlore/common/PlantloreHelp.java	2006-06-02 04:25:09 UTC (rev 425)
@@ -7,13 +7,17 @@
 
 package net.sf.plantlore.common;
 
+import java.awt.Component;
 import java.net.URL;
+import javax.help.HelpBroker;
 import javax.help.HelpSet;
 import javax.help.HelpSetException;
 import javax.help.JHelp;
 import javax.swing.JDialog;
 import javax.swing.JFrame;
+import net.sf.plantlore.common.exception.PlantloreException;
 import net.sf.plantlore.l10n.L10n;
+import org.apache.log4j.Logger;
 
 /**
  * Class for invoking Help viewer.
@@ -78,40 +82,41 @@
     public static final String IMPORT                   = "import";
     // Export feature description
     public static final String EXPORT                   = "export";   
-            
+
+    /* Instance of a logger */
+    private static Logger logger = Logger.getLogger(PlantloreHelp.class.getPackage().getName());
+
+    private static HelpBroker hb;
+    private static HelpSet hs;
+    
     /** Creates a new instance of PlantloreHelp */
     public PlantloreHelp() {
-        
     }
-  
-    /**
-     * Method for opening Help Viewer at a specified page.
-     *
-     * @param section Section of help which will be shown. Sections are defined in 
-     *                <code>jHelpMap.jhm</code> and <code>jHelpToc.xml</code>
-     */
-    public static void showHelp(String section) {
-        JHelp helpViewer;
+
+    public static void initialize() throws PlantloreException {
         try {
             // Get the classloader of this class.
             ClassLoader cl = PlantloreHelp.class.getClassLoader();
             URL url = HelpSet.findHelpSet(cl, HELPFILE, L10n.getCurrentLocale());
             // Create a new JHelp object with a new HelpSet.        
-            HelpSet hs = new HelpSet(cl, url);
-            helpViewer = new JHelp(hs);
-            // Set the initial entry point in the table of contents.
-            helpViewer.setCurrentID(section);
+            hs = new HelpSet(cl, url);
+            // Create the HelpBroker
+            hb = hs.createHelpBroker();
         } catch (HelpSetException e) {
-            System.out.println("EXCEPTION: "+e.getMessage());
-            e.printStackTrace();
-            return;
-        }
-        // Create a new frame.
-        JFrame frame = new JFrame();
-        frame.setSize(500,500);
-        frame.getContentPane().add(helpViewer);
-        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
-        // Make the frame visible.
-        frame.setVisible(true);        
-    }    
-}
+            logger.error("Unable to initialize help: "+e.getMessage());
+            throw new PlantloreException("Unable to initialize help: "+e.getMessage());
+        }        
+    }
+    
+    public static void addButtonHelp(String section, Component button) {
+        hb.enableHelpOnButton(button, section, hs);        
+    }
+    
+    public static void addComponentHelp(String section, Component comp) {
+        hb.enableHelp(comp, section, hs);
+    }
+    
+    public static void addKeyHelp(String section, Component comp) {
+        hb.enableHelpKey(comp, section, hs);
+    }   
+}
\ No newline at end of file



From kovo at berlios.de  Fri Jun  2 06:29:43 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Fri, 2 Jun 2006 06:29:43 +0200
Subject: [Plantlore-dev] r426 - trunk/src/net/sf/plantlore/client
Message-ID: <200606020429.k524ThU4002538@sheep.berlios.de>

Author: kovo
Date: 2006-06-02 06:29:42 +0200 (Fri, 02 Jun 2006)
New Revision: 426

Removed:
   trunk/src/net/sf/plantlore/client/publication/
Log:
Remove one of the Publication managers. Since this one is not used we do not need it in the latest revision (it will still be in the repository)



From kovo at berlios.de  Fri Jun  2 06:33:12 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Fri, 2 Jun 2006 06:33:12 +0200
Subject: [Plantlore-dev] r427 - trunk/lib
Message-ID: <200606020433.k524XC4l003786@sheep.berlios.de>

Author: kovo
Date: 2006-06-02 06:33:10 +0200 (Fri, 02 Jun 2006)
New Revision: 427

Removed:
   trunk/lib/firebirdsql-full.jar
   trunk/lib/jaybird-full-2.0.1.jar
Log:
These JDBC drivers are no longer needed, we are now using jaybird-full-2.1.0.jar for Firebird.

Deleted: trunk/lib/firebirdsql-full.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/jaybird-full-2.0.1.jar
===================================================================
(Binary files differ)



From admin at berlios.de  Fri Jun  2 06:49:44 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 06:49:44 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7666] Help cannot be invoked from modal dialog
Message-ID: <200606020449.k524niqH018117@unicorn.berlios.de>

Bug #7666, was updated on 2006-May-30 19:50
Here is a current snapshot of the bug.

Project: Plantlore
Category: Help
Status: Open
Resolution: Fixed
Bug Group: Bug
Priority: 7
Submitted by: tkovarik
Assigned to : tkovarik
Summary: Help cannot be invoked from modal dialog

Details: When help is invoked from the modal dialog it cannot be used since it cannot receive focus (it is "under" the modal window). Workaround is not to make dialogs modal. 

Encountered in revision: 395

Follow-Ups:

Date: 2006-Jun-02 06:49
By: tkovarik

Comment:
Help framework rewritten. It is no longer required to create actionListeners since JavaHelp creates them automatically. How to use new functionality (new methods in net.sf.plantlore.common.PlantloreHelp):
addButtonHelp(String section, Component button) - Display help when the given button is pressed (automatically creates listener)
addComponentHelp(String section, Component comp) - Add context-sensitive help for a generic component.
addKeyHelp(String section, Component comp) - Display help when default help key is pressed (F1 on Windows). Help is displayed in case
"comp" has focus. To display help for the whole dialog (focus is anywhere in the dialog) use addKeyHelp(section, this.getRootPane())

Help window should be available even from the modal dialog. I have encountered additional problem in Add Author dialog (can be opened from Author manager) - in case main window of the author manager is modal and Add Author window is non-modal and help is invoked from the Add Author window, Help is inaccessible (Don't ask me why and don't tell anyone :)

Please verify and close.
-------------------------------------------------------

Date: 2006-May-30 20:03
By: fraktalek

Comment:
We need to  start the help dialog in a new thread or send the creation and setVisible code to the EventDispatch Thread. Similar problem is already solved already in the Task, ProgressBar couple and in code constructing and displaying Scheda (AppCore.SchedaAction).
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7666&group_id=5975


From admin at berlios.de  Fri Jun  2 13:36:34 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 13:36:34 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7725] Implement detail in Overview
Message-ID: <200606021136.k52BaY20003580@unicorn.berlios.de>

Bug #7725, was updated on 2006-Jun-02 13:36
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 7
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Implement detail in Overview

Details: The user should be able to review detailed data about an occurrence quickly and without the need to edit it.


For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7725&group_id=5975


From admin at berlios.de  Fri Jun  2 14:24:56 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 2 Jun 2006 14:24:56 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7726] Login sometimes fails with NullPointerException
Message-ID: <200606021224.k52COuA2015340@unicorn.berlios.de>

Bug #7726, was updated on 2006-Jun-02 14:24
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : krater
Summary: Login sometimes fails with NullPointerException

Details: How to reproduce:
1. Open Plantlore
2. Create new triplet
3. DO NOT LOGIN, close Plantlore
4. Open Plantlore
5. Select the triplet you've added
6. Try to login

Here is the exception:
14:12:30,000 DEBUG AWT-EventQueue-0 login:78 - Loading the stored list of databases.
14:12:30,187 DEBUG AWT-EventQueue-0 login:169 - Selected database is Plantlore - Kovo - PostgreSQL
14:12:31,171 DEBUG AWT-EventQueue-0 login:169 - Selected database is Dalsi Pokus
Exception in thread "Thread-2" java.lang.NullPointerException
        at java.util.Hashtable.remove(Hashtable.java:438)
14:12:52,078 ERROR Thread-2 login:241 - The initialization of the DBLayer failed! java.lang.ArrayIndexOutOfBoundsException: 0
        at net.sf.plantlore.middleware.RMIDBLayerFactory.destroy(RMIDBLayerFactory.java:130)
        at net.sf.plantlore.client.login.Login$1.construct(Login.java:245)
        at net.sf.plantlore.common.SwingWorker$2.run(SwingWorker.java:108)
        at java.lang.Thread.run(Thread.java:595)

Problem si connected with saving the <user> tag in the plantlore.xml Since you close the plantlore without logging in (after you add the triplet), <user> tag is not added.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7726&group_id=5975


From admin at berlios.de  Sat Jun  3 01:21:01 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sat, 3 Jun 2006 01:21:01 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7733] Login dialog is not shown when you switch windows
Message-ID: <200606022321.k52NL1YS017707@unicorn.berlios.de>

Bug #7733, was updated on 2006-Jun-03 01:21
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : krater
Summary: Login dialog is not shown when you switch windows

Details: When you open Login dialog and switch to another application and then switch back to Plantlore, login dialog is not displayed (Plantlore seems to be "frozen" since the dialog is modal). the only way how to switch back is use Alt+tab combination (on Windows) to switch to Plantlore.

To solve this, do not set modality of the dialog via Matisse but call super(JFrame parent, Boolean modal) in the dialog constructor (it is possible to call super(JDialog parent, Boolean modal) if neccessary). This way the modal window will be displayed even when you switch to another application and then back to Plantlore. For reference see Publication or Author manager where this is implemented.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7733&group_id=5975


From discontinuum at gmail.com  Sat Jun  3 15:01:12 2006
From: discontinuum at gmail.com (Erik Kratochvil)
Date: Sat, 3 Jun 2006 15:01:12 +0200
Subject: [Plantlore-dev] Stav veci na serveru
Message-ID: <f4dc39b90606030601v7f4e134dke2dc6e023ef6f922@mail.gmail.com>

Server je momentalne kompletne doprogramovan.
Problem je ten, ze si upravy vyzadaly i dalsi casti platnlore, konkretne:

   - Login
   - HibernateDBLayer
   - DBInfo
   - MainConfig


DBInfo bylo masivne rozsireno, z puvodnich 3 polozek jich ted je 9.

<config>
  <login>
    <triplet>
      <alias>Pokusn? datab?ze</alias>
      <host></host>
      <port>1099</port>
      <database>
          <engine>postgresql</engine>
          <identifier>test</identifier>
          <port>5432</port>
          <parameter></parameter>
          <masteruser>postgres</masteruser>
          <masterpassword>masterkey</masterpassword>   (*)
      </database>
      <user>krater</user>
      <user>kovo</user>
      <user>lada</user>
      <user>fraktalek</user>
    </triplet>
  </login>
</config>

Spolu se zmenou DBInfo musela prijit zmena Login.java a
MainConfig.getDBInfos() a storeDBInfos().
Dale zmeny zasahly RMIDBLFactory a RMIRemoteDBLFactory + uprava HibernateDBL
tak, aby umela vyuzit poslana data.

Zmeny nehodlam zatim komitovat, protoze se v kodu mohou vyskytovat chyby,
ktere by mohly znemoznit spousteni samotneho klienta, cimz bych vam
efektivne zmaril vase pokusy o ladeni programu.

Pocitejte ale s tim, ze vyse vyjmenovane casti jsou zmeneny; pokud budete
chtit v nich delat nejake upravy, muzeme se konfliktit. Imo by se to nemelo
stat, protoze je to izolovano vetsinou na veci, ktery sem napsal ja (login,
server, dblayerfactories).

Otazka je, co s tim (*) - masterpassword, coz je heslo k databazovemu
stroji. Osobne se mi moc nelibi, ze bude heslo dostupne takhle otevrene, ale
bohuzel me nenapada elegantni zpusob, jak to vyresit. Kodovani hesla nema
moc smysl, protoze ten kod bude muset to heslo umet restornout, a jelikoz je
nas program OS, tak si kazdy user-hacker muze prislusnou rutinu na
dekodovani hesla precist a upravit.

Jedina (nedomyslena) moznost by asi byla zakodovat to heslo s nejakou
znalosti hesla, pod kterym se uzivatel do databaze prihlasuje. Problem je
ale s tim, kdyz si uzivatel heslo k databazi zmeni - muselo by se to
podchytit a ten masterpassword prekodovat podle aktualniho uzivatelskeho
hesla (coz by nemusel byt az takovy problem).

Tohle se tyka jenom lokalniho pripojeni, protoze pri spousteni serveru je
mozne tyhle informace zadat ve spoustecim dialogu (a vzdaleny uzivatel
nepotrebuje zadnou informaci o vzdalene databazi, od toho ho odstinuje
server). Prislo mi stupidni zadavat 2 hesla v prihlasovacim dialogu pri
lokalnim spousteni (jedno masterpassword a druhy uz vlastni password k uctu
plantlore). No uvidime, kdyztak to pak nejak jeste poresime.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060603/8e58d3c2/attachment.html>

From krater at berlios.de  Sat Jun  3 18:48:32 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sat, 3 Jun 2006 18:48:32 +0200
Subject: [Plantlore-dev] r428 - in trunk/src/net/sf/plantlore: client client/login common/record l10n middleware server server/manager
Message-ID: <200606031648.k53GmWlN015947@sheep.berlios.de>

Author: krater
Date: 2006-06-03 18:48:24 +0200 (Sat, 03 Jun 2006)
New Revision: 428

Added:
   trunk/src/net/sf/plantlore/server/DatabaseSettings.java
   trunk/src/net/sf/plantlore/server/ServerSettings.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form
   trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/MainConfig.java
   trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
   trunk/src/net/sf/plantlore/client/login/AuthView.java
   trunk/src/net/sf/plantlore/client/login/DBInfo.java
   trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
   trunk/src/net/sf/plantlore/client/login/ItemView.form
   trunk/src/net/sf/plantlore/client/login/ItemView.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
   trunk/src/net/sf/plantlore/client/login/LoginView.java
   trunk/src/net/sf/plantlore/common/record/Record.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/middleware/DBLayer.java
   trunk/src/net/sf/plantlore/middleware/DBLayerFactory.java
   trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
   trunk/src/net/sf/plantlore/server/Plantlore.java
   trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/RMIServer.java
   trunk/src/net/sf/plantlore/server/RMIServerControl.java
   trunk/src/net/sf/plantlore/server/Server.java
   trunk/src/net/sf/plantlore/server/manager/ServerLoginCtrl.java
   trunk/src/net/sf/plantlore/server/manager/ServerLoginView.form
   trunk/src/net/sf/plantlore/server/manager/ServerLoginView.java
   trunk/src/net/sf/plantlore/server/manager/ServerMng.java
   trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
   trunk/src/net/sf/plantlore/server/manager/ServerMngView.form
   trunk/src/net/sf/plantlore/server/manager/ServerMngView.java
Log:
The moment everyone was waiting for has come. The server is here! :)

Login. A little bit modified, still freezes when an JOptionPane.showMessage() is called. This remains to be solved (although I tried to do all changes to the GUI make in the Event Dispatch Thread). Another thing that is yet to be fixed is that ItemAdd/Edit dialog is displayed incorrectly (columns have wrong sizes).

MaingConfig. Uses the new format of connection information (also known as the infamous triplets) - now referred to as DBInfo.

Middleware.DBLF&RMIDBLF. Modified to use the DBInfo instead of bunch of parameters. Much more flexible!

HibernateDBLayer. Uses different information to connect to the database (using the DatabaseSettings) and to perform the login of the plantlore user.

Server. Updated. Uses EDT to make changes to the GUI, L10n, logging, extended server settings and database settings. Dialogs need to be properly tested (the server as well).


It is higly likely you will have to create your DBInfo from scratch (the previous format is longer valid). I advise you to delete "$HOME/plantlore/plantlore.xml" and create DBInfo using the form Add/Edit (accessible via right click in the Select Database dialog). Also please note that the Authentication dialog requires you to insert the "plantlore-login" (krater, *****) instead of the database engine login (sysdba, masterkey).

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1062,10 +1062,9 @@
                 if(loginModel == null) {
                 	loginModel = new Login(new RMIDBLayerFactory(), model.getMainConfig());
                 	loginModel.addObserver(new DatabaseChange());
+                	loginView = new LoginView(loginModel);
+                	loginCtrl = new LoginCtrl(loginModel, loginView);
                 }
-                if(loginView == null) loginView = new LoginView(loginModel);
-                if(loginCtrl == null) loginCtrl = new LoginCtrl(loginModel, loginView);
-                
                 loginCtrl.setVisible(true);
         }
     }

Modified: trunk/src/net/sf/plantlore/client/MainConfig.java
===================================================================
--- trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -17,6 +17,8 @@
 import java.util.Iterator;
 import java.util.List;
 import net.sf.plantlore.client.login.DBInfo;
+import net.sf.plantlore.server.RMIServer;
+
 import org.apache.log4j.Logger;
 import org.dom4j.Document;
 import org.dom4j.DocumentException;
@@ -94,31 +96,72 @@
     }
     
     public ArrayList<DBInfo> getDBinfos() {
-        ArrayList<DBInfo> result = new ArrayList<DBInfo>();
-
-        List columnList = document.selectNodes("//config/login/triplet");
-        Iterator it = columnList.iterator();
-        while (it.hasNext()) {
-            Node n = (Node)it.next();
-            String alias = n.valueOf("alias"),
-                    host = n.valueOf("host"),
-                    database = n.valueOf("database");
-            Number port = n.numberValueOf("port");
-
-            List userList = n.selectNodes("user");
-            String[] users = new String[userList.size()];
-            Node user = null;
-            Iterator it2 = userList.iterator(); int i = 0;
-            while (it2.hasNext()) {
-                user = (Node) it2.next();
-                users[i] = user.getText();
-                i++;
-            }
-                        
-            DBInfo dbi = new DBInfo(alias,host,port.intValue(),database,users);
-            result.add(dbi);
-        }
-        return result;
+    	ArrayList<DBInfo> result = new ArrayList<DBInfo>();
+    	
+    	String alias, host, databaseType, databaseIdentifier, 
+    	databaseParameter, masterUser, masterPassword;
+    	String[] users;
+    	int port, databasePort;
+    	
+    	int unnamedDatabase = 0;
+    	
+    	List columnList = document.selectNodes("//config/login/triplet");
+    	Iterator it = columnList.iterator();
+    	while (it.hasNext()) {
+    		
+    		alias = host = databaseType = databaseIdentifier = 
+    			databaseParameter = masterUser = masterPassword = "";
+    		port = RMIServer.DEFAULT_PORT; databasePort = -1;
+    		
+    		Node n = (Node)it.next();
+    		// Obtain the basic characteristic.
+    		alias = n.valueOf("alias");
+    		host = n.valueOf("host");
+    		Number portNumber = n.numberValueOf("port");
+    		port = ( portNumber == null ? RMIServer.DEFAULT_PORT : portNumber.intValue() );
+    		
+    		// The database info.
+    		Node database = (Node) n.selectSingleNode("database");
+    		if(database != null) {
+    			databaseType = database.valueOf("engine");
+    			databaseIdentifier = database.valueOf("identifier");
+    			Number databasePortNumber = database.numberValueOf("port");
+    			databasePort = ( databasePortNumber == null ? -1 : databasePortNumber.intValue() );
+    			databaseParameter = database.valueOf("parameter");
+    			masterUser = database.valueOf("masteruser");
+    			masterPassword = database.valueOf("masterpassword");
+    		}
+    		else
+    			continue; // incomplete record (databaseType, databasePort, databaseIdentifier are obligatory).
+    		
+    		if(databasePort < 0)
+    			continue; // corrupted record (databasePort is obligatory).
+    		
+    		if(alias == null || alias.length() == 0) {
+    			unnamedDatabase++;
+    			alias = "Database " + unnamedDatabase;
+    		}
+    		
+    		// The list of stored users. 
+    		List userList = n.selectNodes("user");
+    		users = new String[userList.size()];
+    		Node user = null;
+    		Iterator it2 = userList.iterator(); int i = 0;
+    		while (it2.hasNext()) {
+    			user = (Node) it2.next();
+    			users[i] = user.getText();
+    			i++;
+    		}
+    		
+    		// Create a new DBInfo ~ triplet.
+    		DBInfo dbi = new DBInfo(
+    				alias, host, port, 
+    				databaseType, databasePort, databaseIdentifier, databaseParameter, 
+    				users, masterUser, masterPassword );
+    		
+    		result.add(dbi);
+    	}
+    	return result;
     }
     
     public void setColumns(ArrayList<Column> columns) {
@@ -158,14 +201,32 @@
         
         for (int i = 0; i < dbinfos.size(); i++) {
             DBInfo dbi = dbinfos.get(i);
+            
+            // Server settings.
             Element triplet = login.addElement("triplet");
             if (dbi.getAlias() != null)
                 triplet.addElement("alias").setText(dbi.getAlias());
             if (dbi.getHost() != null)
                 triplet.addElement("host").setText(dbi.getHost());
-            if (dbi.getDb() != null)
-                triplet.addElement("database").setText(dbi.getDb());
-            triplet.addElement("port").setText(""+dbi.getPort());
+            if(dbi.getPort() > 0)
+            	triplet.addElement("port").setText("" + dbi.getPort());
+            
+            // Database settings.
+            Element database = triplet.addElement("database");
+            if (dbi.getDatabaseType() != null)
+                database.addElement("engine").setText(dbi.getDatabaseType());
+            if(dbi.getDatabaseIdentifier() != null)
+            	database.addElement("identifier").setText(dbi.getDatabaseIdentifier());
+            if(dbi.getDatabasePort() > 0)
+            	database.addElement("port").setText("" + dbi.getDatabasePort());
+            if(dbi.getDatabaseParameter() != null)
+            	database.addElement("parameter").setText(dbi.getDatabaseParameter());
+            if(dbi.getMasterUser() != null)
+            	database.addElement("masteruser").setText(dbi.getMasterUser());
+            if(dbi.getMasterPassword() != null)
+            	database.addElement("masterpassword").setText(dbi.getMasterPassword());
+            
+            // Regular users of the database.
             String[] usrs = dbi.getUsers();
             for (int u = 0; u < usrs.length; u++) {
                 if (usrs[u] != null)

Modified: trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -4,7 +4,6 @@
 import java.awt.event.ActionEvent;
 
 import javax.swing.AbstractAction;
-import javax.swing.JOptionPane;
 
 import net.sf.plantlore.l10n.L10n;
 
@@ -29,14 +28,8 @@
 			view.next.setEnabled(false);
 			view.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
 			String user = (view.user.getSelectedItem() != null) ? view.user.getSelectedItem().toString() : null;
-			if(user != null)
-				model.connectToSelected(user, new String(view.password.getPassword()));
-			else 
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("Error.MissingUsername"),
-						L10n.getString("Error.Missing"),
-						JOptionPane.WARNING_MESSAGE);
-			
+
+			model.connectToSelected(user, new String(view.password.getPassword()));
 		}
 	}
 

Modified: trunk/src/net/sf/plantlore/client/login/AuthView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/AuthView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -22,11 +22,8 @@
  */
 public class AuthView extends javax.swing.JDialog implements Observer {
 	
-	private Login model;
-    
     /** Creates new form AuthView */
     public AuthView(Login model) {
-    	this.model = model;
     	model.addObserver(this);
         initComponents();
         getRootPane().setDefaultButton(next);
@@ -113,32 +110,36 @@
     /**
      * Reload the list of usernames according to the currently selected record.
      */
-    public void update(Observable source, Object arg) {
-    	if(arg == null || arg instanceof DBInfo) {
-    		DBInfo selected = model.getSelected();
-    		if(selected == null) return;
-    		user.removeAllItems();
-    		((AutoComboBox)user).addItems(selected.users);
-    		password.setText("");
-    		setTitle(L10n.getString("Login.ConnectingTo") + " " + selected.toString());
-    	}
-    	// Exception! We must display the exception to the user.
-    	else if(arg instanceof Exception) {
-    		status.setText(L10n.getString("Login.Failed"));
-    		next.setEnabled(true);
-    		setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
-    		JOptionPane.showMessageDialog(
-    				this, 
-    				((Exception)arg).getMessage(), 
-    				L10n.getString("Error.LoginFailed"), 
-    				JOptionPane.ERROR_MESSAGE);
-    	}
-    	// The database layer has been created, we are no longer neccessary
-		else if(arg instanceof DBLayer)
-    		this.setVisible(false); 
-    	// Some update information - display them in the status bar.
-		else if(arg instanceof String) 
-			status.setText("  " + (String)arg);
+    public void update(Observable source, final Object arg) {
+    	java.awt.EventQueue.invokeLater(new Runnable() {
+    		public void run() {
+    			if(arg == null || arg instanceof DBInfo) {
+    				DBInfo selected = (DBInfo)arg;
+    				if(selected == null) return;
+    				user.removeAllItems();
+    				((AutoComboBox)user).addItems(selected.users);
+    				password.setText("");
+    				setTitle(L10n.getString("Login.ConnectingTo") + " " + selected.toString());
+    			}
+    			// Exception! We must display the exception to the user.
+    			else if(arg instanceof Exception) {
+    				status.setText(L10n.getString("Login.Failed"));
+    				next.setEnabled(true);
+    				setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
+    				JOptionPane.showMessageDialog(
+    						null, 
+    						((Exception)arg).getMessage(), 
+    						L10n.getString("Error.LoginFailed"), 
+    						JOptionPane.ERROR_MESSAGE);
+    			}
+    			// The database layer has been created, we are no longer neccessary
+    			else if(arg instanceof DBLayer)
+    				setVisible(false); 
+    			// Some update information - display them in the status bar.
+    			else if(arg instanceof String) 
+    				status.setText("  " + (String)arg);
+    		}
+    	});
 	}
     
     

Modified: trunk/src/net/sf/plantlore/client/login/DBInfo.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/DBInfo.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/DBInfo.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -16,25 +16,16 @@
 public class DBInfo {
 	protected String alias;
 	protected String host;
-	protected String db;
-	protected String[] users;	
 	protected int port;
+	protected String databaseType;
+	protected int databasePort;
+	protected String databaseIdentifier;
+	protected String databaseParameter;
+	protected String[] users;
+	protected String masterUser;
+	protected String masterPassword;
 	
 	/**
-	 * Create a new record.
-	 * 
-	 * @param alias The name the user will be presented with.
-	 * @param host The hostname where the server runs.
-	 * @param port The port number where the server listens, 0 means default.
-	 * @param db The database identificator.
-	 * @param users The list of user names used lately.
-	 */
-	public DBInfo(String alias, String host, int port, String db, String[] users) {
-		this.alias = alias; this.host = host; this.port = (port <= 0) ? 1099 : port; this.db = db; this.users = users;
-	}
-	
-
-	/**
 	 * Pick a user. The selected name will be moved to the start of the list.
 	 * The selected user will be at the top of the list next time.
 	 * 
@@ -55,25 +46,69 @@
 	public String toString() {
 		return alias;
 	}
+	
+	
+	public DBInfo clone() {
+		return new DBInfo(
+				alias, host, port, databaseType, databasePort, databaseIdentifier, databaseParameter,
+				users, masterUser, masterPassword );
+	}
 
-    public String getAlias() {
-        return alias;
-    }
+	public DBInfo(String alias, String host, int port, String databaseType, int databasePort, String databaseIdentifier, String databaseParameter, String[] users, String masterUser, String masterPassword) {
+		this.alias = alias;
+		this.host = host;
+		this.port = port;
+		this.databaseType = databaseType;
+		this.databasePort = databasePort;
+		this.databaseIdentifier = databaseIdentifier;
+		this.databaseParameter = databaseParameter;
+		this.users = users;
+		this.masterUser = masterUser;
+		this.masterPassword = masterPassword;
+	}
 
-    public String getHost() {
-        return host;
-    }
+	
+	public String getAlias() {
+		return alias;
+	}
 
-    public String getDb() {
-        return db;
-    }
+	public String getDatabaseIdentifier() {
+		return databaseIdentifier;
+	}
 
-    public String[] getUsers() {
-        return users;
-    }
+	public String getDatabaseParameter() {
+		return databaseParameter;
+	}
 
-    public int getPort() {
-        return port;
-    }
+	public int getDatabasePort() {
+		return databasePort;
+	}
+
+	public String getDatabaseType() {
+		return databaseType;
+	}
+
+	public String getHost() {
+		return host;
+	}
+
+	public String getMasterPassword() {
+		return masterPassword;
+	}
+
+	public String getMasterUser() {
+		return masterUser;
+	}
+
+	public int getPort() {
+		return port;
+	}
+
+	public String[] getUsers() {
+		return users;
+	}
+
+
+	
 		
 }

Modified: trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -3,6 +3,7 @@
 import java.awt.event.ActionEvent;
 
 import javax.swing.AbstractAction;
+import javax.swing.event.ChangeEvent;
 
 import net.sf.plantlore.l10n.L10n;
 
@@ -17,21 +18,38 @@
 	
 	
 	// Switch between the ADD/EDIT behaviour
-	public void setMode(Mode m) { 
+	public void setMode(Mode m) {
 		this.mode = m;
 		switch(m) {
 		case ADD:
-			view.setTitle(L10n.getString("Login.AddTitle"));
-			view.alias.setText(""); 
-			view.host.setText("");
-			view.db.setText("");
-			view.next.setText(L10n.getString("Login.Add"));
-			view.next.setToolTipText(L10n.getString("Login.AddTT"));
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					view.alias.setText(""); 
+					view.host.setText("");
+					view.port.setText("");
+					((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).setText("");
+					view.databaseIdentifier.setText("");
+					view.databasePort.setText("");
+					view.databaseParameter.setText("");
+					view.databaseMasterUser.setText("");
+					view.databaseMasterPassword.setText("");
+					
+					view.setTitle(L10n.getString("Login.AddTitle"));
+					view.next.setText(L10n.getString("Login.Add"));
+					view.next.setToolTipText(L10n.getString("Login.AddTT"));
+					view.next.setEnabled(false);
+				}
+			});
 			break;
 		case EDIT:
-			view.setTitle(L10n.getString("Login.EditTitle"));
-			view.next.setText(L10n.getString("Login.Change"));
-			view.next.setToolTipText(L10n.getString("Login.ChangeTT"));
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					view.setTitle(L10n.getString("Login.EditTitle"));
+					view.next.setText(L10n.getString("Login.Change"));
+					view.next.setToolTipText(L10n.getString("Login.ChangeTT"));
+					view.next.setEnabled(true);
+				}
+			});
 			break;
 		}
 	}
@@ -39,30 +57,102 @@
 	
 	public ItemCtrl(Login login, ItemView itemview) {
 		this.model = login; this.view = itemview;
-		view.next.setAction(new Next());
+		view.next.setAction(new NextAction());
+		view.discard.setAction(new DiscardAction());
+		//view.next.addChangeListener();
 	}
 	
-	class Next extends AbstractAction {
-		public Next() {
+	
+	
+	class ObligatoryItemsListener implements javax.swing.event.ChangeListener {
+		public void stateChanged(ChangeEvent event) {
+			boolean newState = 
+				view.alias.getText().length() > 0
+				&&
+				((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).getText().length() > 0
+				&&
+				view.databaseIdentifier.getText().length() > 0;
+			if(newState)
+				try {
+					if( Integer.parseInt(view.databasePort.getText()) < 1024 )
+						newState = false;
+				} catch(Exception e) { 
+					newState = false; 
+				}
+			
+			boolean state = view.next.isEnabled();
+			
+			if( state != newState )
+				view.next.setEnabled(newState);
+		}
+	}
+	
+	
+	class NextAction extends AbstractAction {
+		public NextAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.ChangeTT"));
 			putValue(NAME, L10n.getString("Login.Change"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
-			int t = view.host.getText().indexOf(':');
-			int port = (t < 0) ? 1099 : Integer.parseInt(view.host.getText().substring(t));
-			String host = (t < 0) ? view.host.getText() : view.host.getText().substring(0, t - 1);
-			String alias = view.alias.getText(), db = view.db.getText();
+			int port = 1099, databasePort = -1;
+			try {
+				port = Integer.parseInt(view.port.getText());
+			} catch(NumberFormatException e) {}
+			try {
+				databasePort = Integer.parseInt(view.databasePort.getText());
+			} catch(NumberFormatException e) {}
 			
 			switch(mode) {
 			case ADD:
-				model.createRecord(alias, host, port, db);
+				model.createRecord(
+						view.alias.getText(),
+						view.host.getText(),
+						port,
+						((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).getText(),
+						databasePort,
+						view.databaseIdentifier.getText(),
+						view.databaseParameter.getText(),
+						view.databaseMasterUser.getText(),
+						new String(view.databaseMasterPassword.getPassword())
+				);
 				break;
 			case EDIT:
-				model.updateSelectedRecord(alias, host, port, db);
+				model.updateSelectedRecord(
+						view.alias.getText(),
+						view.host.getText(),
+						port,
+						((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).getText(),
+						databasePort,
+						view.databaseIdentifier.getText(),
+						view.databaseParameter.getText(),
+						view.databaseMasterUser.getText(),
+						new String(view.databaseMasterPassword.getPassword())
+				);
 				break;
 			}
-			view.setVisible(false);
+			
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					view.setVisible(false);
+				}
+			});
+			
+			setMode(Mode.EDIT);
 		}
 	}
+	
+	class DiscardAction extends AbstractAction {
+		public DiscardAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Login.DiscardTT"));
+			putValue(NAME, L10n.getString("Login.Discard"));
+		}
+		public void actionPerformed(ActionEvent arg0) {
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					view.setVisible(false);
+				}
+			});
+		}
+	}
 
 }

Modified: trunk/src/net/sf/plantlore/client/login/ItemView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemView.form	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/ItemView.form	2006-06-03 16:48:24 UTC (rev 428)
@@ -24,20 +24,50 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" attributes="0">
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="discard" linkSize="1" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="next" linkSize="1" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <Group type="102" alignment="0" attributes="0">
                       <Group type="103" groupAlignment="0" attributes="0">
                           <Component id="jLabel1" alignment="0" min="-2" max="-2" attributes="0"/>
                           <Component id="jLabel2" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel8" alignment="0" min="-2" max="-2" attributes="0"/>
+                      </Group>
+                      <EmptySpace min="-2" pref="6" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="host" alignment="0" pref="231" max="32767" attributes="0"/>
+                          <Component id="alias" alignment="0" pref="231" max="32767" attributes="0"/>
+                          <Component id="port" alignment="0" pref="231" max="32767" attributes="0"/>
+                      </Group>
+                  </Group>
+                  <Group type="102" alignment="0" attributes="0">
+                      <Group type="103" groupAlignment="0" attributes="0">
                           <Component id="jLabel3" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <EmptySpace min="-2" pref="8" max="-2" attributes="0"/>
                       <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="db" alignment="0" pref="233" max="32767" attributes="0"/>
-                          <Component id="host" alignment="0" pref="233" max="32767" attributes="0"/>
-                          <Component id="alias" alignment="0" pref="233" max="32767" attributes="0"/>
+                          <Component id="databaseIdentifier" pref="231" max="32767" attributes="0"/>
+                          <Component id="database" alignment="0" pref="231" max="32767" attributes="0"/>
                       </Group>
                   </Group>
-                  <Component id="next" alignment="1" min="-2" max="-2" attributes="0"/>
+                  <Group type="102" alignment="0" attributes="0">
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="jLabel4" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel5" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel6" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel7" alignment="0" min="-2" max="-2" attributes="0"/>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="databasePort" alignment="0" pref="231" max="32767" attributes="0"/>
+                          <Component id="databaseParameter" alignment="0" pref="231" max="32767" attributes="0"/>
+                          <Component id="databaseMasterUser" alignment="0" pref="231" max="32767" attributes="0"/>
+                          <Component id="databaseMasterPassword" alignment="0" pref="231" max="32767" attributes="0"/>
+                      </Group>
+                  </Group>
               </Group>
               <EmptySpace max="-2" attributes="0"/>
           </Group>
@@ -56,13 +86,46 @@
                   <Component id="jLabel2" alignment="3" min="-2" max="-2" attributes="0"/>
                   <Component id="host" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel8" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="port" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="jLabel3" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="db" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="database" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel9" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="databaseIdentifier" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel4" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="databasePort" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel5" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="databaseParameter" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel6" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="databaseMasterUser" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="jLabel7" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="databaseMasterPassword" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
               <EmptySpace max="32767" attributes="0"/>
-              <Component id="next" min="-2" max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="next" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="discard" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
               <EmptySpace min="-2" max="-2" attributes="1"/>
           </Group>
       </Group>
@@ -91,29 +154,165 @@
       </Properties>
     </Component>
     <Component class="javax.swing.JTextField" name="alias">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.AliasTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
       <AuxValues>
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
     <Component class="javax.swing.JTextField" name="host">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.HostNameTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
       <AuxValues>
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
-    <Component class="javax.swing.JTextField" name="db">
+    <Component class="javax.swing.JButton" name="next">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.Change" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
       <AuxValues>
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
-    <Component class="javax.swing.JButton" name="next">
+    <Component class="javax.swing.JComboBox" name="database">
       <Properties>
+        <Property name="editable" type="boolean" value="true"/>
+        <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+          <StringArray count="4">
+            <StringItem index="0" value="postgresql"/>
+            <StringItem index="1" value="firebirdsql"/>
+            <StringItem index="2" value="mysql"/>
+            <StringItem index="3" value="oraclesql"/>
+          </StringArray>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.DatabaseTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel4">
+      <Properties>
         <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
-          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.Change" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.DatabasePort" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
         </Property>
       </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="databasePort">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.DatabasePortTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
       <AuxValues>
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
+    <Component class="javax.swing.JLabel" name="jLabel5">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.Parameter" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="databaseParameter">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.ParameterTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel6">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.MasterUser" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="databaseMasterUser">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.MasterUserTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel7">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.MasterPassword" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JPasswordField" name="databaseMasterPassword">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.MasterPasswordTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JButton" name="discard">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.Discard" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel8">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.Port" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="port">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.PortTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel9">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.DatabaseIdentifier" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="databaseIdentifier">
+      <Properties>
+        <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Login.DatabaseIdentifierTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
   </SubComponents>
 </Form>

Modified: trunk/src/net/sf/plantlore/client/login/ItemView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/ItemView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -41,8 +41,21 @@
         jLabel3 = new javax.swing.JLabel();
         alias = new javax.swing.JTextField();
         host = new javax.swing.JTextField();
-        db = new javax.swing.JTextField();
         next = new javax.swing.JButton();
+        database = new javax.swing.JComboBox();
+        jLabel4 = new javax.swing.JLabel();
+        databasePort = new javax.swing.JTextField();
+        jLabel5 = new javax.swing.JLabel();
+        databaseParameter = new javax.swing.JTextField();
+        jLabel6 = new javax.swing.JLabel();
+        databaseMasterUser = new javax.swing.JTextField();
+        jLabel7 = new javax.swing.JLabel();
+        databaseMasterPassword = new javax.swing.JPasswordField();
+        discard = new javax.swing.JButton();
+        jLabel8 = new javax.swing.JLabel();
+        port = new javax.swing.JTextField();
+        jLabel9 = new javax.swing.JLabel();
+        databaseIdentifier = new javax.swing.JTextField();
 
         setTitle(L10n.getString("Login.Change"));
         setTitle(L10n.getString("Login.Add"));
@@ -54,8 +67,42 @@
 
         jLabel3.setText(L10n.getString("Login.Database"));
 
+        alias.setToolTipText(L10n.getString("Login.AliasTT"));
+
+        host.setToolTipText(L10n.getString("Login.HostNameTT"));
+
         next.setText(L10n.getString("Login.Change"));
 
+        database.setEditable(true);
+        database.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "postgresql", "firebirdsql", "mysql", "oraclesql" }));
+        database.setToolTipText(L10n.getString("Login.DatabaseTT"));
+
+        jLabel4.setText(L10n.getString("Login.DatabasePort"));
+
+        databasePort.setToolTipText(L10n.getString("Login.DatabasePortTT"));
+
+        jLabel5.setText(L10n.getString("Login.Parameter"));
+
+        databaseParameter.setToolTipText(L10n.getString("Login.ParameterTT"));
+
+        jLabel6.setText(L10n.getString("Login.MasterUser"));
+
+        databaseMasterUser.setToolTipText(L10n.getString("Login.MasterUserTT"));
+
+        jLabel7.setText(L10n.getString("Login.MasterPassword"));
+
+        databaseMasterPassword.setToolTipText(L10n.getString("Login.MasterPasswordTT"));
+
+        discard.setText(L10n.getString("Login.Discard"));
+
+        jLabel8.setText(L10n.getString("Login.Port"));
+
+        port.setToolTipText(L10n.getString("Login.PortTT"));
+
+        jLabel9.setText(L10n.getString("Login.DatabaseIdentifier"));
+
+        databaseIdentifier.setToolTipText(L10n.getString("Login.DatabaseIdentifierTT"));
+
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
@@ -63,19 +110,45 @@
             .add(layout.createSequentialGroup()
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(discard)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(next))
                     .add(layout.createSequentialGroup()
                         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jLabel1)
                             .add(jLabel2)
-                            .add(jLabel3))
+                            .add(jLabel8))
+                        .add(6, 6, 6)
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                            .add(host, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(alias, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(port, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)))
+                    .add(layout.createSequentialGroup()
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                            .add(jLabel3)
+                            .add(jLabel9))
+                        .add(8, 8, 8)
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                            .add(databaseIdentifier, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(database, 0, 231, Short.MAX_VALUE)))
+                    .add(layout.createSequentialGroup()
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                            .add(jLabel4)
+                            .add(jLabel5)
+                            .add(jLabel6)
+                            .add(jLabel7))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(db, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
-                            .add(host, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
-                            .add(alias, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
-                    .add(org.jdesktop.layout.GroupLayout.TRAILING, next))
+                            .add(databasePort, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(databaseParameter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(databaseMasterUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
+                            .add(databaseMasterPassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))))
                 .addContainerGap())
         );
+
+        layout.linkSize(new java.awt.Component[] {discard, next}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(layout.createSequentialGroup()
@@ -89,10 +162,36 @@
                     .add(host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel8)
+                    .add(port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(jLabel3)
-                    .add(db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(database, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel9)
+                    .add(databaseIdentifier, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel4)
+                    .add(databasePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel5)
+                    .add(databaseParameter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel6)
+                    .add(databaseMasterUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel7)
+                    .add(databaseMasterPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                .add(next)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(next)
+                    .add(discard))
                 .addContainerGap())
         );
         pack();
@@ -103,21 +202,45 @@
      * Fill all fields with information obtained from the currently selected record.
      */
     public void update(Observable arg0, Object arg1) {
-		DBInfo info = model.getSelected();
-		if(info == null) return;
-		alias.setText(info.alias); 
-		host.setText(info.host + ((info.port != 1099) ? " : " + info.port : ""));
-		db.setText(info.db);
+		java.awt.EventQueue.invokeLater(new Runnable() {
+			public void run() {
+				DBInfo info = model.getSelected();
+				if(info != null) {
+					alias.setText(info.alias); 
+					host.setText(info.host);
+					port.setText( Integer.toString(info.port) );
+					((javax.swing.JTextField)database.getEditor().getEditorComponent()).setText(info.databaseType);
+					databaseIdentifier.setText(info.getDatabaseIdentifier());
+					databasePort.setText( Integer.toString(info.getDatabasePort()) );
+					databaseParameter.setText(info.getDatabaseParameter());
+					databaseMasterUser.setText(info.getMasterUser());
+					databaseMasterPassword.setText(info.getMasterPassword());
+				}
+			}
+		});
 	}
     
     // Variables declaration - do not modify//GEN-BEGIN:variables
     protected javax.swing.JTextField alias;
-    protected javax.swing.JTextField db;
+    protected javax.swing.JComboBox database;
+    protected javax.swing.JTextField databaseIdentifier;
+    protected javax.swing.JPasswordField databaseMasterPassword;
+    protected javax.swing.JTextField databaseMasterUser;
+    protected javax.swing.JTextField databaseParameter;
+    protected javax.swing.JTextField databasePort;
+    protected javax.swing.JButton discard;
     protected javax.swing.JTextField host;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
+    private javax.swing.JLabel jLabel4;
+    private javax.swing.JLabel jLabel5;
+    private javax.swing.JLabel jLabel6;
+    private javax.swing.JLabel jLabel7;
+    private javax.swing.JLabel jLabel8;
+    private javax.swing.JLabel jLabel9;
     protected javax.swing.JButton next;
+    protected javax.swing.JTextField port;
     // End of variables declaration//GEN-END:variables
     
 }

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,5 +1,6 @@
 package net.sf.plantlore.client.login;
 
+import java.io.IOException;
 import java.rmi.RemoteException;
 import java.util.ArrayList;
 import java.util.Observable;
@@ -45,16 +46,13 @@
 	
 	//private String  file = System.getProperty("user.home") + "/.plantlore/db.info.xml";
 	
-        private MainConfig mainConfig = null;
+	private MainConfig mainConfig = null;
 	private DBLayerFactory factory = null;
 	private DBLayer dblayer;
-	private Logger logger;
+	private Logger logger  = Logger.getLogger(this.getClass().getPackage().getName());
 	
-	private String username;
-	private String passcode;
-	
 	private Right accessRights;
-        private User plantloreUser;
+	private User plantloreUser;
 	
 	/**
 	 * Create a new login model. The DBLayer factory will be used to produce 
@@ -64,36 +62,35 @@
 	 */
 	public Login(DBLayerFactory factory, MainConfig mainConfig) {
 		this.factory = factory;
-                this.mainConfig = mainConfig;
-		logger = Logger.getLogger(this.getClass().getPackage().getName());
+		this.mainConfig = mainConfig;
 		load();
 	}
 	
 	
 	/**
 	 * Load saved information about the database connections.
-	 * TODO: -IMPLEMENTATION MISSING-
 	 */
 	protected void load() {
 		logger.debug("Loading the stored list of databases.");
 		
-                for (DBInfo savedDBInfo: mainConfig.getDBinfos())
-                    dbinfo.add(savedDBInfo);
-                				
+		for (DBInfo savedDBInfo: mainConfig.getDBinfos())
+			dbinfo.add(savedDBInfo);
+		
 		this.setChanged(); this.notifyObservers(UPDATE_LIST);
 	}
 	
 	/**
 	 * Save the list of database connections for further usage.
-	 * TODO: -IMPLEMENTATION MISSING-
 	 */
 	protected void save() {
 		logger.debug("Saving the list of databases.");
-
-                mainConfig.setDBInfos(dbinfo);
-                
-                //ukladat uz tady?! spis ne - co kdyby se ukladani nepovedlo? bylo by divny to porad hlasit
-                //mainConfig.save();
+		
+		mainConfig.setDBInfos(dbinfo);
+		try {
+			mainConfig.save();
+		}catch(IOException e) {
+			logger.warn("Saving failed. "+e.getMessage());
+		}
 	}
 	
 
@@ -101,13 +98,22 @@
 	 * Create a new record, add it to the list of connections and save that information for
 	 * the future use.
 	 * 
-	 * @param alias	Alias of the database.
-	 * @param host	Hostname of the computer where the server dwells.
-	 * @param port	Port where the server listens.
-	 * @param db		Identifier of the database to which the User wants to connect.
+	
 	 */
-	public void createRecord(String alias, String host, int port, String db) {
-		DBInfo r = new DBInfo(alias, host, port, db, new String[MAX_NAMES]);
+	synchronized public void createRecord(
+			String alias, 
+			String host, 
+			int port, 
+			String databaseType, 
+			int databasePort, 
+			String databaseIdentifier, 
+			String databaseParameter, 
+			String masterUser, 
+			String masterPassword ) {
+
+		DBInfo r = new DBInfo(
+				alias, host, port, databaseType, databasePort, databaseIdentifier, databaseParameter,
+				new String[MAX_NAMES], masterUser, masterPassword );
 		dbinfo.add(r);
 		logger.debug("New database record has been created " + r);
 		save();
@@ -118,7 +124,7 @@
 	 * Delete the selected record from the list.
 	 *
 	 */
-	public void deleteSelectedRecord() {
+	synchronized public void deleteSelectedRecord() {
 		if(selected == null) return;
 		dbinfo.remove(selected);
 		logger.debug("The selected record has been removed " + selected);
@@ -135,9 +141,30 @@
 	 * @param port	Port where the server listens.
 	 * @param db		Identifier of the database to which the User wants to connect.
 	 */
-	public void updateSelectedRecord(String alias, String host, int port, String db) {
+	synchronized public void updateSelectedRecord(
+			String alias, 
+			String host, 
+			int port, 
+			String databaseType, 
+			int databasePort, 
+			String databaseIdentifier, 
+			String databaseParameter, 
+			String masterUser, 
+			String masterPassword ) {
+
 		if(selected == null) return;
-		selected.alias = alias; selected.host = host; selected.port = port; selected.db = db;
+		
+		selected.alias = alias ;
+		selected.host = host; 
+		selected.port = port;
+		selected.databaseType = databaseType; 
+		selected.databasePort = databasePort ;
+		selected.databaseIdentifier = databaseIdentifier ;
+		selected.databaseParameter = databaseParameter; 
+		selected.masterUser = masterUser;
+		selected.masterPassword = masterPassword;
+		
+		save();
 		logger.debug("The selected record has been updated " + selected);
 		this.setChanged(); this.notifyObservers(UPDATE_LIST);
 	}
@@ -145,7 +172,7 @@
 	/**
 	 * @return the list of all records.
 	 */
-	public DBInfo[] getRecords() {
+	synchronized public DBInfo[] getRecords() {
 		// Seeing is believing: http://java.sun.com/j2se/1.5.0/docs/api/java/util/Collection.html#toArray(T[])
 		return dbinfo.toArray(new DBInfo[0]);
 	}
@@ -158,34 +185,25 @@
 	 * @param index	The index of the selected record. Zero means first. 
 	 * Negative means nothing gets selected (deselect).
 	 */
-	public void setSelected(int index) {
+	synchronized public void setSelected(int index) {
 		if(index == lastIndex) 
 			return;
-		if(index >= 0) selected = dbinfo.get(index); 
-		else selected = null;
+		else if(index >= 0) 
+			selected = dbinfo.get(index); 
+		else 
+			selected = null;
 		
 		lastIndex = index;
 		
 		logger.debug("Selected database is " + selected);
 		this.setChanged(); 
-		/*------------------------------------------------------------
-		 * The reason why a parameter is used here is simple:
-		 * 1. you select something in the choice list in the LoginView ->
-		 * 2. ListSelectionEvent is fired ->
-		 * 3. model.setSelected(..) is called in the handler ->
-		 * 4. notifyObservers(..) is called here ->
-		 * 5. loginView.update() gets involved ->
-		 * 6. without proper recognition of events setList(data)
-		 *    would be called which will in turn trigger 
-		 *    ListSelectionEvent -> 2.
-		 *------------------------------------------------------------*/
-		this.notifyObservers( selected );
+		this.notifyObservers( selected.clone() );
 	}
 	
 	/**
 	 * @return	The selected record.
 	 */
-	public DBInfo getSelected() {
+	synchronized public DBInfo getSelected() {
 		return selected;
 	}
 	
@@ -201,44 +219,43 @@
 	 * @param name The account name (used to access the database).  
 	 * @param password The password to the account.
 	 */
-	public void connectToSelected(String name, String password) {
-		this.username = name; this.passcode = password;
+	synchronized public void connectToSelected(final String name, final String password) {
+		
 		if(selected == null) {
 			logger.debug("The System cannot create a connection when nothing was selected!");
 			return;
 		}
 		
+		final DBInfo selectedClone = selected.clone();
+		
 		 final SwingWorker worker = new SwingWorker() {
 	            public Object construct() {
 	            	
+            		logout();
 	            	try {
-	            		logout();
-	            	} catch (RemoteException e) { logger.info("Unable to disconnect from the server. " + e); }
-	            	
-	            	try {
 	            		// The current username is moved to the top of the list of names :) Nice feature.
-	            		selected.promoteUser(username);
+	            		selectedClone.promoteUser(name);
 	            		// Save the current state.
 	            		save();
 	            		
 	            		// Create a new database layer.
-	            		logger.debug("Asking the DBLayerFactory for a new DBLayer @ " + selected.host + ":" + selected.port);
+	            		logger.debug("Asking the DBLayerFactory for a new DBLayer @ " + selectedClone.host + ":" + selectedClone.port);
 	            		setChanged(); notifyObservers(L10n.getString("Login.Connecting"));
-	            		dblayer = factory.create(selected.host, selected.port);
+	            		dblayer = factory.create( selectedClone );
 	            		
 	            		logger.debug("Connection successful.");
 	            		setChanged(); notifyObservers(L10n.getString("Login.Connected"));
 	            		
 	            		// Initialize the database layer.
 	            		setChanged(); notifyObservers(L10n.getString("Login.InitializingDBLayer"));
-	            		logger.debug("Initializing that DBLayer (" + selected.db + ", " + username + ", " + passcode + "...");
+	            		logger.debug("Initializing that DBLayer (" + selectedClone.databaseType + ", " + name + ", " + password + "...");
 
-	            		Object[] init = dblayer.initialize(selected.db, username, passcode);
+	            		Object[] init = dblayer.initialize(selectedClone.getDatabaseIdentifier(), name, password);
 	            		plantloreUser = (User)init[0];
 	            		accessRights = (Right)init[1];
 	            	} 
 	            	catch (Exception exception) {
-	            		logger.error("The initialization of the DBLayer failed! " + exception);
+	            		logger.error("The initialization of the DBLayer failed! " + exception.getMessage());
 	            		// If the initialization of the DBLayer failed, the uninitialized DBLayer must be destroyed!
 	            		// If it is not, the server's policy may not allow another connection from this client!
 	            		try {
@@ -269,27 +286,31 @@
 	 * 
 	 * @throws RemoteException if the RMI encounters an error.
 	 */
-	public void logout() throws RemoteException {
-		if(dblayer != null) {
-			factory.destroy(dblayer);
-			dblayer = null; accessRights = null; plantloreUser = null;
-			logger.info("The client disconnected itself from the server. The communication may no longer be possible.");
-			this.setChanged(); this.notifyObservers();
-		}
+	public void logout() {
+		if(dblayer != null) 
+			try {
+				factory.destroy(dblayer);
+				dblayer = null; accessRights = null; plantloreUser = null;
+				logger.info("The client disconnected itself from the server. The communication may no longer be possible.");
+			} catch(RemoteException e) {
+				logger.warn("Unable to disconnect from the server. " + e.getMessage());
+				/*setChanged();
+				notifyObservers(e);*/ // Not this time, this is supposed to be silent.
+			}
 	}
 	
 		
 	/**
 	 * @return The last DBLayer that has been created.  
 	 */	
-	public DBLayer getDBLayer() { 
+	synchronized public DBLayer getDBLayer() { 
 		return dblayer; 
 	}
 	
 	/**
 	 * @return The currently logged user.
 	 */
-	public User getLoggedUser() {
+	synchronized public User getLoggedUser() {
 		return plantloreUser;
 	}
 	
@@ -297,7 +318,7 @@
 	 * @return The list of access rights as returned by the database layer
 	 * after initialization.
 	 */
-	public Right getAccessRights() {
+	synchronized public Right getAccessRights() {
 		return accessRights;
 	}
         

Modified: trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -4,7 +4,6 @@
 
 import javax.swing.AbstractAction;
 import javax.swing.JDialog;
-import javax.swing.JOptionPane;
 import javax.swing.event.ListSelectionEvent;
 import javax.swing.event.ListSelectionListener;
 
@@ -24,71 +23,63 @@
 	
 	public LoginCtrl(Login login, LoginView loginview) {
 		this.view = loginview; this.model = login;
-		// Create Item Add/Edit dialog.
-		itemView = new ItemView(model);
-		itemCtrl = new ItemCtrl(model, itemView);
-		// Create Authorization dialog.
-		authView = new AuthView(model);
-		new AuthCtrl(model, authView);
 		
+		java.awt.EventQueue.invokeLater(new Runnable() {
+			public void run() {
+				// Create Item Add/Edit dialog.
+				itemView = new ItemView(model);
+				itemCtrl = new ItemCtrl(model, itemView);
+				// Create Authorization dialog.
+				authView = new AuthView(model);
+				new AuthCtrl(model, authView);
+			}
+		});
 		
 		view.choice.addListSelectionListener(new ChoiceChanged());
-		view.add.setAction(new AddRecord());
-		view.edit.setAction(new EditRecord());
-		view.remove.setAction(new RemoveRecord());
-		view.next.setAction(new Next());
+		view.add.setAction(new AddRecordAction());
+		view.edit.setAction(new EditRecordAction());
+		view.remove.setAction(new RemoveRecordAction());
+		view.next.setAction(new NextAction());
 		
 		// Select something.
 		view.choice.setSelectedIndex(0);
 	}
 	
 	
-	public void setVisible(boolean visible) {
-		JDialog dialog = view;
-		if( view.remember.isSelected() && !view.choice.isSelectionEmpty() ) { 
-			dialog = authView;
-		}
+	public void setVisible(final boolean visible) {
+		final JDialog dialog = view.remember.isSelected() && !view.choice.isSelectionEmpty() ? authView : view;
+		java.awt.EventQueue.invokeLater(new Runnable() {
+			public void run() {
+				dialog.setVisible(visible);
+			}
+		});
 		
-		//UNCOMMENT THIS:      
-		dialog.setVisible(visible);
-		
-//		// TEMPORARY CODE STARTS HERE
-//			System.out.println("HYPERACTIVE-LOGIN");
-//			authView.password.setText("masterkey");
-//			authView.next.doClick(); 
-//		// TEMPORARY CODE ENDS HERE
 	}
 	
 	
 	class ChoiceChanged implements ListSelectionListener {
 		public void valueChanged(ListSelectionEvent e) {
-			/*----------------------------------------------------------
-			 *  Well here is some nasty behaviour of the Swing
-			 *  framework: for some unknown reason 
-			 *  the ListSelectionEvent is sent twice every time 
-			 *  you select something in the list. Why?
-			 *  
-			 *  The reason will be simple: 
-			 *  mousePressed & mouseReleased 
-			 *  (instead of mouseClicked).  
-			 *----------------------------------------------------------*/
 			model.setSelected( view.choice.getSelectedIndex() );
 		}	
 	}
 	
-	class AddRecord extends AbstractAction {
-		public AddRecord() {
+	class AddRecordAction extends AbstractAction {
+		public AddRecordAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.AddRecordTT"));
 			putValue(NAME, L10n.getString("Login.AddRecord"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
 			itemCtrl.setMode(ItemCtrl.Mode.ADD);
-			itemView.setVisible(true);
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					itemView.setVisible(true);
+				}
+			});
 		}
 	}
 	
-	class  RemoveRecord extends AbstractAction {
-		public RemoveRecord() {
+	class  RemoveRecordAction extends AbstractAction {
+		public RemoveRecordAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.RemoveRecordTT"));
 			putValue(NAME, L10n.getString("Login.RemoveRecord"));
 		}
@@ -97,37 +88,35 @@
 		}
 	}
 	
-	class EditRecord extends AbstractAction {
-		public EditRecord() {
+	class EditRecordAction extends AbstractAction {
+		public EditRecordAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.EditRecordTT"));
 			putValue(NAME, L10n.getString("Login.EditRecord"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
-			if(model.getSelected() == null)
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("Error.NothingSelected"),
-					    L10n.getString("Error.Missing"),
-					    JOptionPane.WARNING_MESSAGE);
-			else {
+			if(model.getSelected() != null) {
 				itemCtrl.setMode(ItemCtrl.Mode.EDIT);
-				itemView.setVisible(true);
+				java.awt.EventQueue.invokeLater(new Runnable() {
+					public void run() {
+						itemView.setVisible(true);
+					}
+				});
 			}
 		}
 	}
 	
-	class Next extends AbstractAction {
-		public Next() {
+	class NextAction extends AbstractAction {
+		public NextAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.NextTT"));
 			putValue(NAME, L10n.getString("Login.Next"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
-			if(model.getSelected() == null)
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("Error.NothingSelected"),
-					    L10n.getString("Error.Missing"),
-					    JOptionPane.WARNING_MESSAGE);
-			else
-				authView.setVisible(true);
+			if(model.getSelected() != null)
+				java.awt.EventQueue.invokeLater(new Runnable() {
+					public void run() {
+						authView.setVisible(true);
+					}
+				});
 		}
 	}
 

Modified: trunk/src/net/sf/plantlore/client/login/LoginView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -104,17 +104,21 @@
     /**
      * Update the list of records (in case there were some changes).
      */
-    public void update(Observable source, Object parameter) {
-    	// Ignore setSelected() event
-    	if(parameter == Login.UPDATE_LIST) {
-    		// Every item of the list will - after being added to the list - 
-    		// cause a ListSelectionEvent (valueChange) event!
-    		// This is probably because every time an item is inserted 
-    		// into the list, it is also selected!
-    		choice.setListData(model.getRecords());
-    	}
-    	else if(parameter != null && parameter instanceof DBLayer)
-    		this.setVisible(false); // the database layer has been created, we are no longer neccessary
+    public void update(Observable source, final Object parameter) {
+    	java.awt.EventQueue.invokeLater(new Runnable() {
+    		public void run() {
+    			// Ignore setSelected() event
+    			if(parameter == Login.UPDATE_LIST) {
+    				// Every item of the list will - after being added to the list - 
+    				// cause a ListSelectionEvent (valueChange) event!
+    				// This is probably because every time an item is inserted 
+    				// into the list, it is also selected!
+    				choice.setListData(model.getRecords());
+    			}
+    			else if(parameter != null && parameter instanceof DBLayer)
+    				setVisible(false); // the database layer has been created, we are no longer neccessary
+    		}
+    	});
 	}
     
     

Modified: trunk/src/net/sf/plantlore/common/record/Record.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -373,7 +373,7 @@
 		StringBuilder sigma = new StringBuilder();
 		for(String property : this.getProperties())
 			sigma.append(getClass().getSimpleName()).append('.').
-			append(property).append(" = ").append(this.getValue(property)).append(";\n");
+			append(property).append(" = ").append(this.getValue(property)).append(";");
 		for(String key : getForeignKeys()) {
 			Record subrecord = (Record)getValue(key); 
 			if(subrecord != null)	sigma.append( subrecord.toString() );

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-03 16:48:24 UTC (rev 428)
@@ -379,17 +379,37 @@
 Login.RemoveRecordTT = Remove the selected record (the database won't be deleted!).
 
 Login.Alias = Alias
+Login.AliasTT = The string that will be displayed to you.
 Login.HostName = Hostname
+Login.HostNameTT = The name of the computer where the server dwells.
 Login.Database = Database
+Login.DatabaseTT = The database engine that contains the data.
+Login.DatabaseIdentifier = DB Id.
+Login.DatabaseIdentifierTT = The identifier of the database that is stored within the database engine.
+Login.DatabasePort = DB Port
+Login.DatabasePortTT = The port where the database engine listens.
+Login.Port = Port
+Login.PortTT = The port where the server listens.
+Login.Parameter = Parameter
+Login.ParameterTT = Additional information required for the connection (such as encoding).
+Login.MasterUser = User
+Login.MasterUserTT = The database account this connection shall use.
+Login.MasterPassword = Password
+Login.MasterPasswordTT = The password to the database account.
+
 Login.Next = Continue
 Login.NextTT = Proceed to the next step.
+Login.DatabaseTT=The engine that stores the data.
 
+Login.Discard=Discard
+Login.DiscardTT=Discard the record.
+
 Login.AddTitle = Add record
 Login.Add = Add
-Login.AddTT = Add the new record.
+Login.AddTT = Add this record.
 Login.EditTitle = Edit record
 Login.Change = Change
-Login.ChangeTT = Change the current record.
+Login.ChangeTT = Change this record.
 
 Login.Authentication = Authentication
 Login.UserName = User name
@@ -1134,6 +1154,62 @@
 Message.FillingDialogs=Storing data into dialogs
 Overview.MenuOccurrences=Occurrences
 
-AddEdit.PreloadAuthors=remember entered authors
 
-AddEdit.InfoPanel=Info
+
+#=============================================================
+# SERVER
+#	net.sf.plantlore.server.manager
+#=============================================================
+Server.Login=Login
+Server.Host=Host
+Server.Next = Connect
+Server.NextTT = Connect to an existing server.
+Server.Create = Create
+Server.CreateTT = Create and start a new Plantlore server.
+
+Server.ConnectionsTotal = Connections Total
+Server.ConnectionsPerIP = Connections per IP
+Server.Timeout = Timeout
+Server.Manage=Connections
+
+Server.ServerSettings=Server settings
+Server.Password=Password
+Server.PasswordTT=The password that will protect the server from being manipulated by unauthorized persons.
+Server.Port = Port
+Server.PortTT=The port where the Plantlore server should listen.
+
+
+Server.DatabaseSettings=Database settings
+Server.DatabaseUser=User
+Server.DatabaseUserTT=The power user of the database. \nThe Plantlore server will use this login \nto gain access to the database engine.
+Server.DatabasePassword=Password
+Server.DatabasePasswordTT=The password of the power-user account. \nThe Plantlore server will use this password \nto gain access to the database engine.
+Server.DatabaseParameter=Parameter
+Server.DatabaseParameterTT=Some additional parameters the Plantlore server should use \nwhen connecting to the database, such as encoding.
+Server.DatabaseType = Database
+Server.DatabaseTypeTT=The database engine that contains the data.
+Server.DatabasePort = Port
+Server.DatabasePortTT=The port where the database engine listens.
+
+
+Server.Hide=Hide
+Server.HideTT=Abandon the Plantlore server (will not terminate the server).
+Server.Refresh=Refresh
+Server.RefreshTT=Reload the list of currently conntected users.
+Server.KickUser=Kick user
+Server.KickUserTT=Disconnect the selected user from the server.
+Server.Terminate=Terminate
+Server.TerminateTT=Terminate the Plantlore server and disconnect all its clients.
+Server.ListOfUsersTT=The list of currently connected users.
+
+
+Server.SettingsLoaded = Settings loaded.
+Server.SettingsSaved = Settings saved.
+Server.Info.CreatingNewServer = Creating a new server...
+Server.Info.StartingNewServer = Starting the server...
+Server.Info.ServerUpAndRunning = Server is up and running.
+Server.Info.ConnectingToServer = Connecting to the server...
+Server.Info.ClientsObtained = The list of clients refreshed.
+Server.Info.ClientKicked = The client {0} was kicked.
+Server.Info.Terminated = Server terminated (clients disconnected).
+

Modified: trunk/src/net/sf/plantlore/middleware/DBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -22,7 +22,7 @@
  * @author Tom?? Kova??k, Erik Kratochv?l
  */
 public interface DBLayer extends Remote, Serializable {
-    
+	
     /**
      *  Initialize database connection. Authenticate user and Load rights of this user
      *

Modified: trunk/src/net/sf/plantlore/middleware/DBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayerFactory.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/middleware/DBLayerFactory.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -3,6 +3,7 @@
 import java.rmi.NotBoundException;
 import java.rmi.RemoteException;
 
+import net.sf.plantlore.client.login.DBInfo;
 import net.sf.plantlore.common.exception.DBLayerException;
 
 /** 
@@ -14,12 +15,7 @@
  */
 public interface DBLayerFactory {
 	
-	/** Create a new instance of the DBLayer that will manage the connection to the local database. 
-	 * 
-	 * @return	A new instance of the DBLayer mediating the connection between the client and the local database.
-	 */
-	DBLayer create();
-	
+
 	/** 
 	 * Create a new instance of the DBLayer that will manage the connection to the remote database.
 	 *  
@@ -29,7 +25,7 @@
 	 * @throws RemoteException		If the RMI encounters a problem.
 	 * @throws NotBoundException	If the server is not running on the specified port.
 	 */
-	DBLayer create(String host, int port) throws RemoteException, NotBoundException, DBLayerException;
+	DBLayer create(DBInfo settings) throws RemoteException, NotBoundException, DBLayerException;
 	
 	/** 
 	 * Destroy the DBLayer. This is a special measure, 

Modified: trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -9,6 +9,8 @@
 import org.apache.log4j.Logger;
 
 import net.sf.plantlore.server.ConnectionInfo;
+import net.sf.plantlore.server.DatabaseSettings;
+import net.sf.plantlore.client.login.DBInfo;
 import net.sf.plantlore.common.exception.DBLayerException;
 import net.sf.plantlore.server.HibernateDBLayer;
 import net.sf.plantlore.middleware.RemoteDBLayerFactory;
@@ -39,38 +41,18 @@
   */
 public class RMIDBLayerFactory implements DBLayerFactory {
 	
-	private Logger logger; 
-
+	private Logger logger = Logger.getLogger(this.getClass().getPackage().getName()); 
+	
+	
 	/** Keep information about connections to databases. */
 	private Hashtable<DBLayer, ConnectionInfo> client = new Hashtable<DBLayer, ConnectionInfo>(4);
 	
+	
 	/** Create a new instance of DBLayerFactory. */
 	public RMIDBLayerFactory() {
-		logger = Logger.getLogger(this.getClass().getPackage().getName()); 
 	}
 	
-
-	/** 
-	 * Create a new local DBLayer.
-	 * <br/>
-	 * This method creates purely local DBLayer. The DBLayer object lives in the local JVM. 
-	 * No RMI gets involved here. 
-	 * It is meant for connections to local database - the overhead is minimalized.
-	 * 
-	 *  @return The local DBLayer object that mediates the connection with the local database.
-	 */
-	public synchronized DBLayer create() {
-		//Create a new DBLayer and save information about that connection 
-		DBLayer db = new HibernateDBLayer();
-		ConnectionInfo info = new ConnectionInfo(null, db, null, "localhost (direct connection)");
-		client.put(db, info);
-		
-		logger.info("New DBLayer created: " + info);
-		
-		return db;
-	}
 	
-
 	/**
 	 * Create a new DBLayer.
 	 * <br/>
@@ -85,11 +67,32 @@
 	 * @return A stub of the remote object that lives on the server and mediates the connection
 	 * with the remote database.
 	 */
-	public synchronized DBLayer create(String host, int port) throws RemoteException, NotBoundException, DBLayerException {
+	public synchronized DBLayer create(DBInfo settings) 
+	throws RemoteException, NotBoundException, DBLayerException {
 		// Some exceptional cases are handled specially.
-		if(host == null || host.equals("") || host.equalsIgnoreCase("localhost"))
-			return create();
+		String host = settings.getHost();
 		
+		if(host == null || host.equals("") || host.equalsIgnoreCase("localhost")) {
+			
+			DatabaseSettings dbSettings = new DatabaseSettings(
+					settings.getDatabaseType(),
+					settings.getDatabasePort(),
+					settings.getDatabaseParameter(),
+					settings.getMasterUser(),
+					settings.getMasterPassword()
+			);
+			
+			DBLayer db = new HibernateDBLayer( dbSettings );
+			ConnectionInfo info = new ConnectionInfo(null, db, null, "localhost (direct connection)");
+			client.put(db, info);
+			
+			logger.info("New DBLayer created: " + info);
+			
+			return db;
+		}
+		
+		int port = settings.getPort();
+		
 		logger.debug("Creating a new DBLayer using the RMI:");
 		
 		// Connect to the remote server and obtain the RemoteDBLayerFactory

Added: trunk/src/net/sf/plantlore/server/DatabaseSettings.java
===================================================================
--- trunk/src/net/sf/plantlore/server/DatabaseSettings.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/DatabaseSettings.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -0,0 +1,45 @@
+package net.sf.plantlore.server;
+
+public class DatabaseSettings {
+	
+	private String connectionStringPrefix;
+	private String connectionStringSuffix;
+	private String masterUser;
+	private String masterPassword;
+	private int port;
+	private String database;
+	
+	
+	public DatabaseSettings(String database, int port, String suffix, String masterUser, String masterPassword) {
+		this.masterUser = masterUser;
+		this.masterPassword = masterPassword;
+		this.connectionStringSuffix = suffix;
+		this.database = database;
+		this.port = port;
+		this.connectionStringPrefix = 
+			"jdbc:"+database+"://localhost" + 
+			((port > 0) ? ":"+(new Integer(port).toString())+"/" : "/");
+	}
+	
+	
+	public String getMasterUser() {
+		return masterUser;
+	}
+	public String getMasterPassword() {
+		return masterPassword;
+	}
+	public String getConnectionStringSuffix() {
+		return connectionStringSuffix;
+	}
+	public String getConnectionStringPrefix() {
+		return connectionStringPrefix;
+	}
+	public String getDatabase() {
+		return database;
+	}
+	public int getPort() {
+		return port;
+	}
+	
+
+}

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -85,38 +85,28 @@
     private static final int UPDATE = 2;
     private static final int DELETE = 3;
     
-    private String databaseConnectionPrefix;
-    private String databaseMasterUser;
-    private String databaseMasterPassword;
+    private DatabaseSettings settings;
+    private String currentlyConnectedUser = "";
     
+
+    
+    public HibernateDBLayer(DatabaseSettings settings) {
+    	this(null, settings);
+    }
+   
+    
     /**
      * Creates a new instance of HibernateDBLayer.
      * 
      *  @param undertaker The object that is responsible for cleanup if the client crashes. 
      */
-    public HibernateDBLayer(Undertaker undertaker) {
-    	this(undertaker, "", null, null);
-    }
-    
-    public HibernateDBLayer(String databaseConnectionPrefix) {
-    	this(null, databaseConnectionPrefix, null, null);
-    }
-    
-    public HibernateDBLayer() {
-    	this(null, "", null, null);
-    }
-    
-    
-    /** Creates a new instance of HibernateDBLayer */
     public HibernateDBLayer(
     		Undertaker undertaker, 
-    		String databaseConnectionPrefix,
-    		String user,
-    		String password) {
+    		DatabaseSettings settings) {
         logger = Logger.getLogger(this.getClass().getPackage().getName());
         logger.debug("      Constructing a new HibernateDBLayer ...");
         
-        this.databaseConnectionPrefix = databaseConnectionPrefix;
+        this.settings = settings;
         
         // Initialize pool of result sets, initial capacity = INITIAL POOL SIZE
         results = new Hashtable<Integer, ScrollableResults>(INITIAL_POOL_SIZE); 
@@ -128,9 +118,7 @@
         sessions = new Hashtable<SelectQuery, Session>(INITIAL_POOL_SIZE);
         
         this.undertaker = undertaker;
-        databaseMasterUser = user;
-        databaseMasterPassword = password;
-        
+       
         logger.debug("      completed.");
     }
     
@@ -149,6 +137,8 @@
         Configuration cfg;
         int result = 0;
         
+        currentlyConnectedUser = user;
+        
         // File containing Hibernate configuration
         configFile = new File("hibernate.cfg.xml");        
         // Load Hibernate configuration
@@ -160,14 +150,15 @@
             ex.setError(ex.ERROR_LOAD_CONFIG, null);
             throw ex;
         }
-        // TODO: this should be loaded from a configuration file on the server
-        // TEMPORARY CODE STARTS HERE
-        databaseMasterUser = user;
-        databaseMasterPassword = password;
-        // TEMPORARY CODE ENDS HERE
-        cfg.setProperty("hibernate.connection.url", databaseConnectionPrefix + dbID);
-        cfg.setProperty("hibernate.connection.username", databaseMasterUser);
-        cfg.setProperty("hibernate.connection.password", databaseMasterPassword);
+
+        if( settings.getConnectionStringSuffix() == null || "".equals(settings.getConnectionStringSuffix()) )
+        	cfg.setProperty("hibernate.connection.url", settings.getConnectionStringPrefix() + dbID);
+        else
+        	cfg.setProperty("hibernate.connection.url", settings.getConnectionStringPrefix() + dbID 
+        			+ "?" + settings.getConnectionStringSuffix());
+        
+        cfg.setProperty("hibernate.connection.username", settings.getMasterUser());
+        cfg.setProperty("hibernate.connection.password", settings.getMasterPassword());
         try {
             // Build session factory
             sessionFactory = cfg.buildSessionFactory();
@@ -1851,8 +1842,14 @@
 	 * @see java.rmi.dgc.leaseValue
 	 */
 	public void unreferenced() { 
-		if(undertaker != null) undertaker.bury(this); 
+		if(undertaker != null) 
+			undertaker.bury(this); 
 	}
 	//===============================================================
-	              
+	  
+	
+	@Override
+	public String toString() {
+		return currentlyConnectedUser ; 
+	}
 }

Modified: trunk/src/net/sf/plantlore/server/Plantlore.java
===================================================================
--- trunk/src/net/sf/plantlore/server/Plantlore.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/Plantlore.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -3,10 +3,6 @@
 
 import java.io.IOException;
 import java.io.InputStream;
-/*
-import java.rmi.registry.LocateRegistry;
-import java.rmi.registry.Registry;
-*/
 import java.util.Properties;
 
 import javax.swing.JFrame;
@@ -32,31 +28,36 @@
 	private static final String LOGGER_PROPS = "net/sf/plantlore/config/log4j.properties";
 	
 	
-	public void run() {
+	public void run(final boolean connectToExisting) {
 		// Load log4j settings
-        ClassLoader cl = this.getClass().getClassLoader();
-        InputStream is = cl.getResourceAsStream(LOGGER_PROPS);
-        Properties props = new Properties();
-        //FIXME:
-        try {
-            props.load(is);
-        } catch (IOException ex) {
-            ex.printStackTrace();
-        }
-        //maybe CHANGE to configureAndWatch()
-        PropertyConfigurator.configure(props);
-        
-        try {
-            L10n.load();
-        } catch (IOException ex) {
-            ex.printStackTrace();
-        }
-			
-		ServerMng model = new ServerMng();
-        ServerLoginView view = new ServerLoginView(model);
-        /*ServerMngChooseCtrl ctrl = */new ServerLoginCtrl(model, view);
+		try {
+			ClassLoader cl = this.getClass().getClassLoader();
+			InputStream is = cl.getResourceAsStream(LOGGER_PROPS);
+			Properties props = new Properties();
+			props.load(is);
+			PropertyConfigurator.configure(props);
+			L10n.load();
+		} catch (IOException ex) {
+			ex.printStackTrace();
+		}
+
+        java.awt.EventQueue.invokeLater(new Runnable(){
+        	public void run() {
+        		ServerMng model = new ServerMng();
+        		if(connectToExisting) {
+        			ServerLoginView view = new ServerLoginView(model);
+        			/*ServerMngChooseCtrl ctrl = */new ServerLoginCtrl(model, view);
+        			view.setVisible(true);
+        		}
+        		else {
+        			ServerCreateView view = new ServerCreateView(model);
+        			/*ServerMngChooseCtrl ctrl = */new ServerCreateCtrl(model, view);
+        			view.setVisible(true);
+        		}
+        	}
+        });
        	
-        view.setVisible(true);
+        
 	}
 	
 
@@ -72,58 +73,10 @@
             UIManager.setLookAndFeel(new PlasticXPLookAndFeel()); 
         } catch (Exception e) { e.printStackTrace(); JFrame.setDefaultLookAndFeelDecorated(true); }
 		
-		new Plantlore().run();
-		
-		/* ============================================================
-		 *  THIS HERE MAY COME IN HANDY...
-		 * ============================================================
-		int m = args.length, port = RMIServer.DEFAULT_PORT, id = -1;
-		String command = "start", host = null;
-		
-		// Parse the command line.
-		if(m >= 1) command = args[0];
-		if(m >= 2) try { int c = Integer.parseInt(args[1]); port = c; }
-			catch(NumberFormatException e) { host = args[1]; }
-		if(m >= 3) port = Integer.parseInt(args[2]);
-			
-		if(command.startsWith("kick")) {
-			id = Integer.parseInt(command.substring(5));
-			command = "kick";
-		}
-		 
-		// The server interface.		
-		Server server = null ;
-		
-		// Take the appropriate action.
-		try {
-			if (command.equalsIgnoreCase("start")) {
-				try { 
-					server = new RMIServer(port);
-					server.start();
-				} 
-				catch (Exception e) { System.err.println(e); server.stop(true); }
-			} 
-			else {
-				Registry registry = LocateRegistry.getRegistry(host, port);
-				Guard guard = (Guard) registry.lookup(Guard.ID);
-				server = guard.certify(getPassword());
-				if(server == null) { System.err.println("<!> No server on that port."); return; }
-				if(command.equalsIgnoreCase("stop")) server.stop(true);
-				else {
-					Collection<ConnectionInfo> clients = server.getClients();
-					int c = 0;
-					if(command.equalsIgnoreCase("who")) {
-						for(ConnectionInfo info : clients) System.out.println("(" + c++ + ") " + info);
-					}
-					else if(command.equalsIgnoreCase("kick")) {
-						for(ConnectionInfo info : clients) if(c++ == id) { server.disconnect(info); break; }
-					}
-					else System.err.println("<?> Unknown command.");
-				}
-					
-			}
-		} catch(Exception e) { System.err.println(e); }
-		============================================================ */
+        if(args.length > 0 && args[0].equalsIgnoreCase("connect"))
+        	new Plantlore().run(true);
+        else
+        	new Plantlore().run(false);
 	}
 
 }

Modified: trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -35,44 +35,40 @@
  * @version 1.0  final
  */
 public class RMIRemoteDBLayerFactory extends UnicastRemoteObject
-	implements RemoteDBLayerFactory, Undertaker {
+	implements RemoteDBLayerFactory {
 	
-	private Logger logger;
+	private Logger logger  = Logger.getLogger(this.getClass().getPackage().getName());;
 	
+	private ServerSettings  settings;
+	private Undertaker undertaker;
 	
-	/** 
-	 * Maximum number of connections from one IP = maximum number of DBLayer objects 
-	 * that can be created for users from this IP address.
-	 */
-	private int maxConnectionsPerIP = 81; // TODO: Nacitat z nejakyho settings...
+	/** Keep information about all connected clients. */
+	private Hashtable<DBLayer, ConnectionInfo> clients; 
+		
 	
-	/** 
-	 * Maximum number of clients = the total maximum number of DBLayer objects 
-	 * that can be created by this factory. 
-	 */
-	private int maxConnectionsTotal = 81; // TODO: Nacitat z nejakyho settings...
 	
-	/** Keep information about all connected clients. */
-	private Hashtable<DBLayer, ConnectionInfo> client = 
-		new Hashtable<DBLayer, ConnectionInfo>(2*maxConnectionsTotal);
-	
 	/** 
 	 * Create a new RMIDBLayerFactory.
 	 * @throws RemoteException If the RMI encounters an error.
 	 */
-	public RMIRemoteDBLayerFactory() throws RemoteException {
-		logger = Logger.getLogger(this.getClass().getPackage().getName());
+	public RMIRemoteDBLayerFactory(ServerSettings settings) throws RemoteException {
+		this.settings = settings;
+		clients = new Hashtable<DBLayer, ConnectionInfo>( settings.getConnectionsTotal() );
+		undertaker = new RMIUndertaker();
 	}
 	
+	
 	/** 
 	 * Return information about connected clients.
 	 * 
 	 *  @return Collection holding information about currently connected clients.
 	 */
 	protected synchronized ConnectionInfo[] getClients() {
-		Collection<ConnectionInfo> clients = client.values();
-		if(clients != null) return clients.toArray(new ConnectionInfo[0]);
-		else return null;
+		Collection<ConnectionInfo> currentlyConnectedClients = clients.values();
+		if(currentlyConnectedClients != null) 
+			return currentlyConnectedClients.toArray(new ConnectionInfo[0]);
+		else 
+			return null;
 	}
 	
 	/**
@@ -83,12 +79,14 @@
 	 * @return	True if the connection should be allowed.
 	 */
 	private boolean allowConnection(String host) {
-		if(client.size() >= maxConnectionsTotal) return false;
+		if(clients.size() >= settings.getConnectionsTotal()) 
+			return false;
 		
 		int c = 0;
-		for(ConnectionInfo info : client.values())
-			if(info.getClientHost().equalsIgnoreCase(host)) c++; // HA! C++ in Java! Strange!
-		return (c < maxConnectionsPerIP);
+		for(ConnectionInfo info : clients.values())
+			if(info.getClientHost().equalsIgnoreCase(host)) 
+				c++; // HA! C++ in Java! Strange!
+		return (c < settings.getConnectionsPerIP());
 	}
 	
 	/**
@@ -115,13 +113,13 @@
 		
 		// Create a new DBLayer, export it, and keep the stub. Also set the Undertaker of this object.
 		logger.debug("  Creating a new HibernateDBLayer ...");
-		DBLayer database = new HibernateDBLayer(this);
+		DBLayer database = new HibernateDBLayer( undertaker, settings.getDatabaseSettings() );
 		logger.debug("   completed!");
 		DBLayer stub = (DBLayer) UnicastRemoteObject.exportObject(database);
 		
 		// Save the information about this connection.
 		ConnectionInfo info = new ConnectionInfo(null, database, stub, clientHost); // remoteFactory is null because of security reasons.
-		client.put(stub, info);
+		clients.put(stub, info);
 		
 		logger.info("New remote DBLayer created " + info);
 
@@ -157,7 +155,7 @@
 	 */	
 	public synchronized void destroy(DBLayer stub) throws RemoteException {
 		if(stub == null) return;
-		ConnectionInfo info = client.remove(stub);
+		ConnectionInfo info = clients.remove(stub);
 		if(info != null) disconnect(info.getDatabase());
 		else try {
 			logger.warn(RemoteServer.getClientHost() + " attempts to destroy " +
@@ -169,10 +167,10 @@
 	 * Terminate the connection of all connected clients. 
 	 */
 	synchronized void disconnectAll() {
-		for (ConnectionInfo info : client.values()) 
+		for (ConnectionInfo info : clients.values()) 
 			try { disconnect(info.getDatabase()); } catch (Exception e) {}		
 		// Clear the list of opened connections - none is now opened.
-		client.clear();
+		clients.clear();
 	}
 	
 	/** 
@@ -181,17 +179,23 @@
 	 * 
 	 * @see destroy 
 	 */
-	public synchronized void bury(DBLayer database) {
-		DBLayer stub = null;
-		
-		// Find the ConnectionInfo object among the connected clients 
-		for(ConnectionInfo info : client.values())
-			if(info.getDatabase().equals(database)) { stub = info.getStub(); break; }
-		
-		// Destroy it properly
-		try { destroy(stub); } catch(RemoteException e) {}
+	private class RMIUndertaker implements Undertaker { 
+		public synchronized final void bury(DBLayer database) {
+			DBLayer stub = null;
+			
+			// Find the ConnectionInfo object among the connected clients 
+			for(ConnectionInfo info : clients.values())
+				if(info.getDatabase().equals(database)) { 
+					stub = info.getStub(); 
+					break; 
+				}
+			
+			// Destroy it properly
+			try { 
+				destroy(stub); 
+			} catch(RemoteException e) {}
+		}
 	}
-	
 
 
 }

Modified: trunk/src/net/sf/plantlore/server/RMIServer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIServer.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/RMIServer.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -34,25 +34,22 @@
 	
 	
 	private RMIRemoteDBLayerFactory remoteFactory = null;
-	private int port = DEFAULT_PORT;
 	private Guard guard = null;
+	private ServerSettings settings;
 	
 	private Logger logger;
 
-	/** Create a new instance of RMIServer running on the default port. */
-	public RMIServer(String password) throws RemoteException, AlreadyBoundException {
-		this(DEFAULT_PORT, password);
-	}
+
 	
 	/** Create a new instance of RMIServer running on the specified port. */
-	public RMIServer(int port, String password) throws RemoteException, AlreadyBoundException {
-		this.port = port;
-		
+	public RMIServer(ServerSettings settings, String password) 
+	throws RemoteException, AlreadyBoundException {
 		logger = Logger.getLogger(this.getClass().getPackage().getName());
+		this.settings = settings;
 		
 		// Control object that will return the server after the client passed a valid certif. information
 		guard = new RMIServerControl(this, password);
-		RMI.bind(port, guard, Guard.ID);
+		RMI.bind(settings.getPort(), guard, Guard.ID);
 	}
 	
 	/** Get the information about the connected clients. */
@@ -67,8 +64,11 @@
 	 * @param client The client to be kicked.
 	 */
 	public synchronized void disconnect(ConnectionInfo client) {
-		try { remoteFactory.destroy(client.getStub()); } 
-		catch(RemoteException e) { logger.warn(e); }
+		try { 
+			remoteFactory.destroy(client.getStub()); 
+		} catch(RemoteException e) { 
+			logger.warn(e.getMessage()); 
+		}
 	}
 	
 	/** 
@@ -79,15 +79,23 @@
 	 */
 	public synchronized void start() throws AlreadyBoundException {
 		try {
+			
+			int timeout = Math.min(Math.max(1, settings.getTimeout()), 30) * 60000;
+			System.setProperty( "java.rmi.dgc.leaseValue", new Integer(timeout).toString() );
+
 			// Locate (or start) the rmiregistry on the specified port
 			Registry registry;
-			try {	registry = LocateRegistry.createRegistry(port); }
-			catch(Exception e) { registry = LocateRegistry.getRegistry(port); }
+			try {	registry = LocateRegistry.createRegistry(settings.getPort()); }
+			catch(Exception e) { registry = LocateRegistry.getRegistry(settings.getPort()); }
 			// Create a new factory or reuse an existing one.
-			if(remoteFactory == null) remoteFactory = new RMIRemoteDBLayerFactory();
+			if(remoteFactory == null) remoteFactory = new RMIRemoteDBLayerFactory( settings );
 			// Bind the factory to the rmiregistry. 
 			registry.bind(RemoteDBLayerFactory.ID, remoteFactory);
+
 			
+			// Nemel by server exportnout i sebe??
+
+			
 			logger.info("The RemoteDBLayerFactory has been bound to the rmiregistry.");
 		}
 		catch(RemoteException e) { logger.error(e); }
@@ -98,15 +106,13 @@
 	 * The rmiregistry on the specified port is <b>not</b> stopped, because some other programs may be still
 	 * using it!<br/>
 	 * This will terminate the server completely.
-	 * 
-	 * @param harsh		Be harsh and disconnect every client connected to the server.
 	 */
-	public synchronized void stop(boolean harsh) {
+	public synchronized void stop() {
 		if(remoteFactory == null) return;
 		try {
 			// 1. Unbind the RemoteDBLayerFactory from the rmiregistry 
 			// -> noone can obtain the stub of the remote factory anymore
-			RMI.unbind(port, RemoteDBLayerFactory.ID);
+			RMI.unbind(settings.getPort(), RemoteDBLayerFactory.ID);
 			logger.debug("The RemoteDBLayerFactory was unbound from the rmiregistry.");
 			
 			// 2. Unexport the remote factory -> noone can make a remote call anymore
@@ -114,26 +120,26 @@
 			logger.debug("The RemoteDBLayerFactory was unexported. It cannot accept remote calls now.");
 			
 			// 3. Disconnect all users from the server.
-			if(harsh) {
-				remoteFactory.disconnectAll();
-				logger.info("All clients were disconnected.");
-			}
+			remoteFactory.disconnectAll();
+			logger.info("All clients were disconnected.");
 
 			// 4. Disconnect this object from the RMI ->
 			UnicastRemoteObject.unexportObject(this, true);
 			logger.info("The RMIServer now stops accepting remote calls.");
 			
 			// 5. Disconnect the control guard and unexport it
-			RMI.unbind(port, Guard.ID);
+			RMI.unbind(settings.getPort(), Guard.ID);
 			RMI.unexport(guard);
 			logger.debug("The ServerProxy is now unavailable.");
 			
 			logger.info("The Server terminates. Bye.");
 		}
-		catch(Exception e) { logger.error(e); }
+		catch(Exception e) { 
+			logger.error(e.getMessage()); 
+		}
 	}
+
 	
-	
 	/** 
 	 * Initialize the codebase java.rmi.server.property to the specified directory or the
 	 * current working directory if the specified directory is null.

Modified: trunk/src/net/sf/plantlore/server/RMIServerControl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIServerControl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/RMIServerControl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -14,9 +14,9 @@
 	}
 	
 	public Server certify(String authorizationInfo) throws RemoteException, CertificationException {
-		if(authorizationInfo.equals(password)) return server;
+		if(authorizationInfo.equals(password)) 
+			return server;
 		throw new CertificationException("Wrong password.");
-		//return null;
 	}
 	
 }

Modified: trunk/src/net/sf/plantlore/server/Server.java
===================================================================
--- trunk/src/net/sf/plantlore/server/Server.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/Server.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -39,12 +39,10 @@
 	void start() throws RemoteException, AlreadyBoundException;
 	
 	/**
-	 * Terminate the server. If <code>harsh</code> is true, the server terminates immediately,
-	 * if not, it waits, until the last client disconnects. 
+	 * Terminate the server. 
 	 * 
-	 * @param harsh Should all currently connected clients be disconnected?
 	 * @throws RemoteException if the RMI encounters an error (network/server).
 	 */
-	void stop(boolean harsh) throws RemoteException;
+	void stop() throws RemoteException;
 	
 }

Added: trunk/src/net/sf/plantlore/server/ServerSettings.java
===================================================================
--- trunk/src/net/sf/plantlore/server/ServerSettings.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/ServerSettings.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -0,0 +1,37 @@
+package net.sf.plantlore.server;
+
+public class ServerSettings {
+
+	private int port;
+	private int timeout;
+	private int connectionsTotal;
+	private int connectionsPerIP;
+	private DatabaseSettings databaseSettings;
+	
+	
+	public ServerSettings(int port, int timeout, int connectionsTotal, int connectionsPerIP, DatabaseSettings databaseSettings) {
+		this.port = port;
+		this.timeout = timeout;
+		this.connectionsTotal = connectionsTotal;
+		this.connectionsPerIP = connectionsPerIP;
+		this.databaseSettings = databaseSettings;
+	}
+
+	public int getConnectionsPerIP() {
+		return connectionsPerIP;
+	}
+	public int getConnectionsTotal() {
+		return connectionsTotal;
+	}
+	public DatabaseSettings getDatabaseSettings() {
+		return databaseSettings;
+	}
+	public int getPort() {
+		return port;
+	}
+	public int getTimeout() {
+		return timeout;
+	}
+	
+	
+}

Added: trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -0,0 +1,98 @@
+package net.sf.plantlore.server.manager;
+
+import java.awt.event.ActionEvent;
+
+import javax.swing.AbstractAction;
+import javax.swing.ImageIcon;
+import javax.swing.JOptionPane;
+
+import net.sf.plantlore.client.resources.Resource;
+import net.sf.plantlore.l10n.L10n;
+import net.sf.plantlore.server.DatabaseSettings;
+import net.sf.plantlore.server.RMIServer;
+import net.sf.plantlore.server.ServerSettings;
+
+public class ServerCreateCtrl {
+	
+	private ServerMng model;
+	private ServerCreateView view;
+	private ServerMngView mngView;
+	
+	public ServerCreateCtrl(ServerMng model, ServerCreateView view) {
+		this.model = model;
+		this.view = view;
+		
+		view.next.setAction( new CreateServerAction() );
+	}
+	
+	private class CreateServerAction extends AbstractAction {
+		public CreateServerAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.CreateTT"));
+			putValue(NAME, L10n.getString("Server.Create"));
+            ImageIcon icon = Resource.createIcon("Server.Create.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
+		public void actionPerformed(ActionEvent arg0) {
+			// Take the stored information.
+			ServerSettings settings = model.getSettings();
+			
+			// Gather the information from the dialog. 
+			try {
+				// About the server.
+				String serverPassword = new String( view.serverPassword.getPassword() );
+				int serverPort;
+				try {
+					serverPort = Integer.parseInt(view.serverPort.getText());
+				} catch(Exception e) { serverPort = RMIServer.DEFAULT_PORT; }
+				
+				// About the database.
+				String database = ((javax.swing.JTextField)view.databaseType.getEditor().getEditorComponent()).getText(),
+				databasePassword = new String( view.databasePassword.getPassword() ),
+				databaseUser = view.databaseUser.getText(),
+				suffix = view.databaseParameter.getText();
+				
+				int databasePort; 
+				databasePort = Integer.parseInt(view.databasePort.getText());
+				
+				settings = new ServerSettings(
+						serverPort, 
+						settings.getTimeout(), // use the stored values
+						settings.getConnectionsTotal(),  // use the stored values
+						settings.getConnectionsPerIP(), // use the stored values
+						new DatabaseSettings(
+								database, 
+								databasePort, 
+								suffix, 
+								databaseUser, 
+								databasePassword)
+						);
+				
+				// Save those settings.
+				model.setSettings( settings );
+				
+				// Create and run a new server.
+				if( model.startNewServer(serverPassword) ){
+					// Hide this window, create and display the ServerMngView instead.
+					view.setVisible(false);
+//					view.dispose();
+					
+					mngView = new ServerMngView(model);
+					mngView.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
+					/*mngCtrl = */ new ServerMngCtrl(model, mngView);
+					mngView.setVisible(true);
+				}
+
+			} catch(final Exception e) {
+				java.awt.EventQueue.invokeLater(new Runnable() {
+					public void run() {
+						JOptionPane.showMessageDialog(null,
+								e.getMessage(),
+							    L10n.getString("Error.MissingInformation"),
+							    JOptionPane.ERROR_MESSAGE);						
+					}
+				});
+			}
+		}
+	}
+
+}

Added: trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form	2006-06-03 16:48:24 UTC (rev 428)
@@ -0,0 +1,372 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.3" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
+  <Properties>
+    <Property name="defaultCloseOperation" type="int" value="2"/>
+    <Property name="title" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+      <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Create" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+    </Property>
+    <Property name="resizable" type="boolean" value="false"/>
+  </Properties>
+  <SyntheticProperties>
+    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
+  </SyntheticProperties>
+  <AuxValues>
+    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
+    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
+  </AuxValues>
+
+  <Layout>
+    <DimensionLayout dim="0">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Group type="102" alignment="1" attributes="0">
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="help" min="-2" max="-2" attributes="0"/>
+              <EmptySpace pref="307" max="32767" attributes="0"/>
+              <Component id="next" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+          </Group>
+          <Component id="status" alignment="0" pref="453" max="32767" attributes="0"/>
+          <Group type="102" alignment="0" attributes="0">
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="1" attributes="0">
+                  <Component id="jPanel2" alignment="0" min="0" max="32767" attributes="0"/>
+                  <Group type="103" alignment="0" groupAlignment="1" max="-2" attributes="0">
+                      <Component id="jPanel1" alignment="0" pref="433" max="32767" attributes="1"/>
+                      <Component id="plantloreLogo" alignment="0" pref="433" max="32767" attributes="1"/>
+                  </Group>
+              </Group>
+              <EmptySpace max="32767" attributes="0"/>
+          </Group>
+      </Group>
+    </DimensionLayout>
+    <DimensionLayout dim="1">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Group type="102" alignment="0" attributes="0">
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="plantloreLogo" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="32767" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="next" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="help" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace min="-2" pref="11" max="-2" attributes="0"/>
+              <Component id="status" min="-2" pref="18" max="-2" attributes="0"/>
+          </Group>
+      </Group>
+    </DimensionLayout>
+  </Layout>
+  <SubComponents>
+    <Container class="javax.swing.JPanel" name="plantloreLogo">
+      <Properties>
+        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
+          <Color blue="0" green="0" red="0" type="rgb"/>
+        </Property>
+        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+          <Dimension value="[300, 100]"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <EmptySpace min="0" pref="433" max="32767" attributes="0"/>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <EmptySpace min="0" pref="100" max="32767" attributes="0"/>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+    </Container>
+    <Component class="javax.swing.JButton" name="next">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Create" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Container class="javax.swing.JPanel" name="jPanel1">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+            <TitledBorder title="Server settings">
+              <Border PropertyName="innerBorder" info="null"/>
+              <ResourceString PropertyName="titleX" bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.ServerSettings" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </TitledBorder>
+          </Border>
+        </Property>
+      </Properties>
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" max="-2" attributes="0">
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Component id="jLabel2" min="-2" max="-2" attributes="0"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Component id="serverPassword" pref="270" max="32767" attributes="2"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Component id="serverPort" min="-2" pref="50" max="-2" attributes="0"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" attributes="0">
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="jLabel2" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="serverPort" alignment="3" min="-2" pref="21" max="-2" attributes="0"/>
+                      <Component id="jLabel1" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="serverPassword" alignment="3" min="-2" pref="21" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="32767" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+      <SubComponents>
+        <Component class="javax.swing.JLabel" name="jLabel2">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Password" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JPasswordField" name="serverPassword">
+          <Properties>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.PasswordTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+        <Component class="javax.swing.JLabel" name="jLabel1">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Port" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="serverPort">
+          <Properties>
+            <Property name="horizontalAlignment" type="int" value="2"/>
+            <Property name="text" type="java.lang.String" value="1099"/>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.PortTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JLabel" name="status">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.BevelBorderInfo">
+            <BevelBorder bevelType="1"/>
+          </Border>
+        </Property>
+      </Properties>
+    </Component>
+    <Container class="javax.swing.JPanel" name="jPanel2">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+            <TitledBorder title="Database settings">
+              <Border PropertyName="innerBorder" info="null"/>
+              <ResourceString PropertyName="titleX" bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseSettings" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </TitledBorder>
+          </Border>
+        </Property>
+      </Properties>
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" attributes="0">
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Component id="jLabel5" alignment="0" min="-2" max="-2" attributes="0"/>
+                      <Component id="jLabel3" alignment="0" min="-2" max="-2" attributes="0"/>
+                      <Component id="jLabel7" alignment="0" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Group type="102" attributes="0">
+                          <Component id="databaseType" pref="264" max="32767" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="jLabel6" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="databasePort" min="-2" pref="51" max="-2" attributes="0"/>
+                      </Group>
+                      <Component id="databaseParameter" pref="343" max="32767" attributes="0"/>
+                      <Group type="102" alignment="0" attributes="0">
+                          <Component id="databaseUser" pref="149" max="32767" attributes="0"/>
+                          <EmptySpace min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel4" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace min="-2" max="-2" attributes="0"/>
+                          <Component id="databasePassword" pref="140" max="32767" attributes="0"/>
+                      </Group>
+                  </Group>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="0" attributes="0">
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="jLabel5" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="databasePort" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
+                      <Component id="jLabel6" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="databaseType" alignment="3" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="jLabel3" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="databaseUser" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="jLabel4" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="databasePassword" alignment="3" min="-2" pref="19" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="jLabel7" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="databaseParameter" alignment="3" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="32767" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+      <SubComponents>
+        <Component class="javax.swing.JLabel" name="jLabel5">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseType" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JComboBox" name="databaseType">
+          <Properties>
+            <Property name="editable" type="boolean" value="true"/>
+            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+              <StringArray count="4">
+                <StringItem index="0" value="postgresql"/>
+                <StringItem index="1" value="firebirdsql"/>
+                <StringItem index="2" value="mysql"/>
+                <StringItem index="3" value="oraclesql"/>
+              </StringArray>
+            </Property>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseTypeTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+        <Component class="javax.swing.JLabel" name="jLabel6">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabasePort" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="databasePort">
+          <Properties>
+            <Property name="horizontalAlignment" type="int" value="2"/>
+            <Property name="text" type="java.lang.String" value="5432"/>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabasePortTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+        <Component class="javax.swing.JLabel" name="jLabel3">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseUser" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="databaseUser">
+          <Properties>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseUserTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+        <Component class="javax.swing.JLabel" name="jLabel4">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabasePassword" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JPasswordField" name="databasePassword">
+          <Properties>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabasePasswordTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+        <Component class="javax.swing.JLabel" name="jLabel7">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseParameter" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="databaseParameter">
+          <Properties>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.DatabaseParameterTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JButton" name="help">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Common.Help" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+  </SubComponents>
+</Form>

Added: trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -0,0 +1,289 @@
+/*
+ * ServerCreateView.java
+ *
+ * Created on 1. ?erven 2006, 19:21
+ */
+
+package net.sf.plantlore.server.manager;
+
+import java.util.Observable;
+import java.util.Observer;
+
+import javax.swing.JOptionPane;
+
+import net.sf.plantlore.l10n.L10n;
+import net.sf.plantlore.server.ServerSettings;
+
+/**
+ *
+ * @author  yaa
+ */
+public class ServerCreateView extends javax.swing.JFrame implements Observer {
+    
+	
+//	private ServerMng model;
+
+	
+    /** Creates new form ServerCreateView */
+    public ServerCreateView(ServerMng model) {
+    	model.addObserver(this);
+        initComponents();
+        getRootPane().setDefaultButton(next);
+        setLocationRelativeTo(null); // center of the screen
+        
+        // Initialize the components' contents.
+        ServerSettings settings = model.getSettings();
+        if(settings != null) {
+        	// Server
+        	serverPort.setText( new Integer(settings.getPort()).toString() );
+        	// Database
+        	databasePort.setText( new Integer(settings.getDatabaseSettings().getPort()).toString() );
+        	( (javax.swing.JTextField)databaseType.getEditor().getEditorComponent() )
+        	.setText( settings.getDatabaseSettings().getDatabase() );
+        	databaseUser.setText( settings.getDatabaseSettings().getMasterUser() );
+        	databasePassword.setText( settings.getDatabaseSettings().getMasterPassword() );
+        	databaseParameter.setText( settings.getDatabaseSettings().getConnectionStringSuffix() );
+        }
+    }
+    
+    /** This method is called from within the constructor to
+     * initialize the form.
+     * WARNING: Do NOT modify this code. The content of this method is
+     * always regenerated by the Form Editor.
+     */
+    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
+    private void initComponents() {
+        plantloreLogo = new javax.swing.JPanel();
+        next = new javax.swing.JButton();
+        jPanel1 = new javax.swing.JPanel();
+        jLabel2 = new javax.swing.JLabel();
+        serverPassword = new javax.swing.JPasswordField();
+        jLabel1 = new javax.swing.JLabel();
+        serverPort = new javax.swing.JTextField();
+        status = new javax.swing.JLabel();
+        jPanel2 = new javax.swing.JPanel();
+        jLabel5 = new javax.swing.JLabel();
+        databaseType = new javax.swing.JComboBox();
+        jLabel6 = new javax.swing.JLabel();
+        databasePort = new javax.swing.JTextField();
+        jLabel3 = new javax.swing.JLabel();
+        databaseUser = new javax.swing.JTextField();
+        jLabel4 = new javax.swing.JLabel();
+        databasePassword = new javax.swing.JPasswordField();
+        jLabel7 = new javax.swing.JLabel();
+        databaseParameter = new javax.swing.JTextField();
+        help = new javax.swing.JButton();
+
+        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
+        setTitle(L10n.getString("Server.Create"));
+        setResizable(false);
+        plantloreLogo.setBackground(new java.awt.Color(0, 0, 0));
+        plantloreLogo.setPreferredSize(new java.awt.Dimension(300, 100));
+        org.jdesktop.layout.GroupLayout plantloreLogoLayout = new org.jdesktop.layout.GroupLayout(plantloreLogo);
+        plantloreLogo.setLayout(plantloreLogoLayout);
+        plantloreLogoLayout.setHorizontalGroup(
+            plantloreLogoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(0, 433, Short.MAX_VALUE)
+        );
+        plantloreLogoLayout.setVerticalGroup(
+            plantloreLogoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(0, 100, Short.MAX_VALUE)
+        );
+
+        next.setText(L10n.getString("Server.Create"));
+
+        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("Server.ServerSettings")));
+        jLabel2.setText(L10n.getString("Server.Password"));
+
+        serverPassword.setToolTipText(L10n.getString("Server.PasswordTT"));
+
+        jLabel1.setText(L10n.getString("Server.Port"));
+
+        serverPort.setHorizontalAlignment(javax.swing.JTextField.LEFT);
+        serverPort.setText("1099");
+        serverPort.setToolTipText(L10n.getString("Server.PortTT"));
+
+        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
+        jPanel1.setLayout(jPanel1Layout);
+        jPanel1Layout.setHorizontalGroup(
+            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel1Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jLabel2)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(serverPassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jLabel1)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(serverPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addContainerGap())
+        );
+        jPanel1Layout.setVerticalGroup(
+            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel1Layout.createSequentialGroup()
+                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel2)
+                    .add(serverPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel1)
+                    .add(serverPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+        );
+
+        status.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
+
+        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("Server.DatabaseSettings")));
+        jLabel5.setText(L10n.getString("Server.DatabaseType"));
+
+        databaseType.setEditable(true);
+        databaseType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "postgresql", "firebirdsql", "mysql", "oraclesql" }));
+        databaseType.setToolTipText(L10n.getString("Server.DatabaseTypeTT"));
+
+        jLabel6.setText(L10n.getString("Server.DatabasePort"));
+
+        databasePort.setHorizontalAlignment(javax.swing.JTextField.LEFT);
+        databasePort.setText("5432");
+        databasePort.setToolTipText(L10n.getString("Server.DatabasePortTT"));
+
+        jLabel3.setText(L10n.getString("Server.DatabaseUser"));
+
+        databaseUser.setToolTipText(L10n.getString("Server.DatabaseUserTT"));
+
+        jLabel4.setText(L10n.getString("Server.DatabasePassword"));
+
+        databasePassword.setToolTipText(L10n.getString("Server.DatabasePasswordTT"));
+
+        jLabel7.setText(L10n.getString("Server.DatabaseParameter"));
+
+        databaseParameter.setToolTipText(L10n.getString("Server.DatabaseParameterTT"));
+
+        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
+        jPanel2.setLayout(jPanel2Layout);
+        jPanel2Layout.setHorizontalGroup(
+            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel2Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jLabel5)
+                    .add(jLabel3)
+                    .add(jLabel7))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jPanel2Layout.createSequentialGroup()
+                        .add(databaseType, 0, 264, Short.MAX_VALUE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(jLabel6)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(databasePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(databaseParameter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
+                    .add(jPanel2Layout.createSequentialGroup()
+                        .add(databaseUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(jLabel4)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(databasePassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
+                .addContainerGap())
+        );
+        jPanel2Layout.setVerticalGroup(
+            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel2Layout.createSequentialGroup()
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel5)
+                    .add(databasePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel6)
+                    .add(databaseType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel3)
+                    .add(databaseUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel4)
+                    .add(databasePassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(jLabel7)
+                    .add(databaseParameter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+        );
+
+        help.setText(L10n.getString("Common.Help"));
+
+        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
+        getContentPane().setLayout(layout);
+        layout.setHorizontalGroup(
+            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                .addContainerGap()
+                .add(help)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 307, Short.MAX_VALUE)
+                .add(next)
+                .addContainerGap())
+            .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
+            .add(layout.createSequentialGroup()
+                .addContainerGap()
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
+                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
+                        .add(org.jdesktop.layout.GroupLayout.LEADING, plantloreLogo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)))
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+        );
+        layout.setVerticalGroup(
+            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(layout.createSequentialGroup()
+                .addContainerGap()
+                .add(plantloreLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(next)
+                    .add(help))
+                .add(11, 11, 11)
+                .add(status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+        );
+        pack();
+    }// </editor-fold>//GEN-END:initComponents
+    
+    
+    // Variables declaration - do not modify//GEN-BEGIN:variables
+    protected javax.swing.JTextField databaseParameter;
+    protected javax.swing.JPasswordField databasePassword;
+    protected javax.swing.JTextField databasePort;
+    protected javax.swing.JComboBox databaseType;
+    protected javax.swing.JTextField databaseUser;
+    protected javax.swing.JButton help;
+    private javax.swing.JLabel jLabel1;
+    private javax.swing.JLabel jLabel2;
+    private javax.swing.JLabel jLabel3;
+    private javax.swing.JLabel jLabel4;
+    private javax.swing.JLabel jLabel5;
+    private javax.swing.JLabel jLabel6;
+    private javax.swing.JLabel jLabel7;
+    private javax.swing.JPanel jPanel1;
+    private javax.swing.JPanel jPanel2;
+    protected javax.swing.JButton next;
+    protected javax.swing.JPanel plantloreLogo;
+    protected javax.swing.JPasswordField serverPassword;
+    protected javax.swing.JTextField serverPort;
+    private javax.swing.JLabel status;
+    // End of variables declaration//GEN-END:variables
+
+    
+	public void update(Observable source, final Object parameter) {
+		java.awt.EventQueue.invokeLater(new Runnable() {
+			public void run() {
+				if(parameter instanceof String)
+					status.setText( " " + (String)parameter );
+				else if(parameter instanceof Exception) {
+					JOptionPane.showMessageDialog(null,
+							((Exception)parameter).getMessage(),
+						    L10n.getString("Error.ServerLoginFailed"),
+						    JOptionPane.ERROR_MESSAGE);
+				}
+			}
+		});
+	}
+	
+    
+}

Modified: trunk/src/net/sf/plantlore/server/manager/ServerLoginCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerLoginCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerLoginCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,30 +1,26 @@
 package net.sf.plantlore.server.manager;
 
 import java.awt.event.ActionEvent;
-import java.rmi.AlreadyBoundException;
-import java.rmi.NotBoundException;
-import java.rmi.RemoteException;
 
 import javax.swing.AbstractAction;
-import javax.swing.JOptionPane;
+import javax.swing.ImageIcon;
 
-
+import net.sf.plantlore.client.resources.Resource;
 import net.sf.plantlore.l10n.L10n;
-import net.sf.plantlore.server.CertificationException;
 
 /**
  * 
  * @author Erik Kratochv?l (discontinuum at gmail.com)
  * @since 2006-04-21
- *
+ * @version GR-8
  */
 public class ServerLoginCtrl {
 	
 	private ServerMng model;
 	private ServerLoginView view;
 	
-	private ServerMngView serverView;
-	private ServerMngCtrl serverCtrl;
+	private ServerMngView serverMngView;
+//	private ServerMngCtrl serverMngCtrl;
 	
 	
 	
@@ -32,93 +28,39 @@
 		this.view = view;
 		this.model = model;
 		
-		view.next.addActionListener(new ConnectCreate());
-		view.connectExisting.addActionListener(new SelectExisting());
-		view.createNew.addActionListener(new SelectNew());
-		
-		serverView = new ServerMngView(model);
-		serverCtrl = new ServerMngCtrl(model, serverView);
+		view.next.setAction(new Connect());
 	}
 	
 	
-	class ConnectCreate extends AbstractAction {
-		public ConnectCreate() {
-            putValue(NAME, L10n.getString("Continue"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("ContinueTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Continue"));            
-        }
+	class Connect extends AbstractAction {
+		public Connect() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.NextTT"));
+			putValue(NAME, L10n.getString("Server.Next"));
+            ImageIcon icon = Resource.createIcon("Server.Connect.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
 		
 		public void actionPerformed(ActionEvent e) {
 			String hp = view.host.getText(), host;
-			int t = hp.indexOf(':'), port = net.sf.plantlore.server.RMIServer.DEFAULT_PORT;
-			if(t < 0) host = hp;
-			else { host = hp.substring(0, t); port = Integer.parseInt(hp.substring(t + 1)); }
-			try {
+			int t = hp.indexOf(':'), 
+			port = net.sf.plantlore.server.RMIServer.DEFAULT_PORT;
+			if(t < 0) 
+				host = hp;
+			else { 
+				host = hp.substring(0, t); 
+				port = Integer.parseInt(hp.substring(t + 1)); 
+			}
 				
-				model.actAsInstructed(host, port, new String(view.password.getPassword()));
+			if( model.connectToRunningServer(host, port, new String(view.password.getPassword())) ) {
+				// Everything's fine.
+				view.setVisible(false);
 				
-			} catch(RemoteException re) { 
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("errorRemoteException"),
-					    L10n.getString("errorRemoteExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
-				return;
-			} catch(AlreadyBoundException abe) {
-				int response =
-				JOptionPane.showOptionDialog(view,
-					    L10n.getString("questionAlreadyBoundException"),
-					    L10n.getString("questionAlreadyBoundExceptionTitle"),
-					    JOptionPane.OK_CANCEL_OPTION,
-					    JOptionPane.WARNING_MESSAGE,
-					    null,
-					    null,
-					    null);
-				if(response == JOptionPane.OK_OPTION) {
-					view.connectExisting.doClick();
-					view.next.doClick();
-				}
-				return;
-			} catch(NotBoundException nbe) {
-				JOptionPane.showMessageDialog(view,
-					    L10n.getString("errorNotBoundException"),
-					    L10n.getString("errorNotBoundExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
-				return;
+				serverMngView = new ServerMngView(model);
+				serverMngView.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
+				/*serverMngCtrl = */new ServerMngCtrl(model, serverMngView);
+				serverMngView.setVisible(true);
 			}
-			catch(CertificationException ce) {
-				JOptionPane.showMessageDialog(view,
-					    L10n.getString("errorCertificationException"),
-					    L10n.getString("errorCertificationExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
-				return;
-			}
-			
-			// Everything's fine in here.
-			view.setVisible(false);
-			serverView.setVisible(true);
 		}
 	}
-	
-	class SelectNew extends AbstractAction {
-		public SelectNew() {
-            putValue(NAME, L10n.getString("SelectNew"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("SelectNewTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("SelectNew"));            
-        }
-		public void actionPerformed(ActionEvent e) {
-			model.setMode(ServerMng.Mode.CREATE_NEW);
-		}
-	}
-	
-	class SelectExisting extends AbstractAction {
-		public SelectExisting() {
-            putValue(NAME, L10n.getString("SelectExisting"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("SelectExistingTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("SelectExisting"));            
-        }
-		public void actionPerformed(ActionEvent e) {
-			model.setMode(ServerMng.Mode.CONNECT_EXISTING);
-		}
-	}
 
 }

Modified: trunk/src/net/sf/plantlore/server/manager/ServerLoginView.form
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerLoginView.form	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerLoginView.form	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,12 +1,12 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<Form version="1.3" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
-  <NonVisualComponents>
-    <Component class="javax.swing.ButtonGroup" name="buttonGroup1">
-    </Component>
-  </NonVisualComponents>
+<Form version="1.3" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
   <Properties>
-    <Property name="defaultCloseOperation" type="int" value="3"/>
+    <Property name="defaultCloseOperation" type="int" value="2"/>
+    <Property name="title" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+      <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Login" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+    </Property>
+    <Property name="resizable" type="boolean" value="false"/>
   </Properties>
   <SyntheticProperties>
     <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
@@ -24,81 +24,91 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="imageHere" alignment="0" max="32767" attributes="0"/>
-                  <Component id="createNew" alignment="0" min="-2" max="-2" attributes="0"/>
-                  <Component id="connectExisting" alignment="0" min="-2" max="-2" attributes="0"/>
+                  <Component id="plantloreLogo" alignment="0" pref="397" max="32767" attributes="0"/>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="help" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="279" max="32767" attributes="0"/>
+                      <Component id="next" min="-2" max="-2" attributes="0"/>
+                  </Group>
                   <Group type="102" alignment="0" attributes="0">
                       <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="jLabel1" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
                           <Component id="jLabel2" alignment="0" min="-2" max="-2" attributes="0"/>
                       </Group>
                       <EmptySpace max="-2" attributes="0"/>
                       <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="password" pref="347" max="32767" attributes="0"/>
                           <Component id="host" alignment="0" pref="347" max="32767" attributes="0"/>
-                          <Component id="password" alignment="0" pref="347" max="32767" attributes="0"/>
                       </Group>
                   </Group>
-                  <Component id="next" alignment="1" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
           </Group>
+          <Component id="status" alignment="0" pref="417" max="32767" attributes="0"/>
       </Group>
     </DimensionLayout>
     <DimensionLayout dim="1">
       <Group type="103" groupAlignment="0" attributes="0">
           <Group type="102" alignment="0" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
-              <Component id="imageHere" min="-2" max="-2" attributes="0"/>
+              <Component id="plantloreLogo" min="-2" max="-2" attributes="0"/>
               <EmptySpace max="-2" attributes="0"/>
-              <Component id="createNew" min="-2" max="-2" attributes="0"/>
-              <EmptySpace max="-2" attributes="0"/>
-              <Component id="connectExisting" min="-2" max="-2" attributes="0"/>
-              <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="jLabel1" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="host" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="host" alignment="3" min="-2" pref="20" max="-2" attributes="0"/>
               </Group>
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="jLabel2" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="password" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="password" alignment="3" min="-2" pref="18" max="-2" attributes="0"/>
               </Group>
+              <EmptySpace max="32767" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="next" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="help" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
               <EmptySpace max="-2" attributes="0"/>
-              <Component id="next" min="-2" max="-2" attributes="0"/>
-              <EmptySpace max="32767" attributes="0"/>
+              <Component id="status" min="-2" max="-2" attributes="0"/>
           </Group>
       </Group>
     </DimensionLayout>
   </Layout>
   <SubComponents>
-    <Component class="javax.swing.JLabel" name="jLabel1">
-      <Properties>
-        <Property name="text" type="java.lang.String" value="Host:port"/>
-      </Properties>
-    </Component>
-    <Component class="javax.swing.JLabel" name="jLabel2">
-      <Properties>
-        <Property name="text" type="java.lang.String" value="Password"/>
-      </Properties>
-    </Component>
     <Component class="javax.swing.JTextField" name="host">
       <Properties>
-        <Property name="text" type="java.lang.String" value="localhost:1099"/>
+        <Property name="text" type="java.lang.String" value="localhost"/>
       </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
     </Component>
     <Component class="javax.swing.JPasswordField" name="password">
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
     </Component>
     <Component class="javax.swing.JButton" name="next">
       <Properties>
-        <Property name="text" type="java.lang.String" value="next"/>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Next" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
       </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
     </Component>
-    <Container class="javax.swing.JPanel" name="imageHere">
+    <Container class="javax.swing.JPanel" name="plantloreLogo">
       <Properties>
         <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
           <Color blue="0" green="0" red="0" type="rgb"/>
         </Property>
+        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+          <Dimension value="[300, 100]"/>
+        </Property>
       </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
 
       <Layout>
         <DimensionLayout dim="0">
@@ -108,42 +118,43 @@
         </DimensionLayout>
         <DimensionLayout dim="1">
           <Group type="103" groupAlignment="0" attributes="0">
-              <EmptySpace min="0" pref="198" max="32767" attributes="0"/>
+              <EmptySpace min="0" pref="100" max="32767" attributes="0"/>
           </Group>
         </DimensionLayout>
       </Layout>
     </Container>
-    <Component class="javax.swing.JRadioButton" name="createNew">
+    <Component class="javax.swing.JLabel" name="jLabel1">
       <Properties>
-        <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
-          <ComponentRef name="buttonGroup1"/>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Host" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
         </Property>
-        <Property name="selected" type="boolean" value="true"/>
-        <Property name="text" type="java.lang.String" value="Create and start a new server"/>
-        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-          <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-            <EmptyBorder bottom="0" left="0" right="0" top="0"/>
-          </Border>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JLabel" name="jLabel2">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Password" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
         </Property>
-        <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-          <Insets value="[0, 0, 0, 0]"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="help">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Common.Help" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
         </Property>
       </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
     </Component>
-    <Component class="javax.swing.JRadioButton" name="connectExisting">
+    <Component class="javax.swing.JLabel" name="status">
       <Properties>
-        <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
-          <ComponentRef name="buttonGroup1"/>
-        </Property>
-        <Property name="text" type="java.lang.String" value="Connect to a running server"/>
+        <Property name="text" type="java.lang.String" value="Awaiting commands"/>
         <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-          <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-            <EmptyBorder bottom="0" left="0" right="0" top="0"/>
+          <Border info="org.netbeans.modules.form.compat2.border.BevelBorderInfo">
+            <BevelBorder bevelType="1"/>
           </Border>
         </Property>
-        <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-          <Insets value="[0, 0, 0, 0]"/>
-        </Property>
       </Properties>
     </Component>
   </SubComponents>

Modified: trunk/src/net/sf/plantlore/server/manager/ServerLoginView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerLoginView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerLoginView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,5 +1,10 @@
 package net.sf.plantlore.server.manager;
 
+import java.util.Observable;
+import java.util.Observer;
+
+import javax.swing.JOptionPane;
+
 import net.sf.plantlore.l10n.L10n;
 
 
@@ -7,15 +12,16 @@
  * The server connection/creation dialog.
  *
  * @author  Erik Kratochv?l (discontinuum at gmail.com)
+ * @version GR-8
  */
-public class ServerLoginView extends javax.swing.JFrame {
+public class ServerLoginView extends javax.swing.JFrame implements Observer {
 	
-	ServerMng model;
     
     /** Creates new form ServerLoginView */
     public ServerLoginView(ServerMng model) {
-    	this.model = model;
+    	model.addObserver(this);
         initComponents();
+        getRootPane().setDefaultButton(next);
         setLocationRelativeTo(null); // center of the screen
     }
     
@@ -26,48 +32,44 @@
      */
     // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
     private void initComponents() {
-        buttonGroup1 = new javax.swing.ButtonGroup();
-        jLabel1 = new javax.swing.JLabel();
-        jLabel2 = new javax.swing.JLabel();
         host = new javax.swing.JTextField();
         password = new javax.swing.JPasswordField();
         next = new javax.swing.JButton();
-        imageHere = new javax.swing.JPanel();
-        createNew = new javax.swing.JRadioButton();
-        connectExisting = new javax.swing.JRadioButton();
+        plantloreLogo = new javax.swing.JPanel();
+        jLabel1 = new javax.swing.JLabel();
+        jLabel2 = new javax.swing.JLabel();
+        help = new javax.swing.JButton();
+        status = new javax.swing.JLabel();
 
         setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
-        jLabel1.setText(L10n.getString("HostPort"));
+        setTitle(L10n.getString("Server.Login"));
+        setResizable(false);
+        host.setText("localhost");
 
-        jLabel2.setText(L10n.getString("Password"));
+        next.setText(L10n.getString("Server.Next"));
 
-        host.setText("localhost:1099");
-
-        next.setText("Next");
-
-        imageHere.setBackground(new java.awt.Color(0, 0, 0));
-        org.jdesktop.layout.GroupLayout imageHereLayout = new org.jdesktop.layout.GroupLayout(imageHere);
-        imageHere.setLayout(imageHereLayout);
-        imageHereLayout.setHorizontalGroup(
-            imageHereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+        plantloreLogo.setBackground(new java.awt.Color(0, 0, 0));
+        plantloreLogo.setPreferredSize(new java.awt.Dimension(300, 100));
+        org.jdesktop.layout.GroupLayout plantloreLogoLayout = new org.jdesktop.layout.GroupLayout(plantloreLogo);
+        plantloreLogo.setLayout(plantloreLogoLayout);
+        plantloreLogoLayout.setHorizontalGroup(
+            plantloreLogoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(0, 397, Short.MAX_VALUE)
         );
-        imageHereLayout.setVerticalGroup(
-            imageHereLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(0, 198, Short.MAX_VALUE)
+        plantloreLogoLayout.setVerticalGroup(
+            plantloreLogoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(0, 100, Short.MAX_VALUE)
         );
 
-        buttonGroup1.add(createNew);
-        createNew.setSelected(true);
-        createNew.setText("Create and start a new server");
-        createNew.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
-        createNew.setMargin(new java.awt.Insets(0, 0, 0, 0));
+        jLabel1.setText(L10n.getString("Server.Host"));
 
-        buttonGroup1.add(connectExisting);
-        connectExisting.setText("Connect to a running server");
-        connectExisting.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
-        connectExisting.setMargin(new java.awt.Insets(0, 0, 0, 0));
+        jLabel2.setText(L10n.getString("Server.Password"));
 
+        help.setText(L10n.getString("Common.Help"));
+
+        status.setText("Awaiting commands");
+        status.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
+
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
@@ -75,40 +77,41 @@
             .add(layout.createSequentialGroup()
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(imageHere, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                    .add(createNew)
-                    .add(connectExisting)
+                    .add(plantloreLogo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(help)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 279, Short.MAX_VALUE)
+                        .add(next))
                     .add(layout.createSequentialGroup()
                         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jLabel1)
                             .add(jLabel2))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(host, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
-                            .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)))
-                    .add(org.jdesktop.layout.GroupLayout.TRAILING, next))
+                            .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
+                            .add(host, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))))
                 .addContainerGap())
+            .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(layout.createSequentialGroup()
                 .addContainerGap()
-                .add(imageHere, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .add(plantloreLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(createNew)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(connectExisting)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(jLabel1)
-                    .add(host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(jLabel2)
-                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(next)
+                    .add(help))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(next)
-                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .add(status))
         );
         pack();
     }// </editor-fold>//GEN-END:initComponents
@@ -116,15 +119,31 @@
     
     
     // Variables declaration - do not modify//GEN-BEGIN:variables
-    private javax.swing.ButtonGroup buttonGroup1;
-    protected javax.swing.JRadioButton connectExisting;
-    protected javax.swing.JRadioButton createNew;
+    protected javax.swing.JButton help;
     protected javax.swing.JTextField host;
-    protected javax.swing.JPanel imageHere;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     protected javax.swing.JButton next;
     protected javax.swing.JPasswordField password;
+    protected javax.swing.JPanel plantloreLogo;
+    private javax.swing.JLabel status;
     // End of variables declaration//GEN-END:variables
     
+    
+    public void update(Observable source, final Object parameter) {
+		java.awt.EventQueue.invokeLater(new Runnable() {
+			public void run() {
+				if(parameter instanceof String)
+					status.setText( " " + (String)parameter );
+				else if(parameter instanceof Exception) {
+					JOptionPane.showMessageDialog(null,
+							((Exception)parameter).getMessage(),
+						    L10n.getString("Error.ServerLoginFailed"),
+						    JOptionPane.ERROR_MESSAGE);
+				}
+			}
+		});
+	}
+	
+    
 }

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMng.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,5 +1,14 @@
 package net.sf.plantlore.server.manager;
 
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.Reader;
+import java.io.Writer;
 import java.rmi.AlreadyBoundException;
 import java.rmi.NotBoundException;
 import java.rmi.RemoteException;
@@ -8,8 +17,15 @@
 import java.util.Observable;
 
 import org.apache.log4j.Logger;
+import org.dom4j.Document;
+import org.dom4j.DocumentHelper;
+import org.dom4j.Element;
+import org.dom4j.Node;
+import org.dom4j.io.OutputFormat;
+import org.dom4j.io.SAXReader;
+import org.dom4j.io.XMLWriter;
 
-
+import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.server.*;
 
 /**
@@ -29,27 +45,117 @@
  */
 public class ServerMng extends Observable {
 	
+	public static final Object UPDATE_LIST = new Object();
+	
+	private static final String SERVER_CONFIG_NAME = "plantlore.server.xml";
+	private static final String PLANTLORE = "plantlore";
+	
 	/** The server control interface. */
 	private Server server;
+	private ServerSettings settings;
 	
 	/** List of connected clients. */
 	private ConnectionInfo[] clients;
 	
-	/**
-	 * CREATE_NEW will create a and start a new server
-	 * CONNECT_EXISTING will try connect to an existing server  
-	 * 
-	 * @author Erik Kratochv?l (discontinuum at gmail.com)
-	 * @since 21.4.2006
-	 */
-	public enum Mode { CREATE_NEW, CONNECT_EXISTING };
+	private Logger logger = Logger.getLogger(this.getClass().getPackage().getName());
+	private String settingsFileName; {
+		String userHome = System.getProperty("user.home"),
+		osName = System.getProperty("os.name"),
+		plantloreDirName = (osName.equals("Linux") ? "." : "") + PLANTLORE, 
+		plantloreConfDir = userHome+File.separator+plantloreDirName;
+		
+		File plantloreConfDirFile = new File(plantloreConfDir);
+		if (!plantloreConfDirFile.exists())
+			plantloreConfDirFile.mkdir();
+		
+		settingsFileName = plantloreConfDir + File.separator + SERVER_CONFIG_NAME;
+	}
 	
-	/** The current mode. */
-	private Mode mode = Mode.CREATE_NEW;
 	
-	private Logger logger = Logger.getLogger(this.getClass().getPackage().getName());
+	public ServerSettings getSettings() {
+
+		// Create some default settings.
+		settings = new ServerSettings(RMIServer.DEFAULT_PORT, 3, 32, 2, 
+				new DatabaseSettings("postgresql", 5432, null, "", ""));
 		
+		try {
+			Reader reader = new BufferedReader(
+					new InputStreamReader(new FileInputStream(settingsFileName), "UTF-8"));
+			SAXReader saxReader = new SAXReader();
+            Document document = saxReader.read( reader );
+            
+            Node server = (Node)document.selectSingleNode("/config/server");
+            Number portNumber = server.numberValueOf("port")/*,
+            connectionsNumber = server.numberValueOf("connections"),
+            peripNumber = server.numberValueOf("perip")*/;
+            int port = (portNumber == null) ? RMIServer.DEFAULT_PORT : portNumber.intValue()/*,
+            connections = (connectionsNumber == null) ? 16 : connectionsNumber.intValue(),
+            perip = (peripNumber == null) ? 2 : peripNumber.intValue()*/;
+            
+            Node database = (Node)server.selectSingleNode("/database");
+            
+            String databaseType = database.valueOf("engine"),
+            databaseParameter = database.valueOf("parameter"),
+            databaseMasterUser = database.valueOf("masteruser");
+            Number databasePortNumber = database.numberValueOf("port");
+            int databasePort = (databasePortNumber == null) ? 0 : databasePortNumber.intValue();
+            
+            settings = new ServerSettings(port, 3, 32, 2, 
+            		new DatabaseSettings(databaseType, databasePort, databaseParameter, databaseMasterUser, ""));
+            
+    		setChanged();
+    		notifyObservers(L10n.getString("Server.SettingsLoaded"));
+            
+		} catch(Exception e) {
+			logger.error("Settings could not be loaded. " + e.getMessage());
+			setChanged();
+			notifyObservers(L10n.getString("Server.SettingsNotLoaded"));
+		}
+		return settings;
+	}
 	
+	
+	
+	public void setSettings(ServerSettings settings) {
+		this.settings = settings;
+		
+		Document document = DocumentHelper.createDocument();
+		Element config = document.addElement("config"),
+		server = config.addElement("server");
+		server.addElement("port").setText( "" + settings.getPort() );
+		//server.addElement("connections").setText( "" + settings.getConnectionsTotal() );
+		//server.addElement("perip").setText( "" + settings.getConnectionsPerIP() );
+		
+		Element db = server.addElement("database");
+		db.addElement("engine").setText( settings.getDatabaseSettings().getDatabase() );
+		db.addElement("port").setText( "" + settings.getDatabaseSettings().getPort() );
+		db.addElement("parameter").setText(settings.getDatabaseSettings().getConnectionStringSuffix());
+		db.addElement("masteruser").setText(settings.getDatabaseSettings().getMasterUser());
+
+		try {
+			Writer outputWriter = new BufferedWriter(
+					new OutputStreamWriter(new FileOutputStream(settingsFileName), "UTF-8"));
+			
+			OutputFormat format = OutputFormat.createPrettyPrint();
+			XMLWriter xmlwriter = new XMLWriter( outputWriter, format );
+			xmlwriter.write( document );
+			xmlwriter.close();
+			outputWriter.close();
+			
+			setChanged();
+			notifyObservers(L10n.getString("Server.SettingsSaved"));
+			
+		} catch (java.io.IOException e) {
+			logger.error("Settings could not be saved. " + e.getMessage());
+			setChanged();
+			notifyObservers(L10n.getString("Server.SettingsNotSaved"));
+		}
+	}
+	
+	
+	
+		
+	
 	/**
 	 * Try to create and start a new server on the specified <code>port</code>.
 	 * The server will be protected with a <code>password</code> so that 
@@ -63,13 +169,35 @@
 	 * @throws AlreadyBoundException if another server is already running on the specified port.
 	 * @throws RemoteException if the RMI encounters an error.
 	 */
-	public void startNewServer(int port, String password) 
-	throws AlreadyBoundException, RemoteException {
-		logger.debug("Creating a new server at localhost:" + port);
-		server = new RMIServer(port, password);
-		logger.debug("Starting the server ...");
-		server.start();
-		logger.info("Server up and running (port " + port + ").");
+	synchronized public boolean startNewServer(String password) {
+		try {
+			logger.debug("Creating a new server at localhost:" + settings.getPort());
+			setChanged();
+			notifyObservers(L10n.getString("Server.Info.CreatingNewServer"));
+			// Create a new server.
+			server = new RMIServer(settings, password);
+			
+			setChanged();
+			notifyObservers(L10n.getString("Server.Info.StartingNewServer"));
+			// Start the server.
+			server.start();
+			
+			logger.info("Server up and running (port " + settings.getPort() + ").");
+			setChanged();
+			notifyObservers(L10n.getString("Server.Info.ServerUpAndRunning"));
+			
+			return true;
+			
+		} catch(AlreadyBoundException e) {
+			logger.fatal("There is another server running on the specified port ("+settings.getPort()+").");
+			setChanged();
+			notifyObservers(e);
+		} catch(RemoteException e) {
+			logger.fatal("The server creation failed. "+e.getMessage());
+			setChanged();
+			notifyObservers(e);
+		}
+		return false;
 	}
 
 	/**
@@ -83,41 +211,37 @@
 	 * @throws NotBoundException if there is no server running on the specified host:port. 
 	 * @throws CertificationException if the password is incorrect.
 	 */
-	public void connectToRunningServer(String host, int port, String password) 
-	throws RemoteException, NotBoundException, CertificationException {
-		logger.info("Connecting to a running server at " +host+":"+port);
-		Registry registry = LocateRegistry.getRegistry(host, port);
-		Guard guard = (Guard) registry.lookup(Guard.ID);
-		server = guard.certify(password);
-		
-		if(server == null) 
-			logger.warn("The connection to the server was NOT successful - certification didn't succeed!");
+	synchronized public boolean connectToRunningServer(String host, int port, String password) {
+		try {
+			logger.info("Connecting to a running server at " +host+":"+port);
+			setChanged();
+			notifyObservers(L10n.getString("Server.Info.ConnectingToServer"));
+			// Connect to the registry and obtain the Guard.
+			Registry registry = LocateRegistry.getRegistry(host, port);
+			Guard guard = (Guard) registry.lookup(Guard.ID);
+			// Send authorization information to gain access to the server.
+			server = guard.certify(password);
+			
+			return true;
+			
+		} catch(RemoteException e) {
+			logger.fatal("Connecting to the server failed. "+e.getMessage());
+			setChanged();
+			notifyObservers(e);
+		} catch(NotBoundException e) {
+			logger.fatal("There is no server running on "+host+":"+port+". " + e.getMessage());
+			setChanged();
+			notifyObservers(e);
+		} catch(CertificationException e) {
+			logger.fatal("The certification failed. "+e.getMessage());
+			setChanged();
+			notifyObservers(e);
+		}
+		return false;
 	}
 	
-	
+
 	/**
-	 * Start a new server or connect to an existing one accordingly to the current mode.
-	 * 
-	 * @param host The hostname of the computer where the server is running. 
-	 * (ignored when starting a new server). 
-	 * @param port The port where a server is listening or shall listen.
-	 * @param password The password that protects the server or shall protect the server.
-	 * @throws RemoteException if the RMI encounters an error.
-	 * @throws NotBoundException if there is no server running on the specified host:port
-	 * @throws AlreadyBoundException if there is another server already running on the specified port
-	 * @throws CertificationException if the password is incorrect and the certification failed.
-	 * 
-	 * @see connectToRunningServer
-	 * @see startNewServer
-	 * @see mode
-	 */
-	public void actAsInstructed(String host, int port, String password) 
-	throws RemoteException, NotBoundException, AlreadyBoundException, CertificationException {
-		if(mode == Mode.CREATE_NEW) startNewServer(port, password);
-		else connectToRunningServer(host, port, password);
-	}
-	
-	/**
 	 * Get the list of connected clients.
 	 * If <code>refresh</code> is true, the server is asked and the list of clients is refreshed.
 	 * If it is false, the stored list of connected clients is returned. 
@@ -126,18 +250,25 @@
 	 * @return The (possibly not updated) list of connected clients so that you can see whom you can kick, 
 	 * 	or null if noone is connected or we are not connected (or running) to some server.   
 	 */
-	public ConnectionInfo[] getConnectedUsers(boolean refresh) {
-		if(server == null) return null;
-		if(refresh)
-			try {
-				// Get the list of clients directly from the server.
+	synchronized public ConnectionInfo[] getConnectedUsers(boolean refresh) {
+		try {
+			if(server == null) 
+				return null;
+			
+			if(refresh) {
 				clients = server.getClients();
-				logger.debug("Clients connected to the server received.");
-				setChanged(); notifyObservers("PHear me!");
-			} catch( RemoteException e) { 
-				serverIsDead();
-				logger.warn("Unable to obtain the list of connected users - network error? " + e); 
+				setChanged();
+				notifyObservers(UPDATE_LIST);
 			}
+			
+			setChanged(); 
+			notifyObservers(L10n.getString("Server.Info.ClientsObtained"));
+			
+		} catch( RemoteException e) { 
+			logger.fatal("Unable to obtain the list of connected users. " + e.getMessage());
+			setChanged(); 
+			notifyObservers(e);
+		}
 		return clients;
 	}
 	
@@ -147,13 +278,23 @@
 	 * @param client The client to be kicked out of the server.
 	 * @throws RemoteException if the RMI has problems with this drastic task.
 	 */
-	public void kick(ConnectionInfo client) throws RemoteException {
-		if(server == null || client == null) return;
+	synchronized public void kick(ConnectionInfo client) {
 		try {
+			if(server == null || client == null) 
+				return;
+			
 			server.disconnect(client);
-		} catch(RemoteException re) { serverIsDead(); throw re; }
+			
+			logger.info(client + " was kicked out of the server. Muhehee.");
+			setChanged(); 
+			notifyObservers(L10n.getFormattedString("Server.Info.ClientKicked", client));
+			
+		} catch(RemoteException e) {
+			logger.fatal("Unable to kick the user "+client+". " + e.getMessage());
+			setChanged(); 
+			notifyObservers(e);
+		}
 		
-		logger.info(client + " was kicked out of the server. Muhehee.");
 		// Reload the list of connected users.
 		getConnectedUsers(true);
 	}
@@ -164,56 +305,23 @@
 	 * 
 	 * @throws RemoteException if the RMI has personal feelings for the server.
 	 */
-	public void terminateServer() throws RemoteException {
-		if(server != null)
-			try {
-				server.stop(true);
-			}catch(RemoteException re) { serverIsDead(); throw re; }
-		logger.info("Server terminated - all clients disconnected.");
+	synchronized public void terminateServer()  {
+		try {
+			if(server != null)
+				server.stop();
+
+			server = null;
+			
+			logger.info("Server terminated.");
+			setChanged(); 
+			notifyObservers(L10n.getString("Server.Info.Terminated"));
+			
+		}catch(RemoteException e) { 
+			logger.fatal("Unable to stop the server. " + e.getMessage());
+			setChanged(); 
+			notifyObservers(e);
+		}
 	}
 	
-	/**
-	 * Stop the server. The server will be terminated after the last client disconnects from it.
-	 * 
-	 * @throws RemoteException if the RMI encounters an error.
-	 */
-	@Deprecated
-	public void stopServer() throws RemoteException {
-		if(server !=null) 
-			try {
-				server.stop(false);
-			}catch(RemoteException re) { serverIsDead(); throw re; }
-		logger.debug("Server stopped - the server will terminate after the last client finishes his work.");
-	}
-	
-	/**
-	 * Set a new mode.
-	 *  
-	 * @param m The new mode.
-	 * @see Mode
-	 */
-	public void setMode(Mode m) {
-		this.mode = m;
-		logger.debug("Server mode " + mode);
-		setChanged(); notifyObservers(this.mode);
-	}
-	
-	/** 
-	 * Get the current mode.
-	 * @return The current mode.
-	 * @see Mode
-	 */
-	public Mode getMode() { 
-		return this.mode; 
-	}
-	
-	/**
-	 * Notify this model, that the server is no longer accessible. 
-	 *
-	 */
-	protected void serverIsDead() {
-		server = null; clients = null;
-		logger.warn("Connection to the server has failed.");
-	}
 
 }

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -1,11 +1,11 @@
 package net.sf.plantlore.server.manager;
 
 import java.awt.event.ActionEvent;
-import java.rmi.RemoteException;
 
 import javax.swing.AbstractAction;
-import javax.swing.JOptionPane;
+import javax.swing.ImageIcon;
 
+import net.sf.plantlore.client.resources.Resource;
 import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.server.ConnectionInfo;
 
@@ -23,81 +23,67 @@
 	public ServerMngCtrl(ServerMng model, ServerMngView view) {
 		this.model = model; this. view = view;
 		
-		view.kick.addActionListener(new KickUsers());
-		view.startstop.addActionListener(new StopServer());
-		view.terminate.addActionListener(new TerminateServer());
-		view.refresh.addActionListener(new Refresh());
+		view.kick.setAction(new KickUserAction());
+		view.terminate.setAction(new TerminateServerAction());
+		view.refresh.setAction(new RefreshAction());
+		view.hide.setAction(new HideAction());
 	}
 	
 	
-	class KickUsers extends AbstractAction {
-		public KickUsers() {
-            putValue(NAME, L10n.getString("Kick"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("KickTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Kick"));            
-        }
-		
+	class KickUserAction extends AbstractAction {
+		public KickUserAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.KickUserTT"));
+			putValue(NAME, L10n.getString("Server.KickUser"));
+            ImageIcon icon = Resource.createIcon("Server.KickUser.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
 		public void actionPerformed(ActionEvent ae) {
-			try {
-				Object[] bunch = view.users.getSelectedValues();
-				if(bunch == null || bunch.length == 0) return;
-
-				for(Object client : bunch)
-					if(client instanceof ConnectionInfo) model.kick((ConnectionInfo)client);
-
-			} catch(RemoteException re) { 
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("errorRemoteException"),
-					    L10n.getString("errorRemoteExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
+			Object client = view.users.getSelectedValue();
+			if(client == null) 
 				return;
-			}
+			else if(client instanceof ConnectionInfo) 
+				model.kick( (ConnectionInfo)client );
 		}
 	}
 	
-	class StopServer extends AbstractAction {
+	class TerminateServerAction extends AbstractAction {
+		public TerminateServerAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.TerminateTT"));
+			putValue(NAME, L10n.getString("Server.Terminate"));
+            ImageIcon icon = Resource.createIcon("Server.Terminate.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
 		public void actionPerformed(ActionEvent ae) {
-			try {
-				model.stopServer();
-			} catch(RemoteException re) { 
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("errorRemoteException"),
-					    L10n.getString("errorRemoteExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
-				return;
-			}
+			model.terminateServer();
+			// Disable Terminate, Refresh and Kick buttons.
+			view.terminate.setEnabled(false);
+			view.refresh.setEnabled(false);
+			view.kick.setEnabled(false);
 		}
 	}
 	
-	class TerminateServer extends AbstractAction {
-		public TerminateServer() {
-            putValue(NAME, L10n.getString("TerminateServer"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("TerminateServerTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("TerminateServer"));            
-        }
-		
+	class RefreshAction extends AbstractAction {
+		public RefreshAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.RefreshTT"));
+			putValue(NAME, L10n.getString("Server.Refresh"));
+            ImageIcon icon = Resource.createIcon("Server.Refresh.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
 		public void actionPerformed(ActionEvent ae) {
-			try {
-				model.terminateServer();
-			} catch(RemoteException re) { 
-				JOptionPane.showMessageDialog(view,
-						L10n.getString("errorRemoteException"),
-					    L10n.getString("errorRemoteExceptionTitle"),
-					    JOptionPane.WARNING_MESSAGE);
-				return;
-			}
+			model.getConnectedUsers(true);
 		}
 	}
 	
-	class Refresh extends AbstractAction {
-		public Refresh() {
-            putValue(NAME, L10n.getString("Refresh"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("RefreshTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Refresh"));            
-        }
-		
+	class HideAction extends AbstractAction {
+		public HideAction() {
+			putValue(SHORT_DESCRIPTION, L10n.getString("Server.HideTT"));
+			putValue(NAME, L10n.getString("Server.Hide"));
+            ImageIcon icon = Resource.createIcon("Server.Hide.gif");
+			if(icon != null) putValue(SMALL_ICON, icon);
+		}
 		public void actionPerformed(ActionEvent ae) {
-				model.getConnectedUsers(true);
+			view.setVisible(false);
+			//view.dispose();
 		}
 	}
 

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngView.form
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngView.form	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngView.form	2006-06-03 16:48:24 UTC (rev 428)
@@ -3,6 +3,9 @@
 <Form version="1.3" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
   <Properties>
     <Property name="defaultCloseOperation" type="int" value="3"/>
+    <Property name="title" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+      <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Manage" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+    </Property>
   </Properties>
   <SyntheticProperties>
     <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
@@ -17,12 +20,22 @@
   <Layout>
     <DimensionLayout dim="0">
       <Group type="103" groupAlignment="0" attributes="0">
-          <Component id="jToolBar1" alignment="0" pref="523" max="32767" attributes="0"/>
-          <Group type="102" alignment="0" attributes="0">
-              <EmptySpace min="10" pref="10" max="10" attributes="0"/>
-              <Component id="jScrollPane1" pref="503" max="32767" attributes="0"/>
+          <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="jScrollPane1" alignment="0" pref="315" max="32767" attributes="0"/>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="help" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="86" max="32767" attributes="0"/>
+                      <Component id="terminate" linkSize="1" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="hide" linkSize="1" min="-2" max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
           </Group>
+          <Component id="status" alignment="0" pref="335" max="32767" attributes="0"/>
+          <Component id="jToolBar1" alignment="0" pref="335" max="32767" attributes="0"/>
       </Group>
     </DimensionLayout>
     <DimensionLayout dim="1">
@@ -30,54 +43,110 @@
           <Group type="102" alignment="0" attributes="0">
               <Component id="jToolBar1" min="-2" pref="25" max="-2" attributes="0"/>
               <EmptySpace max="-2" attributes="0"/>
-              <Component id="jScrollPane1" pref="258" max="32767" attributes="0"/>
-              <EmptySpace max="-2" attributes="0"/>
+              <Component id="jScrollPane1" pref="141" max="32767" attributes="0"/>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="hide" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="help" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="terminate" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <Component id="status" min="-2" pref="18" max="-2" attributes="0"/>
           </Group>
       </Group>
     </DimensionLayout>
   </Layout>
   <SubComponents>
-    <Container class="javax.swing.JToolBar" name="jToolBar1">
+    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+      <AuxValues>
+        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+      </AuxValues>
 
-      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
+      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
       <SubComponents>
-        <Component class="javax.swing.JButton" name="refresh">
+        <Component class="javax.swing.JList" name="users">
           <Properties>
-            <Property name="text" type="java.lang.String" value="Refresh"/>
+            <Property name="model" type="javax.swing.ListModel" editor="org.netbeans.modules.form.editors2.ListModelEditor">
+              <StringArray count="0"/>
+            </Property>
+            <Property name="toolTipText" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.ListOfUsersTT" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
           </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
         </Component>
-        <Component class="javax.swing.JButton" name="kick">
-          <Properties>
-            <Property name="text" type="java.lang.String" value="Kick users"/>
-          </Properties>
-        </Component>
-        <Component class="javax.swing.JButton" name="startstop">
-          <Properties>
-            <Property name="text" type="java.lang.String" value="Stop server"/>
-          </Properties>
-        </Component>
-        <Component class="javax.swing.JButton" name="terminate">
-          <Properties>
-            <Property name="text" type="java.lang.String" value="Terminate server"/>
-          </Properties>
-        </Component>
       </SubComponents>
     </Container>
-    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+    <Component class="javax.swing.JButton" name="hide">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Hide" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
       <AuxValues>
-        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
+    </Component>
+    <Component class="javax.swing.JButton" name="help">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Common.Help" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+    <Component class="javax.swing.JLabel" name="status">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="Server up and running"/>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.BevelBorderInfo">
+            <BevelBorder bevelType="1"/>
+          </Border>
+        </Property>
+      </Properties>
+    </Component>
+    <Container class="javax.swing.JToolBar" name="jToolBar1">
+      <Properties>
+        <Property name="floatable" type="boolean" value="false"/>
+      </Properties>
 
-      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
       <SubComponents>
-        <Component class="javax.swing.JList" name="users">
+        <Component class="javax.swing.JButton" name="refresh">
           <Properties>
-            <Property name="model" type="javax.swing.ListModel" editor="org.netbeans.modules.form.editors2.ListModelEditor">
-              <StringArray count="0"/>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Refresh" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
             </Property>
           </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
         </Component>
+        <Component class="javax.swing.JButton" name="kick">
+          <Properties>
+            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+              <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.KickUser" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+            </Property>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
       </SubComponents>
     </Container>
+    <Component class="javax.swing.JButton" name="terminate">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Server.Terminate" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
   </SubComponents>
 </Form>

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngView.java	2006-06-02 04:33:10 UTC (rev 427)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngView.java	2006-06-03 16:48:24 UTC (rev 428)
@@ -9,7 +9,10 @@
 import java.util.Observable;
 import java.util.Observer;
 
+import javax.swing.JOptionPane;
 
+
+import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.server.ConnectionInfo;
 
 /**
@@ -28,6 +31,7 @@
     	model.addObserver(this);
     	
         initComponents();
+        //getRootPane().setDefaultButton(hide);
         setLocationRelativeTo(null); // center of the screen
     }
     
@@ -38,46 +42,71 @@
      */
     // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
     private void initComponents() {
+        jScrollPane1 = new javax.swing.JScrollPane();
+        users = new javax.swing.JList();
+        hide = new javax.swing.JButton();
+        help = new javax.swing.JButton();
+        status = new javax.swing.JLabel();
         jToolBar1 = new javax.swing.JToolBar();
         refresh = new javax.swing.JButton();
         kick = new javax.swing.JButton();
-        startstop = new javax.swing.JButton();
         terminate = new javax.swing.JButton();
-        jScrollPane1 = new javax.swing.JScrollPane();
-        users = new javax.swing.JList();
 
         setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
-        refresh.setText("Refresh");
+        setTitle(L10n.getString("Server.Manage"));
+        users.setToolTipText(L10n.getString("Server.ListOfUsersTT"));
+        jScrollPane1.setViewportView(users);
+
+        hide.setText(L10n.getString("Server.Hide"));
+
+        help.setText(L10n.getString("Common.Help"));
+
+        status.setText("Server up and running");
+        status.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
+
+        jToolBar1.setFloatable(false);
+        refresh.setText(L10n.getString("Server.Refresh"));
         jToolBar1.add(refresh);
 
-        kick.setText("Kick users");
+        kick.setText(L10n.getString("Server.KickUser"));
         jToolBar1.add(kick);
 
-        startstop.setText("Stop server");
-        jToolBar1.add(startstop);
+        terminate.setText(L10n.getString("Server.Terminate"));
 
-        terminate.setText("Terminate server");
-        jToolBar1.add(terminate);
-
-        jScrollPane1.setViewportView(users);
-
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
             .add(layout.createSequentialGroup()
-                .add(10, 10, 10)
-                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
+                .addContainerGap()
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(help)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 86, Short.MAX_VALUE)
+                        .add(terminate)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(hide)))
                 .addContainerGap())
+            .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
+            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
         );
+
+        layout.linkSize(new java.awt.Component[] {hide, terminate}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(layout.createSequentialGroup()
                 .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
-                .addContainerGap())
+                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(hide)
+                    .add(help)
+                    .add(terminate))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
         );
         pack();
     }// </editor-fold>//GEN-END:initComponents
@@ -85,11 +114,13 @@
     
     
     // Variables declaration - do not modify//GEN-BEGIN:variables
+    protected javax.swing.JButton help;
+    protected javax.swing.JButton hide;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JToolBar jToolBar1;
     protected javax.swing.JButton kick;
     protected javax.swing.JButton refresh;
-    protected javax.swing.JButton startstop;
+    private javax.swing.JLabel status;
     protected javax.swing.JButton terminate;
     protected javax.swing.JList users;
     // End of variables declaration//GEN-END:variables
@@ -98,12 +129,26 @@
     /**
      * Reload the list of the connected clients.
      */
-	public void update(Observable source, Object parameter) {
-		if(parameter != null && parameter.toString().startsWith("PH")){
+	public void update(Observable source, final Object parameter) {
+		if(parameter == ServerMng.UPDATE_LIST){
 			ConnectionInfo[] clients = model.getConnectedUsers(false);
-			if(clients != null) users.setListData(clients);
-			else users.setListData(new String[] {null}); // empty selection. the setListData mustn't be null :/
-		}
+			if(clients != null) 
+				users.setListData(clients);
+			else 
+				users.setListData(new String[] {""});
+		} else
+			java.awt.EventQueue.invokeLater(new Runnable(){
+				public void run() {
+					if(parameter instanceof String)
+						status.setText((String)parameter);
+					else if(parameter instanceof Exception) {
+						JOptionPane.showMessageDialog(null,
+								((Exception)parameter).getMessage(),
+							    L10n.getString("Error.ServerOperationFailed"),
+							    JOptionPane.ERROR_MESSAGE);
+					}
+				}
+			});
 	}
     
 }



From krater at berlios.de  Sat Jun  3 19:13:50 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sat, 3 Jun 2006 19:13:50 +0200
Subject: [Plantlore-dev] r429 - trunk/src/net/sf/plantlore/common
Message-ID: <200606031713.k53HDoWQ026948@sheep.berlios.de>

Author: krater
Date: 2006-06-03 19:13:39 +0200 (Sat, 03 Jun 2006)
New Revision: 429

Modified:
   trunk/src/net/sf/plantlore/common/DBLayerUtils.java
Log:
Remove the (now invalid) static main()

Modified: trunk/src/net/sf/plantlore/common/DBLayerUtils.java
===================================================================
--- trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-06-03 16:48:24 UTC (rev 428)
+++ trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-06-03 17:13:39 UTC (rev 429)
@@ -10,7 +10,6 @@
 package net.sf.plantlore.common;
 
 import java.rmi.RemoteException;
-import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.common.record.AuthorOccurrence;
 import net.sf.plantlore.common.record.Habitat;
 import net.sf.plantlore.common.record.Occurrence;
@@ -18,7 +17,6 @@
 import net.sf.plantlore.middleware.DBLayer;
 import net.sf.plantlore.middleware.SelectQuery;
 import net.sf.plantlore.common.exception.DBLayerException;
-import net.sf.plantlore.server.HibernateDBLayer;
 import org.apache.log4j.Logger;
 
 /** Class offering convenience methods for DBLayer.
@@ -98,14 +96,14 @@
         db.closeQuery(sq);
     }
     
-    public static void main(String[] args) throws DBLayerException, RemoteException {
-        DBLayer db = new HibernateDBLayer();
-        db.initialize("jdbc:firebirdsql:localhost/3050:/mnt/data/temp/plantloreHIBdataUTF.fdb","sysdba","masterkey");
-        DBLayerUtils dlu = new DBLayerUtils(db);
-        Author a = (Author)dlu.getObjectFor(1,Author.class);
-        System.out.println("class "+a.getWholeName());
-        Occurrence o = (Occurrence)dlu.getObjectFor(1,Occurrence.class);
-        System.out.println("nalez "+o.getPlant().getTaxon());
-    }
+//    public static void main(String[] args) throws DBLayerException, RemoteException {
+//        DBLayer db = new HibernateDBLayer();
+//        db.initialize("jdbc:firebirdsql:localhost/3050:/mnt/data/temp/plantloreHIBdataUTF.fdb","sysdba","masterkey");
+//        DBLayerUtils dlu = new DBLayerUtils(db);
+//        Author a = (Author)dlu.getObjectFor(1,Author.class);
+//        System.out.println("class "+a.getWholeName());
+//        Occurrence o = (Occurrence)dlu.getObjectFor(1,Occurrence.class);
+//        System.out.println("nalez "+o.getPlant().getTaxon());
+//    }
     
 }



From krater at berlios.de  Sat Jun  3 19:34:36 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sat, 3 Jun 2006 19:34:36 +0200
Subject: [Plantlore-dev] r430 - trunk/src/net/sf/plantlore/client/login
Message-ID: <200606031734.k53HYawV001337@sheep.berlios.de>

Author: krater
Date: 2006-06-03 19:34:34 +0200 (Sat, 03 Jun 2006)
New Revision: 430

Modified:
   trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
Log:
Non-empty field validator temporarily disabled (doesn't work properly).

Modified: trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-03 17:13:39 UTC (rev 429)
+++ trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-03 17:34:34 UTC (rev 430)
@@ -3,8 +3,9 @@
 import java.awt.event.ActionEvent;
 
 import javax.swing.AbstractAction;
-import javax.swing.event.ChangeEvent;
+import javax.swing.Action;
 
+
 import net.sf.plantlore.l10n.L10n;
 
 public class ItemCtrl {
@@ -37,7 +38,7 @@
 					view.setTitle(L10n.getString("Login.AddTitle"));
 					view.next.setText(L10n.getString("Login.Add"));
 					view.next.setToolTipText(L10n.getString("Login.AddTT"));
-					view.next.setEnabled(false);
+//					view.next.setEnabled(false);
 				}
 			});
 			break;
@@ -59,30 +60,36 @@
 		this.model = login; this.view = itemview;
 		view.next.setAction(new NextAction());
 		view.discard.setAction(new DiscardAction());
-		//view.next.addChangeListener();
+		
+//		Action validator = new ObligatoryItemsListener();
+//		view.alias.addActionListener(validator);
+//		((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).addActionListener(validator);
+//		view.databasePort.addActionListener(validator);
+//		view.databaseIdentifier.addActionListener(validator);
 	}
 	
 	
 	
-	class ObligatoryItemsListener implements javax.swing.event.ChangeListener {
-		public void stateChanged(ChangeEvent event) {
+	class ObligatoryItemsListener extends AbstractAction {
+		public void actionPerformed(ActionEvent arg0) {
 			boolean newState = 
 				view.alias.getText().length() > 0
 				&&
 				((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).getText().length() > 0
 				&&
 				view.databaseIdentifier.getText().length() > 0;
+				
+			System.out.println("@---------> "+newState);
+				
 			if(newState)
 				try {
-					if( Integer.parseInt(view.databasePort.getText()) < 1024 )
+					if( Integer.parseInt(view.databasePort.getText()) <= 0 )
 						newState = false;
 				} catch(Exception e) { 
 					newState = false; 
 				}
 			
-			boolean state = view.next.isEnabled();
-			
-			if( state != newState )
+			if( view.next.isEnabled() != newState )
 				view.next.setEnabled(newState);
 		}
 	}



From krater at berlios.de  Sat Jun  3 20:49:15 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sat, 3 Jun 2006 20:49:15 +0200
Subject: [Plantlore-dev] r431 - in trunk/src/net/sf/plantlore: client client/login middleware server/manager
Message-ID: <200606031849.k53InFdA024063@sheep.berlios.de>

Author: krater
Date: 2006-06-03 20:49:12 +0200 (Sat, 03 Jun 2006)
New Revision: 431

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/middleware/DBLayer.java
   trunk/src/net/sf/plantlore/server/manager/ServerMng.java
Log:
Minor bugfixes (testing server).

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-03 17:34:34 UTC (rev 430)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-03 18:49:12 UTC (rev 431)
@@ -416,7 +416,7 @@
                 JOptionPane.showMessageDialog(view, "Problem while saving configuration: "+ex.getMessage());
             }
             // Destroy the DBLayer
-            model.getDatabase().destroy();
+            //model.getDatabase().destroy();  --- takhle se to nesmi delat, musi ji znicit factory, ktera ji vyrobila
             System.exit(0);
         }
     }

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-03 17:34:34 UTC (rev 430)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-03 18:49:12 UTC (rev 431)
@@ -196,8 +196,9 @@
 		lastIndex = index;
 		
 		logger.debug("Selected database is " + selected);
-		this.setChanged(); 
-		this.notifyObservers( selected.clone() );
+		this.setChanged();
+		if(selected != null)
+			this.notifyObservers( selected.clone() );
 	}
 	
 	/**

Modified: trunk/src/net/sf/plantlore/middleware/DBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-03 17:34:34 UTC (rev 430)
+++ trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-03 18:49:12 UTC (rev 431)
@@ -186,6 +186,6 @@
                         
     public void shutdown() throws RemoteException;
     
-    public void destroy();
+    public void destroy() throws RemoteException;
         
 }

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMng.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-03 17:34:34 UTC (rev 430)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-03 18:49:12 UTC (rev 431)
@@ -92,7 +92,7 @@
             connections = (connectionsNumber == null) ? 16 : connectionsNumber.intValue(),
             perip = (peripNumber == null) ? 2 : peripNumber.intValue()*/;
             
-            Node database = (Node)server.selectSingleNode("/database");
+            Node database = (Node)server.selectSingleNode("database");
             
             String databaseType = database.valueOf("engine"),
             databaseParameter = database.valueOf("parameter"),
@@ -108,6 +108,9 @@
             
 		} catch(Exception e) {
 			logger.error("Settings could not be loaded. " + e.getMessage());
+			
+			e.printStackTrace();
+			
 			setChanged();
 			notifyObservers(L10n.getString("Server.SettingsNotLoaded"));
 		}



From fraktalek at berlios.de  Sun Jun  4 00:33:47 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Sun, 4 Jun 2006 00:33:47 +0200
Subject: [Plantlore-dev] r432 - in trunk/src/net/sf/plantlore: client l10n
Message-ID: <200606032233.k53MXl7t011644@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-04 00:33:40 +0200 (Sun, 04 Jun 2006)
New Revision: 432

Added:
   trunk/src/net/sf/plantlore/client/Detail.java
   trunk/src/net/sf/plantlore/client/DetailCtrl.java
   trunk/src/net/sf/plantlore/client/DetailView.form
   trunk/src/net/sf/plantlore/client/DetailView.java
Modified:
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/AppCoreView.form
   trunk/src/net/sf/plantlore/client/AppCoreView.java
   trunk/src/net/sf/plantlore/client/OverviewTableModel.java
   trunk/src/net/sf/plantlore/client/TableSorter.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
Implemented detail in overview. Has a bug - if you press enter on the last result to show the detail it skips back one page and displays detail of the last result on that page. I do not intend to correct that now.



Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -214,33 +214,19 @@
         }
     }
 
-    public void nextPage() {
+    public void nextPage() throws DBLayerException, RemoteException {
         if (tableSorter != null)
         {
-            //FIXME:
-            try {
-                tableSorter.nextPage();
-            } catch (RemoteException ex) {
-                ex.printStackTrace();
-            } catch (DBLayerException ex) {
-                ex.printStackTrace();
-            }
+            tableSorter.nextPage();
             setChanged();
             notifyObservers("PAGE_CHANGED");        
         }
     }
     
-    public void prevPage() {
+    public void prevPage() throws DBLayerException, RemoteException {
         if (tableSorter != null)
         {
-            //FIXME:
-            try {
-                tableSorter.prevPage();
-            } catch (RemoteException ex) {
-                ex.printStackTrace();
-            } catch (DBLayerException ex) {
-                ex.printStackTrace();
-            }
+            tableSorter.prevPage();
             setChanged();
             notifyObservers("PAGE_CHANGED");
         }
@@ -286,6 +272,23 @@
         logger.debug("Selected row #"+i);
     }
     
+    public void selectAndShow(int resultNumber) throws DBLayerException, RemoteException {
+        System.out.println("selectAndShow resultNumber = "+resultNumber);
+        if (resultNumber < 0 || resultNumber > getResultsCount()) {
+            throw new IllegalArgumentException("Result number "+resultNumber+" doesn't exist.");
+        }
+        if (resultNumber >= getRecordsPerPage()*getCurrentPage()) { //resultNumber is greater than the last resultNumber on current page
+            nextPage();
+        } 
+        if (resultNumber < (getRecordsPerPage()*(getCurrentPage()-1))){ //resultNumber is less than the first resultNumber on current page
+            prevPage();
+        }
+        
+        selectedRow = resultNumber % getRecordsPerPage();
+        setChanged();
+        notifyObservers("SELECTION_CHANGED");
+    }
+    
     public int getSelectedRowNumber()
     {
         return selectedRow;
@@ -302,6 +305,17 @@
         return tableSorter.getOccurrenceId(selectedRow);
     }
     
+    public Integer getSelectedResultNumber() {
+        return tableSorter.getResultNumber(selectedRow);
+    }
+    
+    public Integer getOccurrence(int i) throws DBLayerException, RemoteException {
+        if (i < 0 || i > getResultsCount())
+            throw new IllegalArgumentException(""+i);
+        
+        return tableSorter.getOccurrence(i);
+    }
+    
     public void savePreferences() throws IOException {
         logger.info("Saving main window preferences.");
         prefs.putInt("recordsPerPage", recordsPerPage);

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -190,6 +190,11 @@
     // Immutable Table Import
     TableImportMng tableImportModel;
     TableImportMngCtrl tableImportCtrl;
+    
+    //Detail
+    Detail detailModel;
+    DetailView detailView;
+    DetailCtrl detailCtrl;
 
     //Bridges
     ManagerBridge managerBridge = new ManagerBridge();
@@ -302,6 +307,11 @@
         searchView.setTitle(L10n.getString("Search.DialogTitle"));
         searchCtrl = new SearchCtrl(searchModel, searchView);
         searchModel.addObserver(new SearchBridge());
+        
+        //--- Detail ---
+        detailModel = new Detail(model);
+        detailView = new DetailView(detailModel, view, true);
+        detailCtrl = new DetailCtrl(detailModel, detailView);        
     }
     
     private void setDatabaseDependentCommandsEnabled(boolean enabled) {
@@ -828,7 +838,15 @@
         } 
 
         public void actionPerformed(ActionEvent actionEvent) {
-            model.prevPage();
+            try {
+                model.prevPage();
+            } catch (RemoteException ex) {
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+            } catch (DBLayerException ex) {
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+            }
         }
     }
     
@@ -840,7 +858,15 @@
         } 
 
         public void actionPerformed(ActionEvent actionEvent) {
-            model.nextPage();
+            try {
+                model.nextPage();
+            } catch (RemoteException ex) {
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+            } catch (DBLayerException ex) {
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+            }
         }
     }
 
@@ -1037,8 +1063,19 @@
             if (e.getKeyText(e.getKeyChar()).equals("Space"))
                 model.invertSelectedOnCurrentRow();
             if (e.getKeyText(e.getKeyChar()).equals("Enter")) {
-                JOptionPane.showMessageDialog(view,"Detail of #"+model.getSelectedRowNumber());
-                e.consume();
+                try {
+                    int resultNumber = model.getSelectedResultNumber();
+                    if (resultNumber != model.getResultsCount())
+                        model.selectAndShow(resultNumber - 1);//After Enter the hyperactive JTable moves selection to next row, so we need to correct that
+                    detailModel.load(model.getSelectedResultNumber());
+                    detailView.setVisible(true);
+                } catch (RemoteException ex) {  
+                    JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+                    ex.printStackTrace();
+                } catch (DBLayerException ex) {
+                    JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+                    ex.printStackTrace();
+                }
             }
         }
 
@@ -1138,6 +1175,7 @@
                         addModel.setDatabase(dblayer);
                         editModel.setDatabase(dblayer);
                         searchModel.setDatabase(dblayer);
+                        detailModel.setDatabase(dblayer);
     			
                         model.setAccessRights( loginModel.getAccessRights() );
                         model.login();

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-06-03 22:33:40 UTC (rev 432)
@@ -474,7 +474,7 @@
         </DimensionLayout>
         <DimensionLayout dim="1">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="overviewScrollPane" alignment="1" pref="424" max="32767" attributes="0"/>
+              <Component id="overviewScrollPane" alignment="1" pref="388" max="32767" attributes="0"/>
           </Group>
         </DimensionLayout>
       </Layout>

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -14,6 +14,7 @@
 import java.util.prefs.Preferences;
 import javax.swing.AbstractAction;
 import javax.swing.Action;
+import javax.swing.ListSelectionModel;
 import javax.swing.event.ListSelectionListener;
 import javax.swing.table.TableColumn;
 import net.sf.plantlore.common.StatusBarManager;
@@ -430,6 +431,9 @@
                 overview.setVisible(false);
                 overview.setEnabled(false);
             }
+            if (arg.equals("SELECTION_CHANGED")) {
+                overview.getSelectionModel().setSelectionInterval(model.getSelectedRowNumber(),model.getSelectedRowNumber());
+            }
         }        
     }
 
@@ -451,6 +455,7 @@
         //FIXME: what if otm == null ????????????
         overview.setModel(tableSorter);
         tableSorter.setTableHeader(overview.getTableHeader());
+        overview.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
         
         // Comment to established db connection automatically without the login procedure        
         //overviewScrollPane.setPreferredSize(new Dimension(800, (otm.getRowCount()+1)*19));

Added: trunk/src/net/sf/plantlore/client/Detail.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Detail.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/Detail.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -0,0 +1,248 @@
+/*
+ * Detail.java
+ *
+ * Created on 2. ?erven 2006, 12:54
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.client;
+
+import java.rmi.RemoteException;
+import java.util.Date;
+import java.util.Observable;
+import javax.swing.table.AbstractTableModel;
+import net.sf.plantlore.common.PlantloreConstants;
+import net.sf.plantlore.common.exception.DBLayerException;
+import net.sf.plantlore.common.record.Author;
+import net.sf.plantlore.common.record.AuthorOccurrence;
+import net.sf.plantlore.common.record.Habitat;
+import net.sf.plantlore.common.record.Metadata;
+import net.sf.plantlore.common.record.Occurrence;
+import net.sf.plantlore.common.record.Phytochorion;
+import net.sf.plantlore.common.record.Plant;
+import net.sf.plantlore.common.record.Publication;
+import net.sf.plantlore.common.record.Territory;
+import net.sf.plantlore.common.record.User;
+import net.sf.plantlore.common.record.Village;
+import net.sf.plantlore.l10n.L10n;
+import net.sf.plantlore.middleware.DBLayer;
+import net.sf.plantlore.middleware.SelectQuery;
+import org.apache.log4j.Logger;
+
+/**
+ *
+ * @author fraktalek
+ */
+public class Detail extends Observable {
+    private Logger logger =  Logger.getLogger(Detail.class.getPackage().getName());
+    private AppCore appCore;
+    private DBLayer database;
+    private int currentResult;
+    String taxon;
+    Integer year;
+    Integer day;
+    Integer month;
+    Date time;
+    String project;
+    String placeDescription;
+    String occNote;
+    String habNote;
+    String territory;
+    String phytName;
+    String phytCode;
+    String village;
+    String country;
+    String quadrant;
+    Double altitude;
+    Double latitude;
+    Double longitude;
+    String herbarium;
+    String source;
+    String createdWho;
+    Date createdWhen;
+    String updatedWho;
+    Date updatedWhen;
+    String publication;
+    DetailTableModel detailTableModel;
+    
+    
+    /** Creates a new instance of Detail */
+    public Detail(AppCore appCore) {
+        this.appCore = appCore;
+    }
+    
+    
+    public void load(int result) throws DBLayerException, RemoteException {
+        this.currentResult = result;
+        Integer occurrenceId = appCore.getOccurrence(result);
+        logger.debug("Detail model: loading data for occurrence id "+occurrenceId);
+        SelectQuery sq = null;
+        
+        sq = database.createQuery(Occurrence.class);
+        sq.createAlias(Occurrence.HABITAT,"habitat");
+        sq.createAlias(Occurrence.PLANT,"plant");
+        // Add publications using LEFT OUTER JOIN - so that occurrences without a publication are displayed as well
+        sq.createAlias(Occurrence.PUBLICATION,"publication", PlantloreConstants.LEFT_OUTER_JOIN);
+        sq.createAlias(Occurrence.METADATA,"metadata");
+        sq.createAlias("habitat."+Habitat.PHYTOCHORION,"phyt");
+        sq.createAlias("habitat."+Habitat.NEARESTVILLAGE,"vill");
+        sq.createAlias("habitat."+Habitat.TERRITORY,"territory");
+        // Add subquery to the query. Compare authoroccurrence.authorid with the result of a subquery (LEALL: <= all(...))
+        sq.addRestriction(PlantloreConstants.RESTR_EQ, Occurrence.ID, null, occurrenceId, null);
+        
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.DATASOURCE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.HERBARIUM);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.TIMECOLLECTED);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.DAYCOLLECTED);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.MONTHCOLLECTED);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.YEARCOLLECTED);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.NOTE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.CREATEDWHO);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.CREATEDWHEN);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.UPDATEDWHO);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Occurrence.UPDATEDWHEN);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.ALTITUDE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.LATITUDE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.LONGITUDE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.COUNTRY);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.DESCRIPTION);                    
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.NOTE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"habitat."+Habitat.QUADRANT);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"vill."+Village.NAME);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"metadata."+Metadata.DATASETTITLE);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"phyt."+Phytochorion.CODE);                    
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"phyt."+Phytochorion.NAME);                    
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"plant."+Plant.TAXON);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"publication."+Publication.REFERENCECITATION);
+        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"territory."+Territory.NAME);
+        
+        int resultId = database.executeQuery(sq);
+        int resultsCount = database.getNumRows(resultId);
+        if (resultsCount == 0) {
+            logger.error("Detail: occurrence "+occurrenceId+" has no record in the database.");
+            throw new DBLayerException("The occurrence you selected is no longer in the database.");
+        }
+        assert resultsCount == 1;
+        
+        Object[] records = database.more(resultId, 0, resultsCount - 1);
+        Object[] pa = (Object[]) records[0];
+        source = (String)pa[0];
+        herbarium = (String)pa[1];
+        time = (Date)pa[2];
+        day = (Integer)pa[3];
+        month = (Integer)pa[4];
+        year = (Integer)pa[5];
+        occNote = (String)pa[6];
+        createdWho = ((User)pa[7]).getWholeName();
+        createdWhen= (Date)pa[8];
+        updatedWho = ((User)pa[9]).getWholeName();
+        updatedWhen = (Date)pa[10];
+        altitude= (Double)pa[11];
+        latitude = (Double)pa[12];
+        longitude = (Double)pa[13];
+        country = (String)pa[14];
+        placeDescription = (String)pa[15];
+        quadrant = (String)pa[16];
+        habNote = (String)pa[17];
+        village = (String)pa[18];
+        project = (String)pa[19];
+        phytCode = (String)pa[20];
+        phytName = (String)pa[21];
+        taxon = (String)pa[22];
+        publication = (String)pa[23];
+        territory = (String)pa[24];
+        
+        detailTableModel = new DetailTableModel(occurrenceId);
+        setChanged();
+        notifyObservers("NEW_DETAIL_LOADED");
+    }
+        
+    
+    public void setDatabase(DBLayer db) {
+        this.database = db;
+        logger.debug("Detail model - database set.");
+    }
+    
+    public void next() throws DBLayerException, RemoteException {
+        if (appCore.getResultsCount() <= currentResult+1)
+            return;
+        currentResult++;
+        load(currentResult);
+        appCore.selectAndShow(currentResult);
+    }
+    
+    public void prev() throws DBLayerException, RemoteException {
+        if (currentResult <=0)
+            return;
+        currentResult--;
+        load(currentResult);
+        appCore.selectAndShow(currentResult);
+    }
+    
+    class DetailTableModel extends AbstractTableModel {
+        Object[][] data;
+        
+        public DetailTableModel(int occurrenceId) throws DBLayerException, RemoteException {
+            SelectQuery sq;
+            //-- LOAD AUTHORS of the occurrence
+            sq = database.createQuery(AuthorOccurrence.class);
+            sq.createAlias(AuthorOccurrence.AUTHOR,"author");
+            sq.createAlias(AuthorOccurrence.OCCURRENCE,"occ");
+    //        sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"occ."+Occurrence.ID);        
+            sq.addRestriction(PlantloreConstants.RESTR_EQ,"occ."+Occurrence.ID,null,occurrenceId,null);
+            sq.addRestriction(PlantloreConstants.RESTR_EQ,AuthorOccurrence.DELETED,null,0,null);//only live authors
+            sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"author."+Author.WHOLENAME);
+            sq.addProjection(PlantloreConstants.PROJ_PROPERTY,AuthorOccurrence.ROLE);
+            sq.addProjection(PlantloreConstants.PROJ_PROPERTY,AuthorOccurrence.NOTE);
+
+            int resultId = database.executeQuery(sq);
+            int resultsCount = database.getNumRows(resultId);
+            if (resultsCount == 0) {
+                logger.error("Detail: occurrence "+occurrenceId+" has no live authors in the database.");
+                throw new DBLayerException("The occurrence has no authors in the database.");
+            }        
+            assert resultsCount > 0;
+            data = new Object[resultsCount][];
+            Object[] records = database.more(resultId, 0, resultsCount - 1);
+            for (int i=0; i < resultsCount ; i++) {
+                Object[] pa = (Object[]) records[i];
+                String[] row = new String[3];
+                row[0] = (String) pa[0];
+                row[1] = (String) pa[1];
+                row[2] = (String) pa[2];
+                data[i] = row;
+            }                        
+        }
+        public int getRowCount() {
+            if (data != null)
+                return data.length;
+            else
+                return 0;
+        }
+
+        public int getColumnCount() {
+            return 3;
+        }
+
+        public Object getValueAt(int row, int col) {
+            return data[row][col];
+        }        
+        public String getColumnName(int col) {
+            switch (col) {
+                case 0:
+                    return L10n.getString("AddEdit.NameColumn");
+                case 1:
+                    return L10n.getString("AddEdit.RoleColumn");
+                case 2:
+                    return "";
+                case 3:
+                    return L10n.getString("AddEdit.RevisionColumn");
+                default:
+                    return "";
+            }
+        }        
+    }
+}
+

Added: trunk/src/net/sf/plantlore/client/DetailCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/DetailCtrl.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/DetailCtrl.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -0,0 +1,77 @@
+/*
+ * DetailCtrl.java
+ *
+ * Created on 2. ?erven 2006, 12:54
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.client;
+
+import java.awt.event.ActionEvent;
+import java.rmi.RemoteException;
+import javax.swing.AbstractAction;
+import javax.swing.JOptionPane;
+import net.sf.plantlore.common.exception.DBLayerException;
+import net.sf.plantlore.l10n.L10n;
+import org.apache.log4j.Logger;
+
+/**
+ *
+ * @author fraktalek
+ */
+public class DetailCtrl {
+    private Logger logger = Logger.getLogger(DetailCtrl.class.getPackage().getName());
+    Detail model;
+    DetailView view;
+            
+    /** Creates a new instance of DetailCtrl */
+    public DetailCtrl(Detail model, DetailView view) {
+        this.model = model;
+        this.view = view;
+                
+        view.prevButton.setAction(new PrevAction());
+        view.nextButton.setAction(new NextAction());
+    }
+    
+    class NextAction extends AbstractAction {
+        public NextAction() {
+            putValue(AbstractAction.NAME,L10n.getString("Common.Next"));
+            putValue(AbstractAction.SHORT_DESCRIPTION,L10n.getString("Detail.NextTT"));
+        }
+        public void actionPerformed(ActionEvent e) {
+            logger.debug("Next detail.");
+            try {
+                model.next();
+            } catch (DBLayerException ex) {
+                JOptionPane.showMessageDialog(view,"Database problem: "+ex);
+                ex.printStackTrace();
+            } catch (RemoteException ex) {
+                JOptionPane.showMessageDialog(view,"Remote connection problem: "+ex);
+                ex.printStackTrace();
+            }
+        }
+        
+    }
+    
+    class PrevAction extends AbstractAction {
+        public PrevAction() {
+            putValue(AbstractAction.NAME,L10n.getString("Common.Prev"));
+            putValue(AbstractAction.SHORT_DESCRIPTION,L10n.getString("Detail.PrevTT"));
+        }
+        public void actionPerformed(ActionEvent e) {
+            logger.debug("Prev detail.");
+            try {
+                model.prev();
+            } catch (DBLayerException ex) {
+                JOptionPane.showMessageDialog(view,"Database problem: "+ex);
+                ex.printStackTrace();
+            } catch (RemoteException ex) {
+                JOptionPane.showMessageDialog(view,"Remote connection problem: "+ex);
+                ex.printStackTrace();
+            }
+        }
+        
+    }
+}

Added: trunk/src/net/sf/plantlore/client/DetailView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/DetailView.form	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/DetailView.form	2006-06-03 22:33:40 UTC (rev 432)
@@ -0,0 +1,498 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.3" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
+  <Properties>
+    <Property name="defaultCloseOperation" type="int" value="2"/>
+  </Properties>
+  <SyntheticProperties>
+    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
+  </SyntheticProperties>
+  <AuxValues>
+    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
+    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
+    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
+  </AuxValues>
+
+  <Layout>
+    <DimensionLayout dim="0">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Group type="102" attributes="0">
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="jScrollPane1" alignment="1" pref="667" max="32767" attributes="0"/>
+                  <Component id="jPanel1" alignment="0" min="-2" max="-2" attributes="0"/>
+                  <Group type="102" alignment="0" attributes="0">
+                      <Component id="taxonLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="577" max="32767" attributes="0"/>
+                      <Component id="projectLabel" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="sourceLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="577" max="32767" attributes="0"/>
+                      <Component id="herbariumLabel" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <Component id="jPanel4" alignment="1" max="32767" attributes="0"/>
+                  <Group type="102" alignment="0" attributes="0">
+                      <Component id="prevButton" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jPanel3" max="32767" attributes="0"/>
+                  </Group>
+                  <Component id="jPanel2" alignment="0" max="32767" attributes="0"/>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+          </Group>
+      </Group>
+    </DimensionLayout>
+    <DimensionLayout dim="1">
+      <Group type="103" groupAlignment="0" attributes="0">
+          <Group type="102" alignment="0" attributes="0">
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="taxonLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="projectLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="herbariumLabel" min="-2" max="-2" attributes="0"/>
+                  <Component id="sourceLabel" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace min="-2" pref="14" max="-2" attributes="0"/>
+              <Component id="jScrollPane1" min="-2" pref="85" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+              <Component id="jPanel4" min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="jPanel3" min="-2" max="-2" attributes="0"/>
+                  <Component id="prevButton" min="-2" max="-2" attributes="0"/>
+              </Group>
+              <EmptySpace max="32767" attributes="0"/>
+          </Group>
+      </Group>
+    </DimensionLayout>
+  </Layout>
+  <SubComponents>
+    <Container class="javax.swing.JPanel" name="jPanel1">
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+    </Container>
+    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+      <AuxValues>
+        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+      </AuxValues>
+
+      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+      <SubComponents>
+        <Component class="javax.swing.JTable" name="authorTable">
+          <Properties>
+            <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.editors2.TableModelEditor">
+              <Table columnCount="3" rowCount="1">
+                <Column editable="true" title="Title 1" type="java.lang.Object"/>
+                <Column editable="true" title="Title 2" type="java.lang.Object"/>
+                <Column editable="true" title="Title 3" type="java.lang.Object"/>
+              </Table>
+            </Property>
+          </Properties>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JLabel" name="taxonLabel">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jLabel1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JLabel" name="projectLabel">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jLabel1"/>
+      </Properties>
+    </Component>
+    <Container class="javax.swing.JPanel" name="jPanel2">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+            <TitledBorder/>
+          </Border>
+        </Property>
+      </Properties>
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="1" attributes="0">
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Component id="jPanel5" max="32767" attributes="0"/>
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Component id="jPanel6" min="-2" max="-2" attributes="0"/>
+                  <EmptySpace max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="0" attributes="0">
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Component id="jPanel5" alignment="1" max="32767" attributes="0"/>
+                      <Component id="jPanel6" alignment="1" max="32767" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+      <SubComponents>
+        <Container class="javax.swing.JPanel" name="jPanel5">
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Component id="dateLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="altitudeLabel" min="-2" max="-2" attributes="0"/>
+                          <Component id="latitudeLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="longitudeLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="countryLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="territoryLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="quadrantLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="phytLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="villageLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                      </Group>
+                      <EmptySpace pref="323" max="32767" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="1" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="territoryLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="quadrantLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="phytLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="villageLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="countryLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="altitudeLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="latitudeLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="longitudeLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="120" max="32767" attributes="0"/>
+                      <Component id="dateLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Component class="javax.swing.JLabel" name="territoryLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="quadrantLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="phytLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="villageLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="countryLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="altitudeLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="latitudeLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="longitudeLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel2"/>
+              </Properties>
+            </Component>
+            <Component class="javax.swing.JLabel" name="dateLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="jLabel1"/>
+              </Properties>
+            </Component>
+          </SubComponents>
+        </Container>
+        <Container class="javax.swing.JPanel" name="jPanel6">
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="1" attributes="0">
+                      <EmptySpace max="32767" attributes="0"/>
+                      <Group type="103" groupAlignment="0" attributes="0">
+                          <Group type="103" alignment="1" groupAlignment="0" attributes="0">
+                              <Component id="habAreaLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                              <Component id="jScrollPane4" alignment="0" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="103" alignment="1" groupAlignment="0" attributes="0">
+                              <Component id="descAreaLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                              <Component id="jScrollPane2" alignment="0" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="103" alignment="1" groupAlignment="0" attributes="0">
+                              <Component id="occAreaLabel" alignment="0" min="-2" max="-2" attributes="0"/>
+                              <Component id="jScrollPane3" alignment="0" min="-2" max="-2" attributes="0"/>
+                          </Group>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="1" attributes="0">
+                      <EmptySpace max="32767" attributes="0"/>
+                      <Component id="descAreaLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jScrollPane2" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="occAreaLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jScrollPane3" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="habAreaLabel" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jScrollPane4" min="-2" max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Component class="javax.swing.JLabel" name="habAreaLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+                  <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Detail.HabNoteTitle" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </Property>
+              </Properties>
+            </Component>
+            <Container class="javax.swing.JScrollPane" name="jScrollPane4">
+              <AuxValues>
+                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+              </AuxValues>
+
+              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+              <SubComponents>
+                <Component class="javax.swing.JTextArea" name="habNoteArea">
+                  <Properties>
+                    <Property name="columns" type="int" value="20"/>
+                    <Property name="editable" type="boolean" value="false"/>
+                    <Property name="lineWrap" type="boolean" value="true"/>
+                    <Property name="rows" type="int" value="5"/>
+                    <Property name="wrapStyleWord" type="boolean" value="true"/>
+                  </Properties>
+                </Component>
+              </SubComponents>
+            </Container>
+            <Component class="javax.swing.JLabel" name="descAreaLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+                  <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Detail.PlaceDescriptionTitle" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </Property>
+              </Properties>
+            </Component>
+            <Container class="javax.swing.JScrollPane" name="jScrollPane2">
+              <AuxValues>
+                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+              </AuxValues>
+
+              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+              <SubComponents>
+                <Component class="javax.swing.JTextArea" name="placeDescArea">
+                  <Properties>
+                    <Property name="columns" type="int" value="20"/>
+                    <Property name="editable" type="boolean" value="false"/>
+                    <Property name="lineWrap" type="boolean" value="true"/>
+                    <Property name="rows" type="int" value="5"/>
+                    <Property name="wrapStyleWord" type="boolean" value="true"/>
+                  </Properties>
+                </Component>
+              </SubComponents>
+            </Container>
+            <Component class="javax.swing.JLabel" name="occAreaLabel">
+              <Properties>
+                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+                  <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Detail.OccNoteTitle" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </Property>
+              </Properties>
+            </Component>
+            <Container class="javax.swing.JScrollPane" name="jScrollPane3">
+              <AuxValues>
+                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
+              </AuxValues>
+
+              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+              <SubComponents>
+                <Component class="javax.swing.JTextArea" name="occNoteArea">
+                  <Properties>
+                    <Property name="columns" type="int" value="20"/>
+                    <Property name="editable" type="boolean" value="false"/>
+                    <Property name="lineWrap" type="boolean" value="true"/>
+                    <Property name="rows" type="int" value="5"/>
+                    <Property name="wrapStyleWord" type="boolean" value="true"/>
+                  </Properties>
+                </Component>
+              </SubComponents>
+            </Container>
+          </SubComponents>
+        </Container>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JLabel" name="herbariumLabel">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jLabel1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JLabel" name="sourceLabel">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jLabel1"/>
+      </Properties>
+    </Component>
+    <Container class="javax.swing.JPanel" name="jPanel3">
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="1" attributes="0">
+                  <EmptySpace pref="485" max="32767" attributes="0"/>
+                  <Component id="nextButton" linkSize="1" min="-2" max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Component id="nextButton" alignment="0" min="-2" max="-2" attributes="0"/>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+      <SubComponents>
+        <Component class="javax.swing.JButton" name="nextButton">
+          <Properties>
+            <Property name="text" type="java.lang.String" value="jButton2"/>
+          </Properties>
+          <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+          </AuxValues>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Container class="javax.swing.JPanel" name="jPanel4">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+            <TitledBorder/>
+          </Border>
+        </Property>
+      </Properties>
+
+      <Layout>
+        <DimensionLayout dim="0">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" attributes="0">
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Group type="102" alignment="0" attributes="0">
+                          <Component id="createdWhoLabel" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace pref="543" max="32767" attributes="0"/>
+                          <Component id="createdWhenLabel" min="-2" max="-2" attributes="0"/>
+                      </Group>
+                      <Group type="102" alignment="0" attributes="0">
+                          <Component id="updatedWhoLabel" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace pref="543" max="32767" attributes="0"/>
+                          <Component id="updatedWhenLabel" min="-2" max="-2" attributes="0"/>
+                      </Group>
+                  </Group>
+                  <EmptySpace max="-2" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+        <DimensionLayout dim="1">
+          <Group type="103" groupAlignment="0" attributes="0">
+              <Group type="102" alignment="0" attributes="0">
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="createdWhoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="createdWhenLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="-2" attributes="0"/>
+                  <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="updatedWhoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                      <Component id="updatedWhenLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <EmptySpace max="32767" attributes="0"/>
+              </Group>
+          </Group>
+        </DimensionLayout>
+      </Layout>
+      <SubComponents>
+        <Component class="javax.swing.JLabel" name="createdWhoLabel">
+          <Properties>
+            <Property name="text" type="java.lang.String" value="jLabel1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JLabel" name="createdWhenLabel">
+          <Properties>
+            <Property name="text" type="java.lang.String" value="jLabel1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JLabel" name="updatedWhoLabel">
+          <Properties>
+            <Property name="text" type="java.lang.String" value="jLabel1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JLabel" name="updatedWhenLabel">
+          <Properties>
+            <Property name="text" type="java.lang.String" value="jLabel1"/>
+          </Properties>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JButton" name="prevButton">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton1"/>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
+  </SubComponents>
+</Form>

Added: trunk/src/net/sf/plantlore/client/DetailView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/DetailView.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/DetailView.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -0,0 +1,484 @@
+/*
+ * DetailView.java
+ *
+ * Created on 2. ?erven 2006, 12:25
+ */
+
+package net.sf.plantlore.client;
+
+import java.text.DateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Observable;
+import java.util.Observer;
+import net.sf.plantlore.l10n.L10n;
+import org.apache.log4j.Logger;
+
+/**
+ *
+ * @author  fraktalek
+ */
+public class DetailView extends javax.swing.JDialog implements Observer {
+    private Logger logger = Logger.getLogger(DetailView.class.getPackage().getName());
+    private Detail model;
+    private final static String EMPTY = "-";
+    
+    /** Creates new form DetailView */
+    public DetailView(Detail model, java.awt.Frame parent, boolean modal) {
+        super(parent, modal);
+        this.model = model;
+        model.addObserver(this);
+        initComponents();
+    }
+    
+    /** This method is called from within the constructor to
+     * initialize the form.
+     * WARNING: Do NOT modify this code. The content of this method is
+     * always regenerated by the Form Editor.
+     */
+    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
+    private void initComponents() {
+        jPanel1 = new javax.swing.JPanel();
+        jScrollPane1 = new javax.swing.JScrollPane();
+        authorTable = new javax.swing.JTable();
+        taxonLabel = new javax.swing.JLabel();
+        projectLabel = new javax.swing.JLabel();
+        jPanel2 = new javax.swing.JPanel();
+        jPanel5 = new javax.swing.JPanel();
+        territoryLabel = new javax.swing.JLabel();
+        quadrantLabel = new javax.swing.JLabel();
+        phytLabel = new javax.swing.JLabel();
+        villageLabel = new javax.swing.JLabel();
+        countryLabel = new javax.swing.JLabel();
+        altitudeLabel = new javax.swing.JLabel();
+        latitudeLabel = new javax.swing.JLabel();
+        longitudeLabel = new javax.swing.JLabel();
+        dateLabel = new javax.swing.JLabel();
+        jPanel6 = new javax.swing.JPanel();
+        habAreaLabel = new javax.swing.JLabel();
+        jScrollPane4 = new javax.swing.JScrollPane();
+        habNoteArea = new javax.swing.JTextArea();
+        descAreaLabel = new javax.swing.JLabel();
+        jScrollPane2 = new javax.swing.JScrollPane();
+        placeDescArea = new javax.swing.JTextArea();
+        occAreaLabel = new javax.swing.JLabel();
+        jScrollPane3 = new javax.swing.JScrollPane();
+        occNoteArea = new javax.swing.JTextArea();
+        herbariumLabel = new javax.swing.JLabel();
+        sourceLabel = new javax.swing.JLabel();
+        jPanel3 = new javax.swing.JPanel();
+        nextButton = new javax.swing.JButton();
+        jPanel4 = new javax.swing.JPanel();
+        createdWhoLabel = new javax.swing.JLabel();
+        createdWhenLabel = new javax.swing.JLabel();
+        updatedWhoLabel = new javax.swing.JLabel();
+        updatedWhenLabel = new javax.swing.JLabel();
+        prevButton = new javax.swing.JButton();
+
+        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
+        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
+        jPanel1.setLayout(jPanel1Layout);
+        jPanel1Layout.setHorizontalGroup(
+            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(0, 0, Short.MAX_VALUE)
+        );
+        jPanel1Layout.setVerticalGroup(
+            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(0, 0, Short.MAX_VALUE)
+        );
+
+        authorTable.setModel(new javax.swing.table.DefaultTableModel(
+            new Object [][] {
+                {null, null, null}
+            },
+            new String [] {
+                "Title 1", "Title 2", "Title 3"
+            }
+        ));
+        jScrollPane1.setViewportView(authorTable);
+
+        taxonLabel.setText("jLabel1");
+
+        projectLabel.setText("jLabel1");
+
+        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
+        territoryLabel.setText("jLabel1");
+
+        quadrantLabel.setText("jLabel1");
+
+        phytLabel.setText("jLabel1");
+
+        villageLabel.setText("jLabel1");
+
+        countryLabel.setText("jLabel1");
+
+        altitudeLabel.setText("jLabel1");
+
+        latitudeLabel.setText("jLabel1");
+
+        longitudeLabel.setText("jLabel2");
+
+        dateLabel.setText("jLabel1");
+
+        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
+        jPanel5.setLayout(jPanel5Layout);
+        jPanel5Layout.setHorizontalGroup(
+            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel5Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(dateLabel)
+                    .add(altitudeLabel)
+                    .add(latitudeLabel)
+                    .add(longitudeLabel)
+                    .add(countryLabel)
+                    .add(territoryLabel)
+                    .add(quadrantLabel)
+                    .add(phytLabel)
+                    .add(villageLabel))
+                .addContainerGap(323, Short.MAX_VALUE))
+        );
+        jPanel5Layout.setVerticalGroup(
+            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(territoryLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(quadrantLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(phytLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(villageLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(countryLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(altitudeLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(latitudeLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(longitudeLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 120, Short.MAX_VALUE)
+                .add(dateLabel)
+                .addContainerGap())
+        );
+
+        habAreaLabel.setText(L10n.getString("Detail.HabNoteTitle"));
+
+        habNoteArea.setColumns(20);
+        habNoteArea.setEditable(false);
+        habNoteArea.setLineWrap(true);
+        habNoteArea.setRows(5);
+        habNoteArea.setWrapStyleWord(true);
+        jScrollPane4.setViewportView(habNoteArea);
+
+        descAreaLabel.setText(L10n.getString("Detail.PlaceDescriptionTitle"));
+
+        placeDescArea.setColumns(20);
+        placeDescArea.setEditable(false);
+        placeDescArea.setLineWrap(true);
+        placeDescArea.setRows(5);
+        placeDescArea.setWrapStyleWord(true);
+        jScrollPane2.setViewportView(placeDescArea);
+
+        occAreaLabel.setText(L10n.getString("Detail.OccNoteTitle"));
+
+        occNoteArea.setColumns(20);
+        occNoteArea.setEditable(false);
+        occNoteArea.setLineWrap(true);
+        occNoteArea.setRows(5);
+        occNoteArea.setWrapStyleWord(true);
+        jScrollPane3.setViewportView(occNoteArea);
+
+        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
+        jPanel6.setLayout(jPanel6Layout);
+        jPanel6Layout.setHorizontalGroup(
+            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                        .add(habAreaLabel)
+                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                        .add(descAreaLabel)
+                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                        .add(occAreaLabel)
+                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
+                .addContainerGap())
+        );
+        jPanel6Layout.setVerticalGroup(
+            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(descAreaLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(occAreaLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(habAreaLabel)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+        );
+
+        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
+        jPanel2.setLayout(jPanel2Layout);
+        jPanel2Layout.setHorizontalGroup(
+            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addContainerGap())
+        );
+        jPanel2Layout.setVerticalGroup(
+            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel2Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .addContainerGap())
+        );
+
+        herbariumLabel.setText("jLabel1");
+
+        sourceLabel.setText("jLabel1");
+
+        nextButton.setText("jButton2");
+
+        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
+        jPanel3.setLayout(jPanel3Layout);
+        jPanel3Layout.setHorizontalGroup(
+            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
+                .addContainerGap(485, Short.MAX_VALUE)
+                .add(nextButton))
+        );
+        jPanel3Layout.setVerticalGroup(
+            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(nextButton)
+        );
+
+        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
+        createdWhoLabel.setText("jLabel1");
+
+        createdWhenLabel.setText("jLabel1");
+
+        updatedWhoLabel.setText("jLabel1");
+
+        updatedWhenLabel.setText("jLabel1");
+
+        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
+        jPanel4.setLayout(jPanel4Layout);
+        jPanel4Layout.setHorizontalGroup(
+            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel4Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jPanel4Layout.createSequentialGroup()
+                        .add(createdWhoLabel)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 543, Short.MAX_VALUE)
+                        .add(createdWhenLabel))
+                    .add(jPanel4Layout.createSequentialGroup()
+                        .add(updatedWhoLabel)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 543, Short.MAX_VALUE)
+                        .add(updatedWhenLabel)))
+                .addContainerGap())
+        );
+        jPanel4Layout.setVerticalGroup(
+            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel4Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(createdWhoLabel)
+                    .add(createdWhenLabel))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(updatedWhoLabel)
+                    .add(updatedWhenLabel))
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+        );
+
+        prevButton.setText("jButton1");
+
+        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
+        getContentPane().setLayout(layout);
+        layout.setHorizontalGroup(
+            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(layout.createSequentialGroup()
+                .addContainerGap()
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
+                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(layout.createSequentialGroup()
+                        .add(taxonLabel)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 577, Short.MAX_VALUE)
+                        .add(projectLabel))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(sourceLabel)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 577, Short.MAX_VALUE)
+                        .add(herbariumLabel))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                    .add(layout.createSequentialGroup()
+                        .add(prevButton)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                .addContainerGap())
+        );
+        layout.setVerticalGroup(
+            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(layout.createSequentialGroup()
+                .addContainerGap()
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                        .add(taxonLabel)
+                        .add(projectLabel)))
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(herbariumLabel)
+                    .add(sourceLabel))
+                .add(14, 14, 14)
+                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(prevButton))
+                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+        );
+        pack();
+    }// </editor-fold>//GEN-END:initComponents
+    
+    /**
+     * @param args the command line arguments
+     */
+    public static void main(String args[]) {
+        java.awt.EventQueue.invokeLater(new Runnable() {
+            public void run() {
+//                new DetailView(new javax.swing.JFrame(), true).setVisible(true);
+            }
+        });
+    }
+    
+    public void update(Observable o, Object arg) {
+        if (arg instanceof String) {
+            String msg = (String)arg;
+            if (msg.equals("NEW_DETAIL_LOADED")) {
+                if (model.source != null)
+                    sourceLabel.setText(L10n.getFormattedString("Detail.Source",model.source));
+                else
+                    sourceLabel.setText(L10n.getFormattedString("Detail.Source",EMPTY));
+                if (model.herbarium != null)
+                    herbariumLabel.setText(L10n.getFormattedString("Detail.Herbarium",model.herbarium));
+                else 
+                    herbariumLabel.setText(L10n.getFormattedString("Detail.Herbarium",EMPTY));
+                Calendar c = Calendar.getInstance(L10n.getCurrentLocale());
+                c.set(Calendar.DAY_OF_MONTH,model.day);
+                if (model.month != null)
+                    c.set(Calendar.MONTH,model.month);
+                c.set(Calendar.YEAR,model.year);
+                Date d = c.getTime();
+                DateFormat df = DateFormat.getDateInstance(DateFormat.LONG,L10n.getCurrentLocale());
+                dateLabel.setText(L10n.getFormattedString("Detail.Date",df.format(d)));
+                occNoteArea.setText(model.occNote);
+                habNoteArea.setText(model.habNote);
+                placeDescArea.setText(model.placeDescription);
+                DateFormat df2 = DateFormat.getDateInstance(DateFormat.LONG,L10n.getCurrentLocale());
+                createdWhoLabel.setText(L10n.getFormattedString("Detail.CreatedWho",model.createdWho));
+                createdWhenLabel.setText(L10n.getFormattedString("Detail.CreatedWhen",df2.format(model.createdWhen)));
+                if (model.updatedWho != null) {
+                    updatedWhoLabel.setText(L10n.getFormattedString("Detail.UpdatedWho",model.updatedWho));
+                    updatedWhenLabel.setText(L10n.getFormattedString("Detail.UpdatedWhen",df2.format(model.updatedWhen)));
+                } else  {
+                    updatedWhoLabel.setText(L10n.getFormattedString("Detail.UpdatedWho",EMPTY));
+                    updatedWhenLabel.setText(L10n.getFormattedString("Detail.UpdatedWhen",EMPTY));
+                }
+                if (model.altitude != null)
+                    altitudeLabel.setText(L10n.getFormattedString("Detail.Altitude",model.altitude));
+                else
+                    altitudeLabel.setText(L10n.getFormattedString("Detail.Altitude",EMPTY));
+                if (model.latitude != null)
+                    latitudeLabel.setText(L10n.getFormattedString("Detail.Latitude",model.latitude));
+                else
+                    latitudeLabel.setText(L10n.getFormattedString("Detail.Latitude",EMPTY));
+                if (model.longitude != null)
+                    longitudeLabel.setText(L10n.getFormattedString("Detail.Longitude",model.longitude));
+                else
+                    longitudeLabel.setText(L10n.getFormattedString("Detail.Longitude",EMPTY));
+                if (model.country != null)
+                    countryLabel.setText(L10n.getFormattedString("Detail.Country",model.country));
+                else
+                    countryLabel.setText(L10n.getFormattedString("Detail.Country",EMPTY));
+                if (model.quadrant != null)
+                    quadrantLabel.setText(L10n.getFormattedString("Detail.Quadrant",model.quadrant));
+                else
+                    quadrantLabel.setText(L10n.getFormattedString("Detail.Quadrant",EMPTY));
+                villageLabel.setText(L10n.getFormattedString("Detail.Village",model.village));
+                projectLabel.setText(L10n.getFormattedString("Detail.Project",model.project));
+                phytLabel.setText(L10n.getFormattedString("Detail.Phytochorion",model.phytName,model.phytCode));
+//                phytCodeLabel.setText(L10n.getFormattedString("Detail.PhytCode",model.phytCode));
+//                phytNameLabel.setText(L10n.getFormattedString("Detail.PhytName",model.phytName));
+                taxonLabel.setText(L10n.getFormattedString("Detail.Taxon",model.taxon));
+                territoryLabel.setText(L10n.getFormattedString("Detail.Territory",model.territory));
+                //publication
+                
+                if (model.detailTableModel != null)
+                    authorTable.setModel(model.detailTableModel);
+                else {
+                    logger.error("Detail: author table model is null.");
+                }
+            }
+        }
+    }
+
+
+    // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JLabel altitudeLabel;
+    private javax.swing.JTable authorTable;
+    private javax.swing.JLabel countryLabel;
+    private javax.swing.JLabel createdWhenLabel;
+    private javax.swing.JLabel createdWhoLabel;
+    private javax.swing.JLabel dateLabel;
+    private javax.swing.JLabel descAreaLabel;
+    private javax.swing.JLabel habAreaLabel;
+    private javax.swing.JTextArea habNoteArea;
+    private javax.swing.JLabel herbariumLabel;
+    private javax.swing.JPanel jPanel1;
+    private javax.swing.JPanel jPanel2;
+    private javax.swing.JPanel jPanel3;
+    private javax.swing.JPanel jPanel4;
+    private javax.swing.JPanel jPanel5;
+    private javax.swing.JPanel jPanel6;
+    private javax.swing.JScrollPane jScrollPane1;
+    private javax.swing.JScrollPane jScrollPane2;
+    private javax.swing.JScrollPane jScrollPane3;
+    private javax.swing.JScrollPane jScrollPane4;
+    private javax.swing.JLabel latitudeLabel;
+    private javax.swing.JLabel longitudeLabel;
+    protected javax.swing.JButton nextButton;
+    private javax.swing.JLabel occAreaLabel;
+    private javax.swing.JTextArea occNoteArea;
+    private javax.swing.JLabel phytLabel;
+    private javax.swing.JTextArea placeDescArea;
+    protected javax.swing.JButton prevButton;
+    private javax.swing.JLabel projectLabel;
+    private javax.swing.JLabel quadrantLabel;
+    private javax.swing.JLabel sourceLabel;
+    private javax.swing.JLabel taxonLabel;
+    private javax.swing.JLabel territoryLabel;
+    private javax.swing.JLabel updatedWhenLabel;
+    private javax.swing.JLabel updatedWhoLabel;
+    private javax.swing.JLabel villageLabel;
+    // End of variables declaration//GEN-END:variables
+    
+}

Modified: trunk/src/net/sf/plantlore/client/OverviewTableModel.java
===================================================================
--- trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -7,6 +7,7 @@
 
 package net.sf.plantlore.client;
 
+import java.io.UnsupportedEncodingException;
 import java.rmi.RemoteException;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -43,6 +44,7 @@
     private int pageSize = 30;
     private int currentPage = 1;
     private int selectionColumnIndex = -1;
+    private int numberColumnIndex = -1;
     
     private ArrayList<Column> columns;
     private Selection selection = new Selection();    
@@ -103,9 +105,9 @@
                     if (columns.get(j).type.equals((Column.Type.NUMBER))) {
                         row[j] = from + i + 1;
                     } else {
+                        if (columns.get(j).type.equals(Column.Type.OCCURRENCE_ID))
+                            row[row.length-1] = value;    
                         value = projArray[proj] == null ? columns.get(j).getDefaultNullValue() : projArray[proj];
-                        if (columns.get(j).type.equals(Column.Type.OCCURRENCE_ID))
-                            row[row.length-1] = value;                        
                         row[j] = value;
                         proj++;
                     }
@@ -118,6 +120,12 @@
         
     }
             
+    public Integer getOccurrence(int i) throws DBLayerException, RemoteException {
+        Object[] obj = db.more(getResultId(), i, i);
+        Object[] pa = (Object[]) obj[0];
+        return (Integer) pa[0];
+    }
+    
     public Object[] getRow(int i) {
         if (data != null)
             return data[i];
@@ -315,6 +323,8 @@
         logger.debug("Setting new overview columns.");
         selectionColumnIndex = columns.indexOf(new Column(Column.Type.SELECTION)) - 1; // we don't display the first column which is always Occurrence.ID
                                                                                        // so the index as JTable sees it is -1
+        
+        numberColumnIndex = columns.indexOf(new Column(Column.Type.NUMBER));
         this.columns = columns;
     }
     
@@ -329,6 +339,13 @@
             return -1;
     }
     
+    public Integer getResultNumber(int row) {
+        if (data != null)
+            return ((Integer)data[row][numberColumnIndex])-1; //displayed numbers are indexed from 1
+        else
+            return -1;        
+    }
+    
     public void setDatabase(DBLayer database) {
         this.db = database;
         logger.debug("Database set.");

Modified: trunk/src/net/sf/plantlore/client/TableSorter.java
===================================================================
--- trunk/src/net/sf/plantlore/client/TableSorter.java	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/client/TableSorter.java	2006-06-03 22:33:40 UTC (rev 432)
@@ -543,6 +543,10 @@
         return tableModel.getOccurrenceId(modelIndex(row));
     }
     
+    public Integer getResultNumber(int row) {
+        return tableModel.getResultNumber(modelIndex(row));
+    }
+    
     public void setResultId(int resultId, SelectQuery sq) throws RemoteException, DBLayerException {
         tableModel.setResultId(resultId, sq);
     }
@@ -555,6 +559,10 @@
         tableModel.setColumns(columns);
         fireTableStructureChanged();
     }
+    
+    public Integer getOccurrence(int i) throws DBLayerException, RemoteException {
+        return tableModel.getOccurrence(i);
+    }
 }
 
 

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-03 22:33:40 UTC (rev 432)
@@ -1156,6 +1156,65 @@
 
 
 
+AddEdit.InfoPanel=Info
+
+Detail.Source=Source\: {0}
+
+Detail.Herbarium=Herbarium\: {0}
+
+Detail.Date=Date\: {0}
+
+Detail.OccNote=Occurrence note
+
+Detail.HabNote=Habitat note
+
+Detail.PlaceDescription=Place description
+
+Detail.CreatedWho=Created by user {0}
+
+Detail.CreatedWhen=on {0}
+
+Detail.UpdatedWho=Updated by user {0}
+
+Detail.UpdatedWhen=on {0}
+
+Detail.Altitude=Altitude\: {0}
+
+Detail.Latitude=Latitude\: {0}
+
+Detail.Longitude=Longitude\: {0}
+
+Detail.Country=Country\: {0}
+
+Detail.Quadrant=Quadrant\: {0}
+
+Detail.Village=Village\: {0}
+
+Detail.Project=Project\: {0}
+
+Detail.PhytCode=Phytochoria code\: {0}
+
+Detail.PhytName=Phytochoria name\: {0}
+
+Detail.Taxon=Taxon\: {0}
+
+Detail.Publication=Publication\: {0}
+
+Common.Next=Next
+
+Common.Prev=Prev
+
+Detail.Territory=Territory\: {0}
+
+Detail.Phytochorion=Phytochorion\: {0} ({1})
+
+Detail.OccNoteTitle=Occurrence note
+
+Detail.HabNoteTitle=Habitat note
+
+Detail.PlaceDescriptionTitle=Place description
+
+
 #=============================================================
 # SERVER
 #	net.sf.plantlore.server.manager
@@ -1213,3 +1272,4 @@
 Server.Info.ClientKicked = The client {0} was kicked.
 Server.Info.Terminated = Server terminated (clients disconnected).
 
+

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-03 22:33:40 UTC (rev 432)
@@ -668,7 +668,7 @@
 
 Overview.History=Historie
 
-Overview.HistoryTT=Historie onza\u010den\u00e9ho z\u00e1znamu
+Overview.HistoryTT=Historie onzan\u010Den\u00E9ho z\u00E1znamu
 
 Overview.Scheda=Scheda
 
@@ -771,3 +771,59 @@
 AddEdit.PreloadAuthors=zapamatuj si zadan\u00E9 autory
 
 AddEdit.InfoPanel=Info
+
+Detail.Source=Source\: {0}
+
+Detail.Herbarium=Herbarium\: {0}
+
+Detail.Date=Date\: {0}
+
+Detail.OccNote=Occurrence note\: {0}
+
+Detail.HabNote=Habitat note
+
+Detail.PlaceDescription=Place description
+
+Detail.CreatedWho=Created by user {0}
+
+Detail.CreatedWhen=on {0}
+
+Detail.UpdatedWho=Updated by user {0}
+
+Detail.UpdatedWhen=on {0}
+
+Detail.Altitude=Altitude\: {0}
+
+Detail.Latitude=Latitude\: {0}
+
+Detail.Longitude=Longitude\: {0}
+
+Detail.Country=Country\: {0}
+
+Detail.Quadrant=Quadrant\: {0}
+
+Detail.Village=Village\: {0}
+
+Detail.Project=Project\: {0}
+
+Detail.PhytCode=Phytochoria code\: {0}
+
+Detail.PhytName=Phytochoria name\: {0}
+
+Detail.Taxon=Taxon\: {0}
+
+Detail.Publication=Publication\: {0}
+
+Common.Next=Next
+
+Common.Prev=Prev
+
+Detail.Territory=Territory\: {0}
+
+Detail.Phytochorion=Phytochorion\: {0} ({1})
+
+Detail.OccNoteTitle=Occurrence note
+
+Detail.HabNoteTitle=Habitat note
+
+Detail.PlaceDescriptionTitle=Place description

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-03 18:49:12 UTC (rev 431)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-03 22:33:40 UTC (rev 432)
@@ -839,3 +839,59 @@
 AddEdit.PreloadAuthors=remember entered authors
 
 AddEdit.InfoPanel=Info
+
+Detail.Source=Source\: {0}
+
+Detail.Herbarium=Herbarium\: {0}
+
+Detail.Date=Date\: {0}
+
+Detail.OccNote=Occurrence note\: {0}
+
+Detail.HabNote=Habitat note
+
+Detail.PlaceDescription=Place description
+
+Detail.CreatedWho=Created by user {0}
+
+Detail.CreatedWhen=on {0}
+
+Detail.UpdatedWho=Updated by user {0}
+
+Detail.UpdatedWhen=on {0}
+
+Detail.Altitude=Altitude\: {0}
+
+Detail.Latitude=Latitude\: {0}
+
+Detail.Longitude=Longitude\: {0}
+
+Detail.Country=Country\: {0}
+
+Detail.Quadrant=Quadrant\: {0}
+
+Detail.Village=Village\: {0}
+
+Detail.Project=Project\: {0}
+
+Detail.PhytCode=Phytochoria code\: {0}
+
+Detail.PhytName=Phytochoria name\: {0}
+
+Detail.Taxon=Taxon\: {0}
+
+Detail.Publication=Publication\: {0}
+
+Common.Next=Next
+
+Common.Prev=Prev
+
+Detail.Territory=Territory\: {0}
+
+Detail.Phytochorion=Phytochorion\: {0} ({1})
+
+Detail.OccNoteTitle=Occurrence note
+
+Detail.HabNoteTitle=Habitat note
+
+Detail.PlaceDescriptionTitle=Place description



From krater at berlios.de  Sun Jun  4 11:40:48 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 11:40:48 +0200
Subject: [Plantlore-dev] r433 - in trunk/src/net/sf/plantlore: client/resources common/exception common/record middleware server server/manager
Message-ID: <200606040940.k549em1f004475@sheep.berlios.de>

Author: krater
Date: 2006-06-04 11:40:45 +0200 (Sun, 04 Jun 2006)
New Revision: 433

Added:
   trunk/src/net/sf/plantlore/client/resources/Server.KickUser.gif
   trunk/src/net/sf/plantlore/client/resources/Server.Refresh.gif
Modified:
   trunk/src/net/sf/plantlore/common/exception/DBLayerException.java
   trunk/src/net/sf/plantlore/common/exception/ExportException.java
   trunk/src/net/sf/plantlore/common/exception/ImportException.java
   trunk/src/net/sf/plantlore/common/exception/ParserException.java
   trunk/src/net/sf/plantlore/common/exception/PlantloreException.java
   trunk/src/net/sf/plantlore/common/record/Author.java
   trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java
   trunk/src/net/sf/plantlore/common/record/Habitat.java
   trunk/src/net/sf/plantlore/common/record/HistoryChange.java
   trunk/src/net/sf/plantlore/common/record/HistoryColumn.java
   trunk/src/net/sf/plantlore/common/record/HistoryRecord.java
   trunk/src/net/sf/plantlore/common/record/LastDataVersion.java
   trunk/src/net/sf/plantlore/common/record/Metadata.java
   trunk/src/net/sf/plantlore/common/record/Occurrence.java
   trunk/src/net/sf/plantlore/common/record/Phytochorion.java
   trunk/src/net/sf/plantlore/common/record/Plant.java
   trunk/src/net/sf/plantlore/common/record/Publication.java
   trunk/src/net/sf/plantlore/common/record/Record.java
   trunk/src/net/sf/plantlore/common/record/Right.java
   trunk/src/net/sf/plantlore/common/record/Territory.java
   trunk/src/net/sf/plantlore/common/record/User.java
   trunk/src/net/sf/plantlore/common/record/Village.java
   trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/CertificationException.java
   trunk/src/net/sf/plantlore/server/ConnectionInfo.java
   trunk/src/net/sf/plantlore/server/DatabaseSettings.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
   trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/RMIServer.java
   trunk/src/net/sf/plantlore/server/RMIServerControl.java
   trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java
   trunk/src/net/sf/plantlore/server/SubQueryImplementation.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
   trunk/src/net/sf/plantlore/server/manager/ServerMng.java
   trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
Log:
SerialVersionUID created for every Serializable class. (In order to ensure that client and server can be compiled with a different version of javac - 1.5.0_04 vs 1.5.0_07 for instance).

Added: trunk/src/net/sf/plantlore/client/resources/Server.KickUser.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/net/sf/plantlore/client/resources/Server.KickUser.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/src/net/sf/plantlore/client/resources/Server.Refresh.gif
===================================================================
(Binary files differ)


Property changes on: trunk/src/net/sf/plantlore/client/resources/Server.Refresh.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/net/sf/plantlore/common/exception/DBLayerException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/DBLayerException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/exception/DBLayerException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -10,6 +10,9 @@
  *
  */
 public class DBLayerException extends PlantloreException {
+	
+	private static final long serialVersionUID = 2006060411002L;
+	
         /** Error code */
         private int errorCode;
         /** Additional error info */

Modified: trunk/src/net/sf/plantlore/common/exception/ExportException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/ExportException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/exception/ExportException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -14,6 +14,8 @@
  */
 public class ExportException extends PlantloreException {
 	
+	private static final long serialVersionUID = 2006060411004L;
+	
 	public ExportException() { super(); }
 	
 	public ExportException(String message) { super(message); }

Modified: trunk/src/net/sf/plantlore/common/exception/ImportException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/ImportException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/exception/ImportException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -4,6 +4,8 @@
 
 public class ImportException extends PlantloreException {
 	
+	private static final long serialVersionUID = 2006060411008L;
+	
 	private Record problematicRecord;
 
 	public ImportException() { super(); }

Modified: trunk/src/net/sf/plantlore/common/exception/ParserException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/ParserException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/exception/ParserException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -1,6 +1,8 @@
 package net.sf.plantlore.common.exception;
 
 public class ParserException extends PlantloreException {
+	
+	private static final long serialVersionUID = 2006060411016L;
 
 	public ParserException() { super(); }
 	

Modified: trunk/src/net/sf/plantlore/common/exception/PlantloreException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/PlantloreException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/exception/PlantloreException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -12,6 +12,8 @@
  *
  */
 public class PlantloreException extends Exception implements Serializable {
+	
+	private static final long serialVersionUID = 2006060411032L;
 
 	public PlantloreException() { super(); }
 

Modified: trunk/src/net/sf/plantlore/common/record/Author.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Author.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Author.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -18,6 +18,10 @@
  *  @version 0.1, Mar 14, 2006
  */
 public class Author extends Record implements Deletable {
+	
+	private static final long serialVersionUID = 20060604002L;
+	
+	
     /** Parameters of the author. For detailed explanation see data model documentation. */
     private Integer id;
     private String wholeName;

Modified: trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class AuthorOccurrence extends Record implements Deletable {
+	
+	private static final long serialVersionUID = 20060604004L;
+	
     /** Parameters of AuthorOccurence */
     private Integer id;
     private Author author;

Modified: trunk/src/net/sf/plantlore/common/record/Habitat.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Habitat.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Habitat.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class Habitat extends Record implements Deletable {   
+	
+	private static final long serialVersionUID = 20060604006L;
+	
     /** Parameters of the Habitat */
     private Integer id;
     private Territory territory;

Modified: trunk/src/net/sf/plantlore/common/record/HistoryChange.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/HistoryChange.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/HistoryChange.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -16,6 +16,8 @@
  *  @author Tomas Kovarik
  */
 public class HistoryChange extends Record {
+	
+	private static final long serialVersionUID = 20060604010L;
 
     // Constants for HistoryChange operations (field COPERATION)
     public static final int HISTORYCHANGE_INSERT = 1;

Modified: trunk/src/net/sf/plantlore/common/record/HistoryColumn.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/HistoryColumn.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/HistoryColumn.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -16,6 +16,9 @@
  *  @author Tomas Kovarik
  */
 public class HistoryColumn extends Record {
+	
+	private static final long serialVersionUID = 20060604008L;
+	
     /** Parameters of the HistoryColumn. For detailed explanation see data model documentation. */
     private Integer id;    
     private String tableName;

Modified: trunk/src/net/sf/plantlore/common/record/HistoryRecord.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/HistoryRecord.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/HistoryRecord.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -10,6 +10,9 @@
  *  @author Tomas Kovarik
  */
 public class HistoryRecord extends Record {
+	
+	private static final long serialVersionUID = 20060604012L;
+	
     /** Parameters of the author. For detailed explanation see data model documentation. */
     private Integer id;
     private HistoryColumn historyColumn;

Modified: trunk/src/net/sf/plantlore/common/record/LastDataVersion.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/LastDataVersion.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/LastDataVersion.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -11,6 +11,8 @@
  *  @author Lada Oberreiterova  
  */
 public class LastDataVersion extends Record {
+	
+	private static final long serialVersionUID = 20060604014L;
 
 	 /**
      * Parameters of the LastDataVersion. For detailed explanation see data model documentation.

Modified: trunk/src/net/sf/plantlore/common/record/Metadata.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Metadata.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Metadata.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class Metadata extends Record {
+	
+	private static final long serialVersionUID = 20060604016L;
+	
     /** Parameters of Metadata */
     private Integer id;
     private String technicalContactName;

Modified: trunk/src/net/sf/plantlore/common/record/Occurrence.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Occurrence.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Occurrence.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -24,6 +24,9 @@
  *  @version 0.1, Mar 14, 2006
  */
 public class Occurrence extends Record implements Deletable {
+	
+	private static final long serialVersionUID = 20060604018L;
+	
     /** Parameters of the occurrence. For detailed explanation see data model documentation. */
     private Integer id;
     private String unitIdDb;

Modified: trunk/src/net/sf/plantlore/common/record/Phytochorion.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Phytochorion.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Phytochorion.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class Phytochorion extends Record {
+	
+	private static final long serialVersionUID = 20060604020L;
+	
     /** Parameters of phytochorion */
     private Integer id;
     private String code;

Modified: trunk/src/net/sf/plantlore/common/record/Plant.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Plant.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Plant.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  *  @version 0.1, Mar 15, 2006
  */
 public class Plant extends Record {
+	
+	private static final long serialVersionUID = 20060604022L;
+	
     /** Parameters of the plant */    
     private Integer id;
     private String surveyTaxId;

Modified: trunk/src/net/sf/plantlore/common/record/Publication.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Publication.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Publication.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  *  @version 0.1, Mar 15, 2006
  */
 public class Publication extends Record implements Deletable  {
+	
+	private static final long serialVersionUID = 20060604024L;
+	
     /** Parameters of the publication */    
     private Integer id;
     private String collectionName;

Modified: trunk/src/net/sf/plantlore/common/record/Record.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -21,6 +21,9 @@
  */
 public abstract class Record implements Serializable {
 	
+	
+	private static final long serialVersionUID = 20060604000L;
+	
 	/** 
 	 * The list of "basic tables" i.e. tables related directly to the Occurence data.
 	 * The other tables are database specific and are used by our System only

Modified: trunk/src/net/sf/plantlore/common/record/Right.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Right.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Right.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -17,6 +17,9 @@
  * @author Lada Oberreiterova
  */
 public class Right extends Record {
+	
+	private static final long serialVersionUID = 20060604026L;
+	
     /** Parameters of the Right record */
     private Integer id;   
     private int administrator;

Modified: trunk/src/net/sf/plantlore/common/record/Territory.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Territory.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Territory.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class Territory extends Record {
+	
+	private static final long serialVersionUID = 20060604030L;
+	
     /** Parameters of the territory */
     private Integer id;    
     private String name;

Modified: trunk/src/net/sf/plantlore/common/record/User.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/User.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/User.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -14,6 +14,9 @@
  *  @version 0.1, Mar 15, 2006
  */
 public class User extends Record {
+	
+	private static final long serialVersionUID = 20060604032L;
+	
     /** Parameters of the user */
     private Integer id;
     private String login;

Modified: trunk/src/net/sf/plantlore/common/record/Village.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Village.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/common/record/Village.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -19,6 +19,9 @@
  * @author Lada Oberreiterova
  */
 public class Village extends Record {
+	
+	private static final long serialVersionUID = 20060604034L;
+	
     /** Parameters of the Village */    
     private Integer id;   
     private String name;

Modified: trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -147,6 +147,23 @@
 		else db.shutdown(); 
 	}
 	
+	
+	/** 
+	 * Initialize the codebase java.rmi.server.property to the specified directory or the
+	 * current working directory if the specified directory is null.
+	 * 
+	 *  @param directory	The directory that shall serve as a codebase. */
+	public static void initialize(String directory) {
+		String codebase = "file:/" + ((directory != null) ? directory : System.getProperty("user.dir")) + "/";
+		codebase = codebase.replaceAll(" ", "%20"); // to prevent the MalformedURLException
+		System.setProperty("java.rmi.server.codebase", codebase);
+		System.out.println("java.rmi.server.codebase = " + codebase);
+	}
+	
+	
+	/** Static initialization. */
+	static {
+		initialize(null);
+	}
 
-
 }

Modified: trunk/src/net/sf/plantlore/server/CertificationException.java
===================================================================
--- trunk/src/net/sf/plantlore/server/CertificationException.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/CertificationException.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -3,6 +3,8 @@
 
 public class CertificationException extends Exception {
 	
+	private static final long serialVersionUID = 2006060411064L;
+	
 	public CertificationException() { super(); }
 	
 	public CertificationException(String msg) { super(msg); }

Modified: trunk/src/net/sf/plantlore/server/ConnectionInfo.java
===================================================================
--- trunk/src/net/sf/plantlore/server/ConnectionInfo.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/ConnectionInfo.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -20,6 +20,9 @@
  */
 public class ConnectionInfo implements Serializable {
 	
+	
+	private static final long serialVersionUID = 2006060433002L;
+	
 	private RemoteDBLayerFactory remoteFactory = null;
 	private DBLayer database = null;
 	private DBLayer stub = null;

Modified: trunk/src/net/sf/plantlore/server/DatabaseSettings.java
===================================================================
--- trunk/src/net/sf/plantlore/server/DatabaseSettings.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/DatabaseSettings.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -2,6 +2,8 @@
 
 public class DatabaseSettings {
 	
+	private static final long serialVersionUID = 2006060433004L;
+	
 	private String connectionStringPrefix;
 	private String connectionStringSuffix;
 	private String masterUser;

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -56,6 +56,10 @@
  *  @version far from ready!
  */
 public class HibernateDBLayer implements DBLayer, Unreferenced {
+	
+	
+	private static final long serialVersionUID = 2006060433222L;
+	
     /** Instance of a logger */
     private Logger logger;
     /** Configuration file for Hibernate */

Modified: trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -37,6 +37,8 @@
 public class RMIRemoteDBLayerFactory extends UnicastRemoteObject
 	implements RemoteDBLayerFactory {
 	
+	private static final long serialVersionUID = 2006060433002698L;
+	
 	private Logger logger  = Logger.getLogger(this.getClass().getPackage().getName());;
 	
 	private ServerSettings  settings;
@@ -67,8 +69,7 @@
 		Collection<ConnectionInfo> currentlyConnectedClients = clients.values();
 		if(currentlyConnectedClients != null) 
 			return currentlyConnectedClients.toArray(new ConnectionInfo[0]);
-		else 
-			return null;
+		return null;
 	}
 	
 	/**
@@ -112,16 +113,26 @@
 		}
 		
 		// Create a new DBLayer, export it, and keep the stub. Also set the Undertaker of this object.
-		logger.debug("  Creating a new HibernateDBLayer ...");
+		logger.debug("Creating a new HibernateDBLayer ...");
 		DBLayer database = new HibernateDBLayer( undertaker, settings.getDatabaseSettings() );
-		logger.debug("   completed!");
-		DBLayer stub = (DBLayer) UnicastRemoteObject.exportObject(database);
+		logger.debug("[Success] DBLayer created.");
 		
+		
+		DBLayer stub = null;
+		try {
+			logger.debug("Exporting the database layer...");
+			stub = (DBLayer) UnicastRemoteObject.exportObject(database);
+			logger.debug("[Success] DBLayer exported.");
+		} catch(RemoteException e) {
+			logger.error("[Failure] Unable to export the DBLayer. Is the `codebase` set properly? Are stubs generated properly? " + e.getMessage());
+			throw e;
+		}
+		
 		// Save the information about this connection.
 		ConnectionInfo info = new ConnectionInfo(null, database, stub, clientHost); // remoteFactory is null because of security reasons.
 		clients.put(stub, info);
 		
-		logger.info("New remote DBLayer created " + info);
+		logger.info("New remote DBLayer created (" + info + ").");
 
 		return stub;
 	}
@@ -156,7 +167,8 @@
 	public synchronized void destroy(DBLayer stub) throws RemoteException {
 		if(stub == null) return;
 		ConnectionInfo info = clients.remove(stub);
-		if(info != null) disconnect(info.getDatabase());
+		if(info != null) 
+			disconnect(info.getDatabase());
 		else try {
 			logger.warn(RemoteServer.getClientHost() + " attempts to destroy " +
 						"a database layer that has was not created by this factory OR attempts to destroy an already destroyed DBLayer!");

Modified: trunk/src/net/sf/plantlore/server/RMIServer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIServer.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/RMIServer.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -28,6 +28,8 @@
  */
 public class RMIServer extends UnicastRemoteObject implements Server {
 	
+	private static final long serialVersionUID = 2006060433819775L;
+	
 	/** The default port where the rmiregistry listens. To that rmiregistry the RemoteDBLayerFactory will be bound to. */
 	public static final int DEFAULT_PORT = Registry.REGISTRY_PORT;
 	
@@ -54,8 +56,9 @@
 	
 	/** Get the information about the connected clients. */
 	public synchronized ConnectionInfo[] getClients() {
-		if(remoteFactory == null) return null;
-		else return remoteFactory.getClients(); 
+		if(remoteFactory == null) 
+			return null;
+		return remoteFactory.getClients(); 
 	}
 
 	/**
@@ -67,7 +70,8 @@
 		try { 
 			remoteFactory.destroy(client.getStub()); 
 		} catch(RemoteException e) { 
-			logger.warn(e.getMessage()); 
+			logger.error("Unable to disconnect the client. " + e.getMessage());
+			e.printStackTrace();
 		}
 	}
 	
@@ -98,7 +102,10 @@
 			
 			logger.info("The RemoteDBLayerFactory has been bound to the rmiregistry.");
 		}
-		catch(RemoteException e) { logger.error(e); }
+		catch(RemoteException e) { 
+			logger.error("Unable to start the server. " + e.getMessage());
+			e.printStackTrace();
+		}
 	}
 	
 	/** 
@@ -135,7 +142,8 @@
 			logger.info("The Server terminates. Bye.");
 		}
 		catch(Exception e) { 
-			logger.error(e.getMessage()); 
+			logger.error("Unable to stop the server. " + e.getMessage());
+			e.printStackTrace();
 		}
 	}
 
@@ -149,7 +157,7 @@
 		String codebase = "file:/" + ((directory != null) ? directory : System.getProperty("user.dir")) + "/";
 		codebase = codebase.replaceAll(" ", "%20"); // to prevent the MalformedURLException
 		System.setProperty("java.rmi.server.codebase", codebase);
-		//System.out.println("java.rmi.server.codebase = " + codebase);
+		System.out.println("java.rmi.server.codebase = " + codebase);
 		
 		System.setProperty("java.rmi.dgc.leaseValue", "30000"); // 30 seconds, just for DEBUG.REASONS
 	}

Modified: trunk/src/net/sf/plantlore/server/RMIServerControl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIServerControl.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/RMIServerControl.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -5,6 +5,8 @@
 
 public class RMIServerControl extends UnicastRemoteObject implements Guard {
 	
+	private static final long serialVersionUID = 2006060433140537L;
+	
 	private Server server;
 	private String password;
 

Modified: trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java
===================================================================
--- trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -44,6 +44,9 @@
  * @author Tom?? Kova??k, Erik Kratochv?l
  */
 public class SelectQueryImplementation implements SelectQuery {
+	
+	private static final long serialVersionUID = 2006060433450880L;
+	
     // Hibernate criteria used in criteria query
     private Criteria criteria;
     /* List of projections for the query */

Modified: trunk/src/net/sf/plantlore/server/SubQueryImplementation.java
===================================================================
--- trunk/src/net/sf/plantlore/server/SubQueryImplementation.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/SubQueryImplementation.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -37,6 +37,9 @@
  * @author Tomas Kovarik
  */
 public class SubQueryImplementation implements SelectQuery {
+	
+	private static final long serialVersionUID = 2006060433001676L;
+	
     // Hibernate criteria used in criteria query
     private DetachedCriteria criteria;
     /* List of projections for the query */

Modified: trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -34,7 +34,7 @@
 		}
 		public void actionPerformed(ActionEvent arg0) {
 			// Take the stored information.
-			ServerSettings settings = model.getSettings();
+			ServerSettings settings = model.getSettings(false);
 			
 			// Gather the information from the dialog. 
 			try {

Modified: trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -32,7 +32,7 @@
         setLocationRelativeTo(null); // center of the screen
         
         // Initialize the components' contents.
-        ServerSettings settings = model.getSettings();
+        ServerSettings settings = model.getSettings(true);
         if(settings != null) {
         	// Server
         	serverPort.setText( new Integer(settings.getPort()).toString() );
@@ -44,6 +44,8 @@
         	databasePassword.setText( settings.getDatabaseSettings().getMasterPassword() );
         	databaseParameter.setText( settings.getDatabaseSettings().getConnectionStringSuffix() );
         }
+        
+        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
     }
     
     /** This method is called from within the constructor to

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMng.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMng.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -72,7 +72,10 @@
 	}
 	
 	
-	public ServerSettings getSettings() {
+	public ServerSettings getSettings(boolean refresh) {
+		
+		if( !refresh )
+			return settings;
 
 		// Create some default settings.
 		settings = new ServerSettings(RMIServer.DEFAULT_PORT, 3, 32, 2, 
@@ -84,7 +87,7 @@
 			SAXReader saxReader = new SAXReader();
             Document document = saxReader.read( reader );
             
-            Node server = (Node)document.selectSingleNode("/config/server");
+            Node server = document.selectSingleNode("/config/server");
             Number portNumber = server.numberValueOf("port")/*,
             connectionsNumber = server.numberValueOf("connections"),
             peripNumber = server.numberValueOf("perip")*/;
@@ -92,16 +95,17 @@
             connections = (connectionsNumber == null) ? 16 : connectionsNumber.intValue(),
             perip = (peripNumber == null) ? 2 : peripNumber.intValue()*/;
             
-            Node database = (Node)server.selectSingleNode("database");
+            Node database = server.selectSingleNode("database");
             
             String databaseType = database.valueOf("engine"),
             databaseParameter = database.valueOf("parameter"),
-            databaseMasterUser = database.valueOf("masteruser");
+            databaseMasterUser = database.valueOf("masteruser"),
+            databaseMasterPassword = database.valueOf("masterpassword");
             Number databasePortNumber = database.numberValueOf("port");
             int databasePort = (databasePortNumber == null) ? 0 : databasePortNumber.intValue();
             
             settings = new ServerSettings(port, 3, 32, 2, 
-            		new DatabaseSettings(databaseType, databasePort, databaseParameter, databaseMasterUser, ""));
+            		new DatabaseSettings(databaseType, databasePort, databaseParameter, databaseMasterUser, databaseMasterPassword));
             
     		setChanged();
     		notifyObservers(L10n.getString("Server.SettingsLoaded"));

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-03 22:33:40 UTC (rev 432)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-04 09:40:45 UTC (rev 433)
@@ -18,8 +18,8 @@
 	
 	private ServerMngView view;
 	private ServerMng model;
+	private boolean terminated = false;
 	
-	
 	public ServerMngCtrl(ServerMng model, ServerMngView view) {
 		this.model = model; this. view = view;
 		
@@ -55,10 +55,15 @@
 		}
 		public void actionPerformed(ActionEvent ae) {
 			model.terminateServer();
-			// Disable Terminate, Refresh and Kick buttons.
-			view.terminate.setEnabled(false);
-			view.refresh.setEnabled(false);
-			view.kick.setEnabled(false);
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					// Disable Terminate, Refresh and Kick buttons.
+					view.terminate.setEnabled(false);
+					view.refresh.setEnabled(false);
+					view.kick.setEnabled(false);
+					terminated = true;
+				}
+			});
 		}
 	}
 	
@@ -82,8 +87,14 @@
 			if(icon != null) putValue(SMALL_ICON, icon);
 		}
 		public void actionPerformed(ActionEvent ae) {
-			view.setVisible(false);
-			//view.dispose();
+			java.awt.EventQueue.invokeLater(new Runnable() {
+				public void run() {
+					view.setVisible(false);
+					view.dispose();
+					if(terminated)
+						System.exit(0);
+				}
+			});
 		}
 	}
 



From krater at berlios.de  Sun Jun  4 12:47:55 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 12:47:55 +0200
Subject: [Plantlore-dev] r434 - trunk/src/net/sf/plantlore/server
Message-ID: <200606041047.k54AltV7015746@sheep.berlios.de>

Author: krater
Date: 2006-06-04 12:47:53 +0200 (Sun, 04 Jun 2006)
New Revision: 434

Modified:
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
   trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java
Log:
A bug that crippled the SelectQueryImplementation during remote calls has been fixed. The problem was with proper distinction between remote references (stubs) and remote objects. The SelectQueryImplementation has been granted the access to the translation reqistry of the HibernateDBLayer that is capable of translating stubs to corresponding remote objects.

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 09:40:45 UTC (rev 433)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 10:47:53 UTC (rev 434)
@@ -71,8 +71,12 @@
     
     private int maxSessionId;
     /** Session factory for creating Hibernate sessions */
-    private SessionFactory sessionFactory;    
-    /** List of select queries */
+    private SessionFactory sessionFactory;
+    
+    /** 
+     * List of select queries - velmi dulezity obekt, provadi preklad ze stubu, ktere nam muzou chodit
+     * na odpovidajici remote objekty. TODO: Nekam to poznamenat a zdokumentovat! 
+     */
     private Hashtable<SelectQuery, SelectQuery> queries;    
     
     private Hashtable<SelectQuery, Session> sessions;
@@ -651,7 +655,7 @@
             throw ex;
         }
         Session session = sessionFactory.openSession();
-        SelectQuery query = new SelectQueryImplementation(session.createCriteria(classname)), 
+        SelectQuery query = new SelectQueryImplementation(session.createCriteria(classname), queries), 
         	stub = query;
         
         if(undertaker != null)

Modified: trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java
===================================================================
--- trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java	2006-06-04 09:40:45 UTC (rev 433)
+++ trunk/src/net/sf/plantlore/server/SelectQueryImplementation.java	2006-06-04 10:47:53 UTC (rev 434)
@@ -52,9 +52,12 @@
     /* List of projections for the query */
     private ArrayList projections = new ArrayList();
     
+    private Map<SelectQuery, SelectQuery> translation;
+    
     /** Creates a new instance of SelectQueryImplementation */
-    public SelectQueryImplementation(Criteria criteria) {
+    public SelectQueryImplementation(Criteria criteria, Map<SelectQuery, SelectQuery> translation) {
         this.criteria = criteria;
+        this.translation = translation;
     }
     
     /**
@@ -114,6 +117,7 @@
      *  @param values collection of values for restrictions working with more values (RESTR_IN)
      */
     public void addRestriction(int type, String firstPropertyName, String secondPropertyName, Object value, Collection values) throws RemoteException {
+    	SubQueryImplementation subQuery = null;
         switch (type) {
             case PlantloreConstants.RESTR_BETWEEN:
                 Object[] vals = values.toArray();
@@ -179,10 +183,16 @@
                 criteria.add(Restrictions.neProperty(firstPropertyName, secondPropertyName));
                 break;
             case PlantloreConstants.SUBQUERY_GEALL:
-                criteria.add(Subqueries.propertyGeAll(firstPropertyName, ((SubQueryImplementation)value).getCriteria()));
+            	// It may happen we got only the STUB, yet what we need is the remote object!
+            	subQuery = (SubQueryImplementation)translation.get( value );
+            	if( subQuery != null)
+            		criteria.add(Subqueries.propertyGeAll(firstPropertyName, subQuery.getCriteria()));
                 break;
             case PlantloreConstants.SUBQUERY_LEALL:
-                criteria.add(Subqueries.propertyLeAll(firstPropertyName, ((SubQueryImplementation)value).getCriteria()));
+            	// It may happen we got only the STUB, yet what we need is the remote object!
+            	subQuery = (SubQueryImplementation)translation.get( value );
+            	if( subQuery != null)
+            		criteria.add(Subqueries.propertyLeAll(firstPropertyName, subQuery.getCriteria()));
                 break;                
             default:
                 



From krater at berlios.de  Sun Jun  4 13:19:24 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 13:19:24 +0200
Subject: [Plantlore-dev] r435 - in trunk/src/net/sf/plantlore: common/record server
Message-ID: <200606041119.k54BJOIj027043@sheep.berlios.de>

Author: krater
Date: 2006-06-04 13:19:19 +0200 (Sun, 04 Jun 2006)
New Revision: 435

Modified:
   trunk/src/net/sf/plantlore/common/record/Deletable.java
   trunk/src/net/sf/plantlore/common/record/Habitat.java
   trunk/src/net/sf/plantlore/common/record/Record.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Minor changes that should fix a problem with org.hibernate.TransientObjectException

Modified: trunk/src/net/sf/plantlore/common/record/Deletable.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Deletable.java	2006-06-04 10:47:53 UTC (rev 434)
+++ trunk/src/net/sf/plantlore/common/record/Deletable.java	2006-06-04 11:19:19 UTC (rev 435)
@@ -1,6 +1,8 @@
 package net.sf.plantlore.common.record;
 
-public interface Deletable {
+import java.io.Serializable;
+
+public interface Deletable extends Serializable {
 	
 	void setDeleted(Integer arg);
 	

Modified: trunk/src/net/sf/plantlore/common/record/Habitat.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Habitat.java	2006-06-04 10:47:53 UTC (rev 434)
+++ trunk/src/net/sf/plantlore/common/record/Habitat.java	2006-06-04 11:19:19 UTC (rev 435)
@@ -73,7 +73,7 @@
     public boolean isDead() {
     	Integer c = getDeleted();
     	if( c == null ) return false;
-    	else return c != 0;
+    	return c != 0;
     }
     
     @Override

Modified: trunk/src/net/sf/plantlore/common/record/Record.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-04 10:47:53 UTC (rev 434)
+++ trunk/src/net/sf/plantlore/common/record/Record.java	2006-06-04 11:19:19 UTC (rev 435)
@@ -37,7 +37,7 @@
 	/**
 	 * A set of tables that cannot be changed.
 	 */
-	public final static HashSet<Class> IMMUTABLE = new HashSet( Arrays.asList(
+	public final static HashSet<Class> IMMUTABLE = new HashSet<Class>( Arrays.asList(
 			Plant.class, Territory.class, Village.class, Phytochorion.class, Metadata.class) );
 	
 	
@@ -125,7 +125,7 @@
 			Record sub = (Record)base.getValue(key);
 			if(sub == null) continue; // As a matter of fact this can happen - Publication can be NULL.
 			if(sub.getClass().equals(type)) return sub;
-			else sub = findSubrecord( sub, type); // dig deeper...
+			sub = findSubrecord( sub, type); // dig deeper...
 			if(sub != null) return sub;
 		}
 		return null;
@@ -236,12 +236,12 @@
 	/**
 	 * @return The set of names of all foreign keys (columns that refer to other tables).
 	 */
-	public List<String> getForeignKeys() { return new ArrayList(0); }
+	public List<String> getForeignKeys() { return new ArrayList<String>(0); }
 	
 	/**
 	 * @return The set of names of all columns of the table.
 	 */
-	public List<String> getColumns() { return new ArrayList(0); }
+	public List<String> getColumns() { return new ArrayList<String>(0); }
 	
 	/**
 	 * @return The set of names of columns that are not foreign keys.
@@ -302,7 +302,7 @@
 			if(v1 == null && v2 == null) continue;
 			if(v1 == null || v2 == null) return false;
 			if( v1.equals(v2) ) continue;
-			else return false;
+			return false;
 		}
 		return true;
 	}
@@ -328,7 +328,7 @@
 			if(v1 == null && v2 == null) continue;
 			if(v1 == null || v2 == null) return false;
 			if( v1.equals(v2) ) continue;
-			else return false;
+			return false;
 		}
 		return true;
 	}

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 10:47:53 UTC (rev 434)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 11:19:19 UTC (rev 435)
@@ -1858,6 +1858,8 @@
 	
 	@Override
 	public String toString() {
+		if(plantloreUser != null)
+			return plantloreUser.getFirstName() + plantloreUser.getSurname() + " (" + currentlyConnectedUser + ")"; 
 		return currentlyConnectedUser ; 
 	}
 }



From discontinuum at gmail.com  Sun Jun  4 13:59:04 2006
From: discontinuum at gmail.com (Erik Kratochvil)
Date: Sun, 4 Jun 2006 13:59:04 +0200
Subject: [Plantlore-dev] Server
Message-ID: <f4dc39b90606040459v56d3d31fw9201ff05c9111392@mail.gmail.com>

Abyste aspon videli, jak vypada, kdyz uz ho vetsina z vas nemuze ani pustit
;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060604/4324b563/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Server.jpg
Type: image/jpeg
Size: 44552 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060604/4324b563/attachment.jpg>

From krater at berlios.de  Sun Jun  4 15:15:33 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 15:15:33 +0200
Subject: [Plantlore-dev] r436 - in trunk/src/net/sf/plantlore: common/record server
Message-ID: <200606041315.k54DFXgI029550@sheep.berlios.de>

Author: krater
Date: 2006-06-04 15:15:28 +0200 (Sun, 04 Jun 2006)
New Revision: 436

Modified:
   trunk/src/net/sf/plantlore/common/record/Author.java
   trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java
   trunk/src/net/sf/plantlore/common/record/Occurrence.java
   trunk/src/net/sf/plantlore/common/record/Publication.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Some unnecessary cosmetic changes.

Modified: trunk/src/net/sf/plantlore/common/record/Author.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Author.java	2006-06-04 11:19:19 UTC (rev 435)
+++ trunk/src/net/sf/plantlore/common/record/Author.java	2006-06-04 13:15:28 UTC (rev 436)
@@ -93,7 +93,7 @@
     public boolean isDead() {
     	Integer c = getDeleted();
     	if( c == null ) return false;
-    	else return c != 0;
+    	return c != 0;
     }
     
     /**

Modified: trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java	2006-06-04 11:19:19 UTC (rev 435)
+++ trunk/src/net/sf/plantlore/common/record/AuthorOccurrence.java	2006-06-04 13:15:28 UTC (rev 436)
@@ -76,7 +76,7 @@
     public boolean isDead() {
     	Integer c = getDeleted();
     	if( c == null ) return false;
-    	else return c != 0;
+    	return c != 0;
     }
     
     /**

Modified: trunk/src/net/sf/plantlore/common/record/Occurrence.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Occurrence.java	2006-06-04 11:19:19 UTC (rev 435)
+++ trunk/src/net/sf/plantlore/common/record/Occurrence.java	2006-06-04 13:15:28 UTC (rev 436)
@@ -152,7 +152,7 @@
     public boolean isDead() {
     	Integer c = getDeleted();
     	if( c == null ) return false;
-    	else return c != 0;
+    	return c != 0;
     }
     
     public Date checkDate(Object value) {

Modified: trunk/src/net/sf/plantlore/common/record/Publication.java
===================================================================
--- trunk/src/net/sf/plantlore/common/record/Publication.java	2006-06-04 11:19:19 UTC (rev 435)
+++ trunk/src/net/sf/plantlore/common/record/Publication.java	2006-06-04 13:15:28 UTC (rev 436)
@@ -102,7 +102,7 @@
     public boolean isDead() {
     	Integer c = getDeleted();
     	if( c == null ) return false;
-    	else return c != 0;
+    	return c != 0;
     }
     
     /**

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 11:19:19 UTC (rev 435)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 13:15:28 UTC (rev 436)
@@ -1859,7 +1859,9 @@
 	@Override
 	public String toString() {
 		if(plantloreUser != null)
-			return plantloreUser.getFirstName() + plantloreUser.getSurname() + " (" + currentlyConnectedUser + ")"; 
+			return plantloreUser.getFirstName() + " " + 
+				plantloreUser.getSurname() + 
+				" (" + currentlyConnectedUser + ")"; 
 		return currentlyConnectedUser ; 
 	}
 }



From fraktalek at berlios.de  Sun Jun  4 15:33:50 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Sun, 4 Jun 2006 15:33:50 +0200
Subject: [Plantlore-dev] r437 - trunk/src/net/sf/plantlore/client
Message-ID: <200606041333.k54DXoTI017640@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-04 15:33:49 +0200 (Sun, 04 Jun 2006)
New Revision: 437

Modified:
   trunk/src/net/sf/plantlore/client/OverviewTableModel.java
Log:
Fixed a mistake that creeped into the table model in last commit.
Selection is now filled correctly.



Modified: trunk/src/net/sf/plantlore/client/OverviewTableModel.java
===================================================================
--- trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-04 13:15:28 UTC (rev 436)
+++ trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-04 13:33:49 UTC (rev 437)
@@ -105,9 +105,9 @@
                     if (columns.get(j).type.equals((Column.Type.NUMBER))) {
                         row[j] = from + i + 1;
                     } else {
+                        value = projArray[proj] == null ? columns.get(j).getDefaultNullValue() : projArray[proj];
                         if (columns.get(j).type.equals(Column.Type.OCCURRENCE_ID))
                             row[row.length-1] = value;    
-                        value = projArray[proj] == null ? columns.get(j).getDefaultNullValue() : projArray[proj];
                         row[j] = value;
                         proj++;
                     }



From discontinuum at gmail.com  Sun Jun  4 15:51:41 2006
From: discontinuum at gmail.com (Erik Kratochvil)
Date: Sun, 4 Jun 2006 15:51:41 +0200
Subject: [Plantlore-dev] Nutna oprava kodu
Message-ID: <f4dc39b90606040651o27f61cc0qc0b2066684d9e20d@mail.gmail.com>

S Kovem se nam konecne podarilo trochu otestovat server a pripojeni pres
server. Bohuzel se narazilo na nekolik mensich problemu, ktery se vetsinou
vyresily "jednoduchou" upravou kodu. Jeden problem vyzaduje trochu vasi
spoluprace.

Kdykoliv vkladate (INSERT) objekt do databaze, tzn. volate
dblayer.executeInsert*(), musite jeste priradit tomu objektu id, ktery ten
exetureInsert() vraci.

Tzn. puvodni kod:

    // nekde je deklarovan Record r
    dblayer.executeInsert( r );

Opraveny kod:

    // nekde je deklarovan Record r
    Integer newId = dblayer.executeInsert( r );
    r.setId( newId );

Proc takova blba uprava? RMI business. Pokud totiz predate executeInsert()
nejaky record, server si ho na druhy strane zrekonstruuje - jako uplne jiny
vlastni objekt, vlozi ho do databaze a vrati vam to IDcko. Problem je, ze
vlozeni toho zaznamu do databaze se nijak nepromitne do toho zaznamu, ktery
mate vy na klientovi. Kdyz potom na takovy zaznam ukazuje nejaky jiny zaznam
(treba na Right ukazuje User), tak si Hibernate stezuje, ze ten (vama
poslanej) zaznam Right neni v poradku (chybi mu totiz ID), a nedovoli vam
Usera ulozit.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060604/40af81ec/attachment.html>

From admin at berlios.de  Sun Jun  4 17:04:01 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:04:01 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7748] Application freezes (Windows XP)
Message-ID: <200606041504.k54F419M006399@unicorn.berlios.de>

Bug #7748, was updated on 2006-Jun-04 17:04
Here is a current snapshot of the bug.

Project: Plantlore
Category: General
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: krater
Assigned to : none
Summary: Application freezes (Windows XP)

Details: Almost every time a JOptionPane.showMessage() is called and there is an opened modal dialog, the whole application freezes.

The cause of the problem is unknown, although it will probably have something to do with the threading model.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7748&group_id=5975


From krater at berlios.de  Sun Jun  4 17:08:18 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 17:08:18 +0200
Subject: [Plantlore-dev] r438 - in trunk/src/net/sf/plantlore: client client/login l10n middleware server/manager
Message-ID: <200606041508.k54F8IFK010648@sheep.berlios.de>

Author: krater
Date: 2006-06-04 17:08:16 +0200 (Sun, 04 Jun 2006)
New Revision: 438

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/login/AuthView.form
   trunk/src/net/sf/plantlore/client/login/AuthView.java
   trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
   trunk/src/net/sf/plantlore/client/login/ItemView.form
   trunk/src/net/sf/plantlore/client/login/ItemView.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
   trunk/src/net/sf/plantlore/client/login/LoginView.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form
   trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
   trunk/src/net/sf/plantlore/server/manager/ServerMngView.form
   trunk/src/net/sf/plantlore/server/manager/ServerMngView.java
Log:
Login. Bug#007733 and Bug#007726 fixed (involves the RMIDBLayerFactory). GUI partially updated.

Server. Views fixed.

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -1099,7 +1099,7 @@
                 if(loginModel == null) {
                 	loginModel = new Login(new RMIDBLayerFactory(), model.getMainConfig());
                 	loginModel.addObserver(new DatabaseChange());
-                	loginView = new LoginView(loginModel);
+                	loginView = new LoginView(view, loginModel);
                 	loginCtrl = new LoginCtrl(loginModel, loginView);
                 }
                 loginCtrl.setVisible(true);

Modified: trunk/src/net/sf/plantlore/client/login/AuthView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthView.form	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/AuthView.form	2006-06-04 15:08:16 UTC (rev 438)
@@ -35,7 +35,11 @@
                           <Component id="user" alignment="0" pref="223" max="32767" attributes="0"/>
                       </Group>
                   </Group>
-                  <Component id="next" alignment="1" min="-2" max="-2" attributes="0"/>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="discard" linkSize="1" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="next" linkSize="1" min="-2" max="-2" attributes="0"/>
+                  </Group>
               </Group>
               <EmptySpace max="-2" attributes="0"/>
           </Group>
@@ -56,7 +60,10 @@
                   <Component id="password" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
               <EmptySpace max="32767" attributes="0"/>
-              <Component id="next" min="-2" max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="next" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="discard" alignment="3" min="-2" max="-2" attributes="0"/>
+              </Group>
               <EmptySpace max="-2" attributes="0"/>
               <Component id="status" min="-2" pref="22" max="-2" attributes="0"/>
           </Group>
@@ -118,5 +125,15 @@
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
+    <Component class="javax.swing.JButton" name="discard">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Common.Cancel" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
   </SubComponents>
 </Form>

Modified: trunk/src/net/sf/plantlore/client/login/AuthView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthView.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/AuthView.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -7,6 +7,7 @@
 package net.sf.plantlore.client.login;
 
 import java.awt.Cursor;
+import java.awt.Dialog;
 import java.util.Observable;
 import java.util.Observer;
 
@@ -23,7 +24,9 @@
 public class AuthView extends javax.swing.JDialog implements Observer {
 	
     /** Creates new form AuthView */
-    public AuthView(Login model) {
+    public AuthView(Dialog parent, Login model) {
+    	super(parent, true);
+    	
     	model.addObserver(this);
         initComponents();
         getRootPane().setDefaultButton(next);
@@ -44,6 +47,7 @@
         password = new javax.swing.JPasswordField();
         next = new javax.swing.JButton();
         status = new javax.swing.JLabel();
+        discard = new javax.swing.JButton();
 
         setTitle(L10n.getString("Login.Authentication"));
         setTitle(L10n.getString("Login.Authentication"));
@@ -60,6 +64,8 @@
         status.setText(" ...");
         status.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
 
+        discard.setText(L10n.getString("Common.Cancel"));
+
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
@@ -75,10 +81,16 @@
                         .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                             .add(user, 0, 223, Short.MAX_VALUE)))
-                    .add(org.jdesktop.layout.GroupLayout.TRAILING, next))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(discard)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(next)))
                 .addContainerGap())
             .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
         );
+
+        layout.linkSize(new java.awt.Component[] {discard, next}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(layout.createSequentialGroup()
@@ -91,7 +103,9 @@
                     .add(jLabel2)
                     .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                .add(next)
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(next)
+                    .add(discard))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
         );
@@ -144,6 +158,7 @@
     
     
     // Variables declaration - do not modify//GEN-BEGIN:variables
+    protected javax.swing.JButton discard;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     protected javax.swing.JButton next;

Modified: trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -3,7 +3,6 @@
 import java.awt.event.ActionEvent;
 
 import javax.swing.AbstractAction;
-import javax.swing.Action;
 
 
 import net.sf.plantlore.l10n.L10n;
@@ -79,8 +78,6 @@
 				&&
 				view.databaseIdentifier.getText().length() > 0;
 				
-			System.out.println("@---------> "+newState);
-				
 			if(newState)
 				try {
 					if( Integer.parseInt(view.databasePort.getText()) <= 0 )
@@ -101,13 +98,17 @@
 			putValue(NAME, L10n.getString("Login.Change"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
-			int port = 1099, databasePort = -1;
+			int port = 1099, databasePort = 0;
 			try {
 				port = Integer.parseInt(view.port.getText());
-			} catch(NumberFormatException e) {}
+			} catch(NumberFormatException e) {
+				// Never mind, use the default port.
+			}
 			try {
 				databasePort = Integer.parseInt(view.databasePort.getText());
-			} catch(NumberFormatException e) {}
+			} catch(NumberFormatException e) {
+				// Nothing we can do.
+			}
 			
 			switch(mode) {
 			case ADD:

Modified: trunk/src/net/sf/plantlore/client/login/ItemView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemView.form	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/ItemView.form	2006-06-04 15:08:16 UTC (rev 438)
@@ -24,52 +24,65 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="1" attributes="0">
+                  <Group type="102" alignment="1" max="-2" attributes="0">
+                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="alias" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel2" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="host" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel8" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="port" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="database" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="databaseIdentifier" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel4" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="databasePort" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel5" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="databaseParameter" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel6" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="databaseMasterUser" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                          <Group type="102" alignment="1" attributes="0">
+                              <Component id="jLabel7" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace max="32767" attributes="2"/>
+                              <Component id="databaseMasterPassword" linkSize="2" min="-2" pref="231" max="-2" attributes="0"/>
+                          </Group>
+                      </Group>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+                  <Group type="102" alignment="1" attributes="1">
+                      <Component id="help" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="80" max="32767" attributes="0"/>
                       <Component id="discard" linkSize="1" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="next" linkSize="1" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace min="10" pref="10" max="10" attributes="0"/>
                   </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="jLabel1" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel2" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel8" alignment="0" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                      <EmptySpace min="-2" pref="6" max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="host" alignment="0" pref="231" max="32767" attributes="0"/>
-                          <Component id="alias" alignment="0" pref="231" max="32767" attributes="0"/>
-                          <Component id="port" alignment="0" pref="231" max="32767" attributes="0"/>
-                      </Group>
-                  </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="jLabel3" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                      <EmptySpace min="-2" pref="8" max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="databaseIdentifier" pref="231" max="32767" attributes="0"/>
-                          <Component id="database" alignment="0" pref="231" max="32767" attributes="0"/>
-                      </Group>
-                  </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="jLabel4" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel5" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel6" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel7" alignment="0" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="databasePort" alignment="0" pref="231" max="32767" attributes="0"/>
-                          <Component id="databaseParameter" alignment="0" pref="231" max="32767" attributes="0"/>
-                          <Component id="databaseMasterUser" alignment="0" pref="231" max="32767" attributes="0"/>
-                          <Component id="databaseMasterPassword" alignment="0" pref="231" max="32767" attributes="0"/>
-                      </Group>
-                  </Group>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
           </Group>
       </Group>
     </DimensionLayout>
@@ -125,6 +138,7 @@
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="next" alignment="3" min="-2" max="-2" attributes="0"/>
                   <Component id="discard" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="help" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
               <EmptySpace min="-2" max="-2" attributes="1"/>
           </Group>
@@ -314,5 +328,15 @@
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
       </AuxValues>
     </Component>
+    <Component class="javax.swing.JButton" name="help">
+      <Properties>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Common.Help" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
+      </Properties>
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
+    </Component>
   </SubComponents>
 </Form>

Modified: trunk/src/net/sf/plantlore/client/login/ItemView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemView.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/ItemView.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -6,6 +6,7 @@
 
 package net.sf.plantlore.client.login;
 
+import java.awt.Dialog;
 import java.util.Observable;
 import java.util.Observer;
 
@@ -21,7 +22,9 @@
 	private Login model;
     
     /** Creates new form ItemView */
-    public ItemView(Login model) {
+    public ItemView(Dialog parent, Login model) {
+    	super(parent, true);
+    	
 		this.model = model;
 		model.addObserver(this);
 		initComponents();
@@ -56,6 +59,7 @@
         port = new javax.swing.JTextField();
         jLabel9 = new javax.swing.JLabel();
         databaseIdentifier = new javax.swing.JTextField();
+        help = new javax.swing.JButton();
 
         setTitle(L10n.getString("Login.Change"));
         setTitle(L10n.getString("Login.Add"));
@@ -103,6 +107,8 @@
 
         databaseIdentifier.setToolTipText(L10n.getString("Login.DatabaseIdentifierTT"));
 
+        help.setText(L10n.getString("Common.Help"));
+
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
@@ -111,42 +117,55 @@
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel1)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(alias, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel2)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel8)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel3)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(database, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel9)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(databaseIdentifier, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel4)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(databasePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel5)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(databaseParameter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel6)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(databaseMasterUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                                .add(jLabel7)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                                .add(databaseMasterPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
+                        .addContainerGap())
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(help)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 80, Short.MAX_VALUE)
                         .add(discard)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(next))
-                    .add(layout.createSequentialGroup()
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(jLabel1)
-                            .add(jLabel2)
-                            .add(jLabel8))
-                        .add(6, 6, 6)
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(host, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(alias, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(port, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)))
-                    .add(layout.createSequentialGroup()
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(jLabel3)
-                            .add(jLabel9))
-                        .add(8, 8, 8)
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(databaseIdentifier, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(database, 0, 231, Short.MAX_VALUE)))
-                    .add(layout.createSequentialGroup()
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(jLabel4)
-                            .add(jLabel5)
-                            .add(jLabel6)
-                            .add(jLabel7))
-                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(databasePort, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(databaseParameter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(databaseMasterUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
-                            .add(databaseMasterPassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))))
-                .addContainerGap())
+                        .add(next)
+                        .add(10, 10, 10))))
         );
 
+        layout.linkSize(new java.awt.Component[] {alias, database, databaseIdentifier, databaseMasterPassword, databaseMasterUser, databaseParameter, databasePort, host, port}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+
         layout.linkSize(new java.awt.Component[] {discard, next}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
 
         layout.setVerticalGroup(
@@ -191,7 +210,8 @@
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(next)
-                    .add(discard))
+                    .add(discard)
+                    .add(help))
                 .addContainerGap())
         );
         pack();
@@ -229,6 +249,7 @@
     protected javax.swing.JTextField databaseParameter;
     protected javax.swing.JTextField databasePort;
     protected javax.swing.JButton discard;
+    protected javax.swing.JButton help;
     protected javax.swing.JTextField host;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -229,55 +229,58 @@
 		
 		final DBInfo selectedClone = selected.clone();
 		
-		 final SwingWorker worker = new SwingWorker() {
-	            public Object construct() {
-	            	
-            		logout();
-	            	try {
-	            		// The current username is moved to the top of the list of names :) Nice feature.
-	            		selectedClone.promoteUser(name);
-	            		// Save the current state.
-	            		save();
-	            		
-	            		// Create a new database layer.
-	            		logger.debug("Asking the DBLayerFactory for a new DBLayer @ " + selectedClone.host + ":" + selectedClone.port);
-	            		setChanged(); notifyObservers(L10n.getString("Login.Connecting"));
-	            		dblayer = factory.create( selectedClone );
-	            		
-	            		logger.debug("Connection successful.");
-	            		setChanged(); notifyObservers(L10n.getString("Login.Connected"));
-	            		
-	            		// Initialize the database layer.
-	            		setChanged(); notifyObservers(L10n.getString("Login.InitializingDBLayer"));
-	            		logger.debug("Initializing that DBLayer (" + selectedClone.databaseType + ", " + name + ", " + password + "...");
-
-	            		Object[] init = dblayer.initialize(selectedClone.getDatabaseIdentifier(), name, password);
-	            		plantloreUser = (User)init[0];
-	            		accessRights = (Right)init[1];
-	            	} 
-	            	catch (Exception exception) {
-	            		logger.error("The initialization of the DBLayer failed! " + exception.getMessage());
-	            		// If the initialization of the DBLayer failed, the uninitialized DBLayer must be destroyed!
-	            		// If it is not, the server's policy may not allow another connection from this client!
-	            		try {
-	            			factory.destroy(dblayer);
-	            		} catch(RemoteException re) {}
-	            		setChanged();
-            			notifyObservers( exception );
-	            		return null;
-	            	}
-	            	
-	            	setChanged(); 
-	            	notifyObservers(L10n.getString("Login.DBLayerInitialized"));
-	            	logger.debug("DBLayer initialized.");
-	            	
-	            	// Everything went fine.
-	            	setChanged(); notifyObservers(dblayer);
-	            	return null;
-	            }
-		 };
-		 
-		 worker.start();
+		final SwingWorker worker = new SwingWorker() {
+			public Object construct() {
+				
+				logout();
+				try {
+					// The current username is moved to the top of the list of names :) Nice feature.
+					selectedClone.promoteUser(name);
+					// Save the current state.
+					save();
+					
+					// Create a new database layer.
+					logger.debug("Asking the DBLayerFactory for a new DBLayer @ " + selectedClone.host + ":" + selectedClone.port);
+					setChanged(); notifyObservers(L10n.getString("Login.Connecting"));
+					dblayer = factory.create( selectedClone );
+					
+					logger.debug("Connection successful.");
+					setChanged(); notifyObservers(L10n.getString("Login.Connected"));
+					
+					// Initialize the database layer.
+					setChanged(); notifyObservers(L10n.getString("Login.InitializingDBLayer"));
+					logger.debug("Initializing that DBLayer (" + selectedClone.databaseType + ", " + name + ", " + password + "...");
+					
+					Object[] init = dblayer.initialize(selectedClone.getDatabaseIdentifier(), name, password);
+					plantloreUser = (User)init[0];
+					accessRights = (Right)init[1];
+				} 
+				catch (Exception e) {
+					logger.error("The initialization of the DBLayer failed! " + e.getMessage());
+					// If the initialization of the DBLayer failed, the uninitialized DBLayer must be destroyed!
+					// If it is not, the server's policy may not allow another connection from this client!
+					if(dblayer != null)
+						try {
+							factory.destroy(dblayer);
+						} catch(RemoteException re) {
+							// Nothing we can do; the server is probably in trouble, or the network connection failed. 
+						}
+					setChanged();
+					notifyObservers( e );
+					return null;
+				}
+				
+				setChanged(); 
+				notifyObservers(L10n.getString("Login.DBLayerInitialized"));
+				logger.debug("DBLayer initialized.");
+				
+				// Everything went fine.
+				setChanged(); notifyObservers(dblayer);
+				return null;
+			}
+		};
+		
+		worker.start();
 	}
 	
 	

Modified: trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -27,10 +27,10 @@
 		java.awt.EventQueue.invokeLater(new Runnable() {
 			public void run() {
 				// Create Item Add/Edit dialog.
-				itemView = new ItemView(model);
+				itemView = new ItemView(view, model);
 				itemCtrl = new ItemCtrl(model, itemView);
 				// Create Authorization dialog.
-				authView = new AuthView(model);
+				authView = new AuthView(view, model);
 				new AuthCtrl(model, authView);
 			}
 		});

Modified: trunk/src/net/sf/plantlore/client/login/LoginView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -6,6 +6,7 @@
 
 package net.sf.plantlore.client.login;
 
+import java.awt.Frame;
 import java.util.Observable;
 import java.util.Observer;
 
@@ -21,7 +22,9 @@
 	private Login model;
     
     /** Creates new form LoginView */
-    public LoginView(Login model) {
+    public LoginView(Frame parent, Login model) {
+    	super(parent, true);
+    	
 		this.model = model;
 		model.addObserver(this);
         initComponents();

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-04 15:08:16 UTC (rev 438)
@@ -414,7 +414,7 @@
 Login.Authentication = Authentication
 Login.UserName = User name
 Login.Password = Password
-Login.Authorize = Authorize
+Login.Authorize = Login
 Login.AuthorizeTT = Connect to the database with the specified username and password.
 Login.ConnectingTo = Connecting to
 
@@ -1257,13 +1257,15 @@
 Server.RefreshTT=Reload the list of currently conntected users.
 Server.KickUser=Kick user
 Server.KickUserTT=Disconnect the selected user from the server.
-Server.Terminate=Terminate
+Server.Terminate=Stop
 Server.TerminateTT=Terminate the Plantlore server and disconnect all its clients.
 Server.ListOfUsersTT=The list of currently connected users.
 
 
 Server.SettingsLoaded = Settings loaded.
+Server.SettingsNotLoaded = Settings not loaded. 
 Server.SettingsSaved = Settings saved.
+Server.SettingsNotSaved = Settings not saved.
 Server.Info.CreatingNewServer = Creating a new server...
 Server.Info.StartingNewServer = Starting the server...
 Server.Info.ServerUpAndRunning = Server is up and running.

Modified: trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/middleware/RMIDBLayerFactory.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -127,7 +127,8 @@
 	 * @param db The database layer to be taken care of.
 	 */
 	public synchronized void destroy(DBLayer db) throws RemoteException {
-		assert(db != null);
+		if(db == null)
+			return;
 		
 		// Get the stored information about the connection
 		ConnectionInfo info = client.remove(db);

Modified: trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateView.form	2006-06-04 15:08:16 UTC (rev 438)
@@ -31,12 +31,10 @@
           <Component id="status" alignment="0" pref="453" max="32767" attributes="0"/>
           <Group type="102" alignment="0" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
-              <Group type="103" groupAlignment="1" attributes="0">
-                  <Component id="jPanel2" alignment="0" min="0" max="32767" attributes="0"/>
-                  <Group type="103" alignment="0" groupAlignment="1" max="-2" attributes="0">
-                      <Component id="jPanel1" alignment="0" pref="433" max="32767" attributes="1"/>
-                      <Component id="plantloreLogo" alignment="0" pref="433" max="32767" attributes="1"/>
-                  </Group>
+              <Group type="103" groupAlignment="1" max="-2" attributes="0">
+                  <Component id="jPanel2" alignment="0" min="-2" max="-2" attributes="0"/>
+                  <Component id="jPanel1" alignment="0" pref="433" max="32767" attributes="1"/>
+                  <Component id="plantloreLogo" alignment="0" pref="433" max="32767" attributes="1"/>
               </Group>
               <EmptySpace max="32767" attributes="0"/>
           </Group>

Modified: trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateView.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -221,11 +221,10 @@
             .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
             .add(layout.createSequentialGroup()
                 .addContainerGap()
-                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
-                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
-                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
-                        .add(org.jdesktop.layout.GroupLayout.LEADING, plantloreLogo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)))
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
+                    .add(org.jdesktop.layout.GroupLayout.LEADING, plantloreLogo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
                 .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );
         layout.setVerticalGroup(

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngView.form
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngView.form	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngView.form	2006-06-04 15:08:16 UTC (rev 438)
@@ -23,10 +23,10 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jScrollPane1" alignment="0" pref="315" max="32767" attributes="0"/>
+                  <Component id="jScrollPane1" alignment="0" pref="343" max="32767" attributes="0"/>
                   <Group type="102" alignment="1" attributes="0">
                       <Component id="help" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="86" max="32767" attributes="0"/>
+                      <EmptySpace pref="166" max="32767" attributes="0"/>
                       <Component id="terminate" linkSize="1" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="hide" linkSize="1" min="-2" max="-2" attributes="0"/>
@@ -34,8 +34,8 @@
               </Group>
               <EmptySpace max="-2" attributes="0"/>
           </Group>
-          <Component id="status" alignment="0" pref="335" max="32767" attributes="0"/>
-          <Component id="jToolBar1" alignment="0" pref="335" max="32767" attributes="0"/>
+          <Component id="status" alignment="0" pref="363" max="32767" attributes="0"/>
+          <Component id="jToolBar1" alignment="0" pref="363" max="32767" attributes="0"/>
       </Group>
     </DimensionLayout>
     <DimensionLayout dim="1">
@@ -43,7 +43,7 @@
           <Group type="102" alignment="0" attributes="0">
               <Component id="jToolBar1" min="-2" pref="25" max="-2" attributes="0"/>
               <EmptySpace max="-2" attributes="0"/>
-              <Component id="jScrollPane1" pref="141" max="32767" attributes="0"/>
+              <Component id="jScrollPane1" pref="215" max="32767" attributes="0"/>
               <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="hide" alignment="3" min="-2" max="-2" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngView.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngView.java	2006-06-04 13:33:49 UTC (rev 437)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngView.java	2006-06-04 15:08:16 UTC (rev 438)
@@ -80,16 +80,16 @@
             .add(layout.createSequentialGroup()
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                     .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                         .add(help)
-                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 86, Short.MAX_VALUE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 166, Short.MAX_VALUE)
                         .add(terminate)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(hide)))
                 .addContainerGap())
-            .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
-            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
+            .add(status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
+            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
         );
 
         layout.linkSize(new java.awt.Component[] {hide, terminate}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
@@ -99,7 +99,7 @@
             .add(layout.createSequentialGroup()
                 .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
+                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(hide)



From admin at berlios.de  Sun Jun  4 17:09:16 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:09:16 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7733] Login dialog is not shown when you switch windows
Message-ID: <200606041509.k54F9GMh006713@unicorn.berlios.de>

Bug #7733, was updated on 2006-Jun-03 01:21
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : krater
Summary: Login dialog is not shown when you switch windows

Details: When you open Login dialog and switch to another application and then switch back to Plantlore, login dialog is not displayed (Plantlore seems to be "frozen" since the dialog is modal). the only way how to switch back is use Alt+tab combination (on Windows) to switch to Plantlore.

To solve this, do not set modality of the dialog via Matisse but call super(JFrame parent, Boolean modal) in the dialog constructor (it is possible to call super(JDialog parent, Boolean modal) if neccessary). This way the modal window will be displayed even when you switch to another application and then back to Plantlore. For reference see Publication or Author manager where this is implemented.

Follow-Ups:

Date: 2006-Jun-04 17:09
By: krater

Comment:
Fixed in revision 438.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7733&group_id=5975


From admin at berlios.de  Sun Jun  4 17:10:41 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:10:41 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7726] Login sometimes fails with NullPointerException
Message-ID: <200606041510.k54FAfex006802@unicorn.berlios.de>

Bug #7726, was updated on 2006-Jun-02 14:24
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : krater
Summary: Login sometimes fails with NullPointerException

Details: How to reproduce:
1. Open Plantlore
2. Create new triplet
3. DO NOT LOGIN, close Plantlore
4. Open Plantlore
5. Select the triplet you've added
6. Try to login

Here is the exception:
14:12:30,000 DEBUG AWT-EventQueue-0 login:78 - Loading the stored list of databases.
14:12:30,187 DEBUG AWT-EventQueue-0 login:169 - Selected database is Plantlore - Kovo - PostgreSQL
14:12:31,171 DEBUG AWT-EventQueue-0 login:169 - Selected database is Dalsi Pokus
Exception in thread "Thread-2" java.lang.NullPointerException
        at java.util.Hashtable.remove(Hashtable.java:438)
14:12:52,078 ERROR Thread-2 login:241 - The initialization of the DBLayer failed! java.lang.ArrayIndexOutOfBoundsException: 0
        at net.sf.plantlore.middleware.RMIDBLayerFactory.destroy(RMIDBLayerFactory.java:130)
        at net.sf.plantlore.client.login.Login$1.construct(Login.java:245)
        at net.sf.plantlore.common.SwingWorker$2.run(SwingWorker.java:108)
        at java.lang.Thread.run(Thread.java:595)

Problem si connected with saving the <user> tag in the plantlore.xml Since you close the plantlore without logging in (after you add the triplet), <user> tag is not added.

Follow-Ups:

Date: 2006-Jun-04 17:10
By: krater

Comment:
Fixed in revision 438. 
(Problem was caused by a database layer that was not created properly.)
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7726&group_id=5975


From admin at berlios.de  Sun Jun  4 17:16:03 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:16:03 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7749] Selecting an Author Name or a Revision transfers focus
Message-ID: <200606041516.k54FG3Sq007112@unicorn.berlios.de>

Bug #7749, was updated on 2006-Jun-04 17:16
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: Bug
Priority: 2
Submitted by: krater
Assigned to : fraktalek
Summary: Selecting an Author Name or a Revision transfers focus

Details: Selecting an Author or a Revision transfers focus to the Nearest bigger seat ComboBox. Annoying.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7749&group_id=5975


From admin at berlios.de  Sun Jun  4 17:19:59 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:19:59 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7748] Application freezes (Windows XP)
Message-ID: <200606041519.k54FJxg0007360@unicorn.berlios.de>

Bug #7748, was updated on 2006-Jun-04 17:04
Here is a current snapshot of the bug.

Project: Plantlore
Category: General
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: krater
Assigned to : none
Summary: Application freezes (Windows XP)

Details: Almost every time a JOptionPane.showMessage() is called and there is an opened modal dialog, the whole application freezes.

The cause of the problem is unknown, although it will probably have something to do with the threading model.

Follow-Ups:

Date: 2006-Jun-04 17:19
By: krater

Comment:
Weird thing is that Login doesn't freeze now...
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7748&group_id=5975


From admin at berlios.de  Sun Jun  4 17:41:03 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 17:41:03 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7748] Application freezes (Windows XP)
Message-ID: <200606041541.k54Ff3cL008536@unicorn.berlios.de>

Bug #7748, was updated on 2006-Jun-04 17:04
Here is a current snapshot of the bug.

Project: Plantlore
Category: General
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: krater
Assigned to : none
Summary: Application freezes (Windows XP)

Details: Almost every time a JOptionPane.showMessage() is called and there is an opened modal dialog, the whole application freezes.

The cause of the problem is unknown, although it will probably have something to do with the threading model.

Follow-Ups:

Date: 2006-Jun-04 17:41
By: krater

Comment:
In my experience if you convert your view's update() method in the following manner:

    public void update(Observable source, final Object arg) {
    	java.awt.EventQueue.invokeLater(new Runnable() {
    		public void run() {

    			if(arg instanceof Exception) {
    				
    				JOptionPane.showMessageDialog(
    						null, 
    						((Exception)arg).getMessage(), 
    						L10n.getString("Error.LoginFailed"), 
    						JOptionPane.ERROR_MESSAGE);
    			}
    			// The database layer has been created, we are no longer neccessary
    			else if(arg instanceof DBLayer)
    				setVisible(false); 
    			// Some update information - display them in the status bar.
    			else if(arg instanceof String) 
    				status.setText("  " + (String)arg);
    		}
    	});
	}



everything should be fine. However, the code in the controller must not call JOptionPane.showMessage(). Changes I do to the view from the controller doesn't seem to cause any problem. See the net.sf.plantlore.client.login package for the details.
-------------------------------------------------------

Date: 2006-Jun-04 17:19
By: krater

Comment:
Weird thing is that Login doesn't freeze now...
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7748&group_id=5975


From krater at berlios.de  Sun Jun  4 17:42:25 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 17:42:25 +0200
Subject: [Plantlore-dev] r439 - trunk/src/net/sf/plantlore/client/login
Message-ID: <200606041542.k54FgPJO013824@sheep.berlios.de>

Author: krater
Date: 2006-06-04 17:42:24 +0200 (Sun, 04 Jun 2006)
New Revision: 439

Modified:
   trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
   trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
Log:
Non-freezing login??

Modified: trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
+++ trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-04 15:42:24 UTC (rev 439)
@@ -15,12 +15,13 @@
 	
 	public AuthCtrl(Login login, AuthView authview) {
 		this.model = login; this.view = authview;
-		view.next.setAction(new Next());
+		view.next.setAction(new NextAction());
+		view.discard.setAction(new CancelAction());
 	}
 
 	
-	class Next extends AbstractAction {
-		public Next() {
+	class NextAction extends AbstractAction {
+		public NextAction() {
 			putValue(SHORT_DESCRIPTION, L10n.getString("Login.AuthorizeTT"));
 			putValue(NAME, L10n.getString("Login.Authorize"));
 		}
@@ -32,5 +33,21 @@
 			model.connectToSelected(user, new String(view.password.getPassword()));
 		}
 	}
+	
+	class CancelAction extends AbstractAction {
+		public CancelAction() {
+			//putValue(SHORT_DESCRIPTION, L10n.getString("Login.DiscardTT"));
+			putValue(NAME, L10n.getString("Login.Discard"));
+		}
+		public void actionPerformed(ActionEvent arg0) {
+			if( !view.next.isEnabled() ) {
+				view.next.setEnabled(true);
+				view.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
+				model.interrupt();
+			}
+			else
+				view.setVisible(false);
+		}
+	}
 
 }

Modified: trunk/src/net/sf/plantlore/client/login/ItemCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
+++ trunk/src/net/sf/plantlore/client/login/ItemCtrl.java	2006-06-04 15:42:24 UTC (rev 439)
@@ -22,34 +22,26 @@
 		this.mode = m;
 		switch(m) {
 		case ADD:
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					view.alias.setText(""); 
-					view.host.setText("");
-					view.port.setText("");
-					((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).setText("");
-					view.databaseIdentifier.setText("");
-					view.databasePort.setText("");
-					view.databaseParameter.setText("");
-					view.databaseMasterUser.setText("");
-					view.databaseMasterPassword.setText("");
-					
-					view.setTitle(L10n.getString("Login.AddTitle"));
-					view.next.setText(L10n.getString("Login.Add"));
-					view.next.setToolTipText(L10n.getString("Login.AddTT"));
-//					view.next.setEnabled(false);
-				}
-			});
+			view.alias.setText(""); 
+			view.host.setText("");
+			view.port.setText("");
+			((javax.swing.JTextField)view.database.getEditor().getEditorComponent()).setText("");
+			view.databaseIdentifier.setText("");
+			view.databasePort.setText("");
+			view.databaseParameter.setText("");
+			view.databaseMasterUser.setText("");
+			view.databaseMasterPassword.setText("");
+			
+			view.setTitle(L10n.getString("Login.AddTitle"));
+			view.next.setText(L10n.getString("Login.Add"));
+			view.next.setToolTipText(L10n.getString("Login.AddTT"));
+//			view.next.setEnabled(false);
 			break;
 		case EDIT:
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					view.setTitle(L10n.getString("Login.EditTitle"));
-					view.next.setText(L10n.getString("Login.Change"));
-					view.next.setToolTipText(L10n.getString("Login.ChangeTT"));
-					view.next.setEnabled(true);
-				}
-			});
+			view.setTitle(L10n.getString("Login.EditTitle"));
+			view.next.setText(L10n.getString("Login.Change"));
+			view.next.setToolTipText(L10n.getString("Login.ChangeTT"));
+			view.next.setEnabled(true);
 			break;
 		}
 	}
@@ -139,11 +131,7 @@
 				break;
 			}
 			
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					view.setVisible(false);
-				}
-			});
+			view.setVisible(false);
 			
 			setMode(Mode.EDIT);
 		}
@@ -155,11 +143,7 @@
 			putValue(NAME, L10n.getString("Login.Discard"));
 		}
 		public void actionPerformed(ActionEvent arg0) {
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					view.setVisible(false);
-				}
-			});
+			view.setVisible(false);
 		}
 	}
 

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 15:08:16 UTC (rev 438)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 15:42:24 UTC (rev 439)
@@ -34,6 +34,8 @@
 	/** The maximum number of usernames the System will store for each database record.*/
 	public static final int MAX_NAMES = 5;
 	public static final Object UPDATE_LIST = new Object();
+	
+	private SwingWorker worker;
 
 	/** 
 	 * The list of databases the User has accessed. This list is unique for every User
@@ -229,7 +231,7 @@
 		
 		final DBInfo selectedClone = selected.clone();
 		
-		final SwingWorker worker = new SwingWorker() {
+		worker = new SwingWorker() {
 			public Object construct() {
 				
 				logout();
@@ -283,7 +285,18 @@
 		worker.start();
 	}
 	
+	/**
+	 * Cancel the login proces.
+	 *
+	 */
+	synchronized public void interrupt() {
+		worker.interrupt();
+		logout();
+		setChanged(); notifyObservers(L10n.getString("Login.Interrupted"));
+	}
 	
+	
+	
 	/**
 	 * Disconnect from the current database. 
 	 * The database connection is lost, any operation in progress will cause an exception.

Modified: trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-04 15:08:16 UTC (rev 438)
+++ trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-04 15:42:24 UTC (rev 439)
@@ -24,16 +24,12 @@
 	public LoginCtrl(Login login, LoginView loginview) {
 		this.view = loginview; this.model = login;
 		
-		java.awt.EventQueue.invokeLater(new Runnable() {
-			public void run() {
-				// Create Item Add/Edit dialog.
-				itemView = new ItemView(view, model);
-				itemCtrl = new ItemCtrl(model, itemView);
-				// Create Authorization dialog.
-				authView = new AuthView(view, model);
-				new AuthCtrl(model, authView);
-			}
-		});
+		// Create Item Add/Edit dialog.
+		itemView = new ItemView(view, model);
+		itemCtrl = new ItemCtrl(model, itemView);
+		// Create Authorization dialog.
+		authView = new AuthView(view, model);
+		new AuthCtrl(model, authView);
 		
 		view.choice.addListSelectionListener(new ChoiceChanged());
 		view.add.setAction(new AddRecordAction());
@@ -46,14 +42,9 @@
 	}
 	
 	
-	public void setVisible(final boolean visible) {
-		final JDialog dialog = view.remember.isSelected() && !view.choice.isSelectionEmpty() ? authView : view;
-		java.awt.EventQueue.invokeLater(new Runnable() {
-			public void run() {
-				dialog.setVisible(visible);
-			}
-		});
-		
+	public void setVisible(boolean visible) {
+		JDialog dialog = view.remember.isSelected() && !view.choice.isSelectionEmpty() ? authView : view;
+		dialog.setVisible(visible);
 	}
 	
 	
@@ -70,11 +61,7 @@
 		}
 		public void actionPerformed(ActionEvent arg0) {
 			itemCtrl.setMode(ItemCtrl.Mode.ADD);
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					itemView.setVisible(true);
-				}
-			});
+			itemView.setVisible(true);
 		}
 	}
 	
@@ -96,11 +83,7 @@
 		public void actionPerformed(ActionEvent arg0) {
 			if(model.getSelected() != null) {
 				itemCtrl.setMode(ItemCtrl.Mode.EDIT);
-				java.awt.EventQueue.invokeLater(new Runnable() {
-					public void run() {
-						itemView.setVisible(true);
-					}
-				});
+				itemView.setVisible(true);
 			}
 		}
 	}
@@ -112,11 +95,7 @@
 		}
 		public void actionPerformed(ActionEvent arg0) {
 			if(model.getSelected() != null)
-				java.awt.EventQueue.invokeLater(new Runnable() {
-					public void run() {
-						authView.setVisible(true);
-					}
-				});
+				authView.setVisible(true);
 		}
 	}
 



From kovo at berlios.de  Sun Jun  4 18:00:33 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Sun, 4 Jun 2006 18:00:33 +0200
Subject: [Plantlore-dev] r440 - in trunk/src/net/sf/plantlore/client: . user
Message-ID: <200606041600.k54G0XaC017417@sheep.berlios.de>

Author: kovo
Date: 2006-06-04 18:00:33 +0200 (Sun, 04 Jun 2006)
New Revision: 440

Modified:
   trunk/src/net/sf/plantlore/client/AddEdit.java
   trunk/src/net/sf/plantlore/client/user/UserManager.java
Log:
Fix executeInsert() calls for Rights, Habitats and AuthorsOccurrences so that it works properly with the RMI. For details see Krater's post in the plantlore-dev.

Modified: trunk/src/net/sf/plantlore/client/AddEdit.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-04 15:42:24 UTC (rev 439)
+++ trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-04 16:00:33 UTC (rev 440)
@@ -601,7 +601,8 @@
         } else {
             //we've already created and set up a new Habitat now we have to store it into the database
             h.setDeleted(0);
-            database.executeInsert(h);
+            int habId = database.executeInsert(h);
+            h.setId(habId);
         }
         
         m = o.getMetadata();
@@ -670,7 +671,8 @@
         hTmp.setTerritory(o.getHabitat().getTerritory());
         hTmp.setDeleted(0);
         
-        database.executeInsert(hTmp);
+        int habId = database.executeInsert(hTmp);
+        hTmp.setId(habId);
         
         occTmp.setDataSource(o.getDataSource());
         occTmp.setDayCollected(o.getDayCollected());
@@ -792,7 +794,8 @@
                         logger.info("Creating a new occurrence for "+taxonList.get(j));
                         Occurrence occTmp = cloneOccurrence();
                         occTmp.setPlant((Plant) dlu.getObjectFor(lookupPlant(taxonList.get(j)),Plant.class));
-                        database.executeInsert(occTmp);
+                        int occId = database.executeInsert(occTmp);
+                        occTmp.setId(occId);
                         logger.debug("Occurrence for "+taxonList.get(j)+" inserted. Id="+occTmp.getId());
                         Integer id = lookupPlant(taxonList.get(j));
                         if (!id.equals(-1)) {
@@ -859,13 +862,15 @@
                     h.setTerritory(t);
                     h.setDeleted(0);
                     logger.info("Creating a shared habitat");
-                    database.executeInsert(h);//insert the shared habitat
+                    int habId = database.executeInsert(h);//insert the shared habitat
+                    h.setId(habId);
                     logger.debug("Shared habitat created. Id="+h.getId());
                         
                     for (int j = 0; j < taxonList.size(); j++) {
                         logger.info("Creating an Occurrence using the shared habitat");
                         Occurrence occ = prepareNewOccurrence(taxonList.get(j), h);//share the habitat
-                        database.executeInsert(occ);
+                        int occId = database.executeInsert(occ);
+                        occ.setId(occId);
                         logger.debug("Occurrence for "+taxonList.get(j)+" inserted. Id="+occ.getId());
                         
                         for (int k = 0; k < authorList.size(); k++) {

Modified: trunk/src/net/sf/plantlore/client/user/UserManager.java
===================================================================
--- trunk/src/net/sf/plantlore/client/user/UserManager.java	2006-06-04 15:42:24 UTC (rev 439)
+++ trunk/src/net/sf/plantlore/client/user/UserManager.java	2006-06-04 16:00:33 UTC (rev 440)
@@ -224,7 +224,8 @@
     
     public void addUserRecord (User user, Right right) {
         try {
-            database.executeInsert(right);
+            int rightId = database.executeInsert(right);
+            right.setId(rightId);
             database.executeInsert(user);
         } catch (RemoteException ex) {
             ex.printStackTrace();



From krater at berlios.de  Sun Jun  4 19:47:06 2006
From: krater at berlios.de (krater at berlios.de)
Date: Sun, 4 Jun 2006 19:47:06 +0200
Subject: [Plantlore-dev] r441 - in trunk/src/net/sf/plantlore: client client/checklist client/export client/export/builders client/export/component client/imports client/imports/parsers client/imports/table client/login server server/manager
Message-ID: <200606041747.k54Hl6id013344@sheep.berlios.de>

Author: krater
Date: 2006-06-04 19:46:47 +0200 (Sun, 04 Jun 2006)
New Revision: 441

Modified:
   trunk/src/net/sf/plantlore/client/MainConfig.java
   trunk/src/net/sf/plantlore/client/checklist/Checklist.java
   trunk/src/net/sf/plantlore/client/export/AbstractBuilder.java
   trunk/src/net/sf/plantlore/client/export/DefaultDirector.java
   trunk/src/net/sf/plantlore/client/export/ExportMng.java
   trunk/src/net/sf/plantlore/client/export/ExportTask.java
   trunk/src/net/sf/plantlore/client/export/Template.java
   trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java
   trunk/src/net/sf/plantlore/client/export/component/XFilter.java
   trunk/src/net/sf/plantlore/client/imports/AbstractParser.java
   trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
   trunk/src/net/sf/plantlore/client/imports/ImportMng.java
   trunk/src/net/sf/plantlore/client/imports/parsers/XMLParser.java
   trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
   trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
   trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
   trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
Log:
Minor changes (RMI+,L10N+)

Modified: trunk/src/net/sf/plantlore/client/MainConfig.java
===================================================================
--- trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -20,6 +20,7 @@
 import net.sf.plantlore.server.RMIServer;
 
 import org.apache.log4j.Logger;
+import org.dom4j.Attribute;
 import org.dom4j.Document;
 import org.dom4j.DocumentException;
 import org.dom4j.DocumentHelper;
@@ -34,11 +35,13 @@
  * @author fraktalek
  */
 public class MainConfig {
-    Logger logger;
-    Document document;
-    String file;
-    ArrayList<Column> columns = null;
-    ArrayList<DBInfo> dbinfos = null;
+    private Logger logger;
+    private Document document;
+    private String file;
+    private ArrayList<Column> columns = null;
+    private ArrayList<DBInfo> dbinfos = null;
+    private DBInfo selected = null;
+    private boolean selectAutomatically = false; 
     
     /** Creates a new instance of MainConfigParser */
     public MainConfig(String file) throws DocumentException {
@@ -104,7 +107,15 @@
     	int port, databasePort;
     	
     	int unnamedDatabase = 0;
+    	selectAutomatically = false;
     	
+    	Node login = document.selectSingleNode("/config/login");
+    	if(login != null && login instanceof Element) {
+    		Attribute attr = ((Element)login).attribute("auto");
+    		if( attr != null && "true".equalsIgnoreCase(attr.getValue()) )
+    			selectAutomatically = true;
+    	}
+    	
     	List columnList = document.selectNodes("//config/login/triplet");
     	Iterator it = columnList.iterator();
     	while (it.hasNext()) {
@@ -114,6 +125,8 @@
     		port = RMIServer.DEFAULT_PORT; databasePort = -1;
     		
     		Node n = (Node)it.next();
+    		
+    		
     		// Obtain the basic characteristic.
     		alias = n.valueOf("alias");
     		host = n.valueOf("host");
@@ -121,7 +134,7 @@
     		port = ( portNumber == null ? RMIServer.DEFAULT_PORT : portNumber.intValue() );
     		
     		// The database info.
-    		Node database = (Node) n.selectSingleNode("database");
+    		Node database = n.selectSingleNode("database");
     		if(database != null) {
     			databaseType = database.valueOf("engine");
     			databaseIdentifier = database.valueOf("identifier");
@@ -159,19 +172,41 @@
     				databaseType, databasePort, databaseIdentifier, databaseParameter, 
     				users, masterUser, masterPassword );
     		
+    		if( n instanceof Element ) {
+    			Attribute attr = ((Element)n).attribute("selected");
+    			if(attr != null && "true".equalsIgnoreCase(attr.getValue()) ) {
+    				selected = dbi;
+    				// System.out.println("SELECTED = " + dbi);
+    			}
+    		}
+    		
     		result.add(dbi);
     	}
     	return result;
     }
     
+    public boolean getSelectAutomatically() {
+    	return selectAutomatically;
+    }
+    
+    
+    public DBInfo getSelected() {
+    	return selected;
+    }
+    
     public void setColumns(ArrayList<Column> columns) {
         this.columns = columns;
     }
     
-    public void setDBInfos(ArrayList<DBInfo> dbinfos) {
+    public void setDBInfos(ArrayList<DBInfo> dbinfos, DBInfo selected) {
         this.dbinfos = dbinfos;
+        this.selected = selected;
     }
     
+    public void setSelectAutomatically(boolean automatically) {
+    	this.selectAutomatically = automatically;
+    }
+    
     private void storeColumns() {
         Node colsNode = document.selectSingleNode("//config/overview/columns");
         if (colsNode != null)
@@ -199,11 +234,18 @@
         org.dom4j.Element root = document.getRootElement();
         org.dom4j.Element login = root.addElement("login");
         
+        // Store the "Select Automatically" option.
+        login.addAttribute("auto", Boolean.toString(selectAutomatically));
+        
         for (int i = 0; i < dbinfos.size(); i++) {
             DBInfo dbi = dbinfos.get(i);
             
             // Server settings.
             Element triplet = login.addElement("triplet");
+            
+            if(dbi == selected)
+            	triplet.addAttribute("selected", "true");
+            
             if (dbi.getAlias() != null)
                 triplet.addElement("alias").setText(dbi.getAlias());
             if (dbi.getHost() != null)

Modified: trunk/src/net/sf/plantlore/client/checklist/Checklist.java
===================================================================
--- trunk/src/net/sf/plantlore/client/checklist/Checklist.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/checklist/Checklist.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -49,7 +49,7 @@
 			for(int i = 0; i < values.length; i++) 
 				values[i] = values[i].toString();
 		// Insert the values to the list.
-		setListData( (String[])values );
+		setListData( values );
 		// Remember the list.
 		original = (String[])values;
 		// Specify the default looks.

Modified: trunk/src/net/sf/plantlore/client/export/AbstractBuilder.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/AbstractBuilder.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/AbstractBuilder.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -83,18 +83,22 @@
 
 	/** Empty. */
 	public void startRecord() throws IOException {
+		// Not implemented
 	}
 
 	/** Empty. */
 	public void finishRecord() throws IOException {
+//		 Not implemented
 	}
 
 	/** Empty. */
 	public void header() throws IOException {
+//		 Not implemented
 	}
 
 	/** Empty. */
 	public void footer() throws IOException {
+//		 Not implemented
 	}
 
 	

Modified: trunk/src/net/sf/plantlore/client/export/DefaultDirector.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/DefaultDirector.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/DefaultDirector.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -112,7 +112,9 @@
 		if(rootTable != null) try { 
 			torso = (Record)rootTable.newInstance();
 			torso.createTorso();
-		} catch (Exception e) {}
+		} catch (Exception e) {
+			// What shall we do? The torso is not complete!
+		}
 	}
 	
 	

Modified: trunk/src/net/sf/plantlore/client/export/ExportMng.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMng.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/ExportMng.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -178,7 +178,9 @@
 	synchronized public void setDBLayer(DBLayer dblayer) {
 		if(query != null) try {
 			db.closeQuery(query);
-		} catch(RemoteException e) {}
+		} catch(RemoteException e) {
+			// Never mind.
+		}
 		db = dblayer;
 	}
 	
@@ -233,7 +235,9 @@
 		// Close the previous query!
 		if(this.query != null) try {
 			db.closeQuery(this.query); 
-		} catch (RemoteException e) {}
+		} catch (RemoteException e) {
+			// Never mind.
+		}
 		this.query = query;
 	}
 	

Modified: trunk/src/net/sf/plantlore/client/export/ExportTask.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportTask.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/ExportTask.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -61,15 +61,15 @@
 					while( true ) try {
 						execution.join(); 
 						break;
-					} catch(InterruptedException e) {}
+					} catch(InterruptedException e) { /* Do nothing...  */ }
 					// Perform the final cleanup.
 					exportInProgress = false;
 					try {
 						writer.close();
-					} catch(Exception e) {}
+					} catch(Exception e) { /* Never mind. */ }
 					try {
 						dblayer.closeQuery( exportQuery );
-					} catch(Exception e) {}
+					} catch(Exception e) {/* Never mind. */}
 					
 					logger.debug("Environment cleaned up.");
 					setChanged(); notifyObservers(this);

Modified: trunk/src/net/sf/plantlore/client/export/Template.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/Template.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/Template.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -41,7 +41,7 @@
 
 	
 	/** Create a new template. */
-	public Template() {}
+	public Template() {/* Nothing to be done. Just to have a default constructor. */}
 	
 	/** A copy constructor. */
 	public Template(Template template) {
@@ -87,7 +87,7 @@
 	
 	/** Select all not null columns (properties). */
 	public void setEverythingNN() {
-		
+		// Implementation missing!
 	}
 	
 	/** Select all properties of this <code>table</code>. */
@@ -95,7 +95,7 @@
 		try {
 			for( String column : ((Record)table.newInstance()).getProperties() )
 				set(table, column);
-		} catch(Exception e) {}
+		} catch(Exception e) {/* Not good :/. */}
 		return this;
 	}
 	
@@ -107,7 +107,7 @@
 			nnProperties.removeAll(record.getForeignKeys());
 			for( String column :  nnProperties )
 				set(table, column);
-		} catch(Exception e) {}
+		} catch(Exception e) {/* Not good. */}
 		return this;
 	}
 	
@@ -159,7 +159,7 @@
 					q.addProjection(PROJ_PROPERTY, (omitAlias ? property : Record.alias(table)+"."+property));
 					plan.add(new Pair<Class, String>(table, property));
 				}
-		} catch(Exception e) {}
+		} catch(Exception e) {/* Not good. */}
 	}
 	
 }

Modified: trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -107,6 +107,8 @@
     }
 
 	@Override
-	protected void output(Class table, String column, Object value) throws IOException {}
+	protected void output(Class table, String column, Object value) throws IOException {
+		// I do not need this method.
+	}
 
 }

Modified: trunk/src/net/sf/plantlore/client/export/component/XFilter.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/component/XFilter.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/export/component/XFilter.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -113,8 +113,9 @@
 	 * @see net.sf.plantlore.client.export.component.XFilter#hasExtension(String)
 	 */
 	public String suggestName(String filename) {
-		if(hasExtension(filename)) return filename;
-		else return filename + extensions.get(0);
+		if(hasExtension(filename)) 
+			return filename;
+		return filename + extensions.get(0);
 	}
 	
 }
\ No newline at end of file

Modified: trunk/src/net/sf/plantlore/client/imports/AbstractParser.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/AbstractParser.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/imports/AbstractParser.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -15,9 +15,13 @@
 	}
 	
 	
-	public void initialize() throws ParserException {}
+	public void initialize() throws ParserException {
+		// Unimplemented. A subclass may override it.
+	}
 	
-	public void cleanup() {}
+	public void cleanup() {
+		// Unimplemented. A subclass may override it.
+	}
 	
 	public boolean hasNextRecord() {
 		return false;

Modified: trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -757,40 +757,39 @@
 			}
 			return counterpart;
 		} 
+		
 		// The part of the record is from a common table.
-		else {
-			logger.debug("The record belongs to a common table "+record.getClass().getSimpleName());
-			// Insert all of its sub-records.
-			List<String> keys = record.getForeignKeys();
-			// Inserting a new AuthorOccurrence MUSTN'T cause the insertion of the Occurrence.
-			if(record instanceof AuthorOccurrence)
-				keys.remove(AuthorOccurrence.OCCURRENCE); 
-			for(String key : keys)
-				record.setValue( key, insert( (Record)record.getValue(key) ) );
-			
-			Record counterpart = null;
-			
-			// Try to find its counterpart (if it is in the database already).
-			// (The Habitat table is special, the relationship Occ->Habitat should always be 1:1.)
-			if( !(record instanceof Habitat) ) {
-				counterpart = findMatchInDB( record );
-			}
-			
-			// The record is not in the database.
-			if(counterpart == null) {
-				logger.debug("The record is not in the database. It will be inserted.");
-				// Insert it!
-				Integer newId = db.executeInsertInTransaction(record);
-				record.setId( newId );
-				return record;
-			}
-			// The record is in the database.
-			else {
-				logger.debug("The record is in the database already. It will be used.");
-				// Do not insert anything, use that record instead.
-				return counterpart;
-			}
+		logger.debug("The record belongs to a common table "+record.getClass().getSimpleName());
+		// Insert all of its sub-records.
+		List<String> keys = record.getForeignKeys();
+		// Inserting a new AuthorOccurrence MUSTN'T cause the insertion of the Occurrence.
+		if(record instanceof AuthorOccurrence)
+			keys.remove(AuthorOccurrence.OCCURRENCE); 
+		for(String key : keys)
+			record.setValue( key, insert( (Record)record.getValue(key) ) );
+		
+		Record counterpart = null;
+		
+		// Try to find its counterpart (if it is in the database already).
+		// (The Habitat table is special, the relationship Occ->Habitat should always be 1:1.)
+		if( !(record instanceof Habitat) ) {
+			counterpart = findMatchInDB( record );
 		}
+		
+		// The record is not in the database.
+		if(counterpart == null) {
+			logger.debug("The record is not in the database. It will be inserted.");
+			// Insert it!
+			Integer newId = db.executeInsertInTransaction(record);
+			record.setId( newId );
+			return record;
+		}
+		
+		// The record is in the database.
+		logger.debug("The record is in the database already. It will be used.");
+		// Do not insert anything, use that record instead.
+		return counterpart;
+		
 	}
 	
 	/**
@@ -845,6 +844,7 @@
 			}
 			return counterpart;
 		}
+		
 		/*
 		 * It is a little bit trickier now, because UPDATE may sometimes in fact
 		 * mean INSERT or nothing :). 

Modified: trunk/src/net/sf/plantlore/client/imports/ImportMng.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/ImportMng.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/imports/ImportMng.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -251,14 +251,14 @@
 					try {
 						current.join();
 						break;
-					}catch(InterruptedException e) {}
+					}catch(InterruptedException e) {/* Never mind. */}
 				}
 				// Perform the parser's final cleanup.	
 				parser.cleanup();
 				// Dispose of the reader.
 				try {
 					reader.close();
-				}catch(IOException e) {}
+				}catch(IOException e) {/* NEver mind. */}
 				
 				importInProgress = false;
 				logger.debug("Environment cleaned up.");
@@ -360,8 +360,8 @@
 		
 		if(fromFile == null || inDB == null)
 			return emptyTableModel;
-		else
-			return new RecordTable( inDB, fromFile );
+		
+		return new RecordTable( inDB, fromFile );
 	}
 	
 	/**
@@ -376,8 +376,8 @@
 		
 		if(problematic == null)
 			return emptyTableModel;
-		else
-			return new RecordTable( problematic );
+
+		return new RecordTable( problematic );
 	}
 	
 	/**

Modified: trunk/src/net/sf/plantlore/client/imports/parsers/XMLParser.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/parsers/XMLParser.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/imports/parsers/XMLParser.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -118,8 +118,8 @@
     		reconstruct( ao, currentAO );
     		return ao;
     	} 
-    	else 
-    		return occ.findSubrecord(table);
+ 
+   		return occ.findSubrecord(table);
     }
     
     
@@ -127,8 +127,8 @@
     public boolean hasNextPart(Class table) {
     	if(table == AuthorOccurrence.class && aoIterator.hasNext())
     		return true;
-    	else
-    		return false;
+
+    	return false;
     }
     
  

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportTask.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -87,6 +87,7 @@
 	 */
 	@Override
 	public void proceed() {
+		// Empty implementation. Just to make sure no one will try to resurrect this operation.
 	}
 	
 	
@@ -209,7 +210,7 @@
 			try {
 				if(q != null) 
 					db.closeQuery( q );
-			} catch(Exception re) {}
+			} catch(Exception re) {/* Never mind. */}
 			
 			logger.fatal("Import ended prematurely. "+count+" records processed ("+
 					inserted+" inserted, "+updated+" updated, "+deleted+" deleted).");
@@ -261,8 +262,8 @@
 	 */
 	protected void insert(Record record) 
 	throws RemoteException, DBLayerException {
-		db.executeInsert( record );
-
+		Integer newId = db.executeInsert( record );
+		record.setId( newId ); // It is not important here - these records won't be referenced (in here).
 	}
 	
 	/**

Modified: trunk/src/net/sf/plantlore/client/login/AuthCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/login/AuthCtrl.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -28,6 +28,7 @@
 		public void actionPerformed(ActionEvent arg0) {
 			view.next.setEnabled(false);
 			view.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
+			view.discard.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
 			String user = (view.user.getSelectedItem() != null) ? view.user.getSelectedItem().toString() : null;
 
 			model.connectToSelected(user, new String(view.password.getPassword()));

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -77,8 +77,14 @@
 		
 		for (DBInfo savedDBInfo: mainConfig.getDBinfos())
 			dbinfo.add(savedDBInfo);
-		
 		this.setChanged(); this.notifyObservers(UPDATE_LIST);
+
+		// Restore the last selected record.
+		selected = mainConfig.getSelected();
+		if(selected != null) {
+			this.setChanged();
+			this.notifyObservers( selected.clone() );
+		}
 	}
 	
 	/**
@@ -87,7 +93,7 @@
 	protected void save() {
 		logger.debug("Saving the list of databases.");
 		
-		mainConfig.setDBInfos(dbinfo);
+		mainConfig.setDBInfos(dbinfo, selected);
 		try {
 			mainConfig.save();
 		}catch(IOException e) {
@@ -285,12 +291,16 @@
 		worker.start();
 	}
 	
+	
 	/**
 	 * Cancel the login proces.
 	 *
 	 */
 	synchronized public void interrupt() {
-		worker.interrupt();
+		if(worker != null) {
+			worker.interrupt();
+			worker = null;
+		}
 		logout();
 		setChanged(); notifyObservers(L10n.getString("Login.Interrupted"));
 	}

Modified: trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java
===================================================================
--- trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/server/RMIRemoteDBLayerFactory.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -172,7 +172,7 @@
 		else try {
 			logger.warn(RemoteServer.getClientHost() + " attempts to destroy " +
 						"a database layer that has was not created by this factory OR attempts to destroy an already destroyed DBLayer!");
-		} catch(ServerNotActiveException e) {}
+		} catch(ServerNotActiveException e) {/* Should never happen. */}
 	}
 	
 	/** 
@@ -180,7 +180,7 @@
 	 */
 	synchronized void disconnectAll() {
 		for (ConnectionInfo info : clients.values()) 
-			try { disconnect(info.getDatabase()); } catch (Exception e) {}		
+			try { disconnect(info.getDatabase()); } catch (Exception e) {/* Never mind. */}		
 		// Clear the list of opened connections - none is now opened.
 		clients.clear();
 	}
@@ -205,7 +205,7 @@
 			// Destroy it properly
 			try { 
 				destroy(stub); 
-			} catch(RemoteException e) {}
+			} catch(RemoteException e) {/* What else can we do? */}
 		}
 	}
 

Modified: trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/server/manager/ServerCreateCtrl.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -83,14 +83,14 @@
 				}
 
 			} catch(final Exception e) {
-				java.awt.EventQueue.invokeLater(new Runnable() {
-					public void run() {
-						JOptionPane.showMessageDialog(null,
-								e.getMessage(),
-							    L10n.getString("Error.MissingInformation"),
-							    JOptionPane.ERROR_MESSAGE);						
-					}
-				});
+//				java.awt.EventQueue.invokeLater(new Runnable() {
+//					public void run() {
+//						JOptionPane.showMessageDialog(null,
+//								e.getMessage(),
+//							    L10n.getString("Error.MissingInformation"),
+//							    JOptionPane.ERROR_MESSAGE);						
+//					}
+//				});
 			}
 		}
 	}

Modified: trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-04 16:00:33 UTC (rev 440)
+++ trunk/src/net/sf/plantlore/server/manager/ServerMngCtrl.java	2006-06-04 17:46:47 UTC (rev 441)
@@ -55,15 +55,11 @@
 		}
 		public void actionPerformed(ActionEvent ae) {
 			model.terminateServer();
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					// Disable Terminate, Refresh and Kick buttons.
-					view.terminate.setEnabled(false);
-					view.refresh.setEnabled(false);
-					view.kick.setEnabled(false);
-					terminated = true;
-				}
-			});
+			// Disable Terminate, Refresh and Kick buttons.
+			view.terminate.setEnabled(false);
+			view.refresh.setEnabled(false);
+			view.kick.setEnabled(false);
+			terminated = true;
 		}
 	}
 	
@@ -87,14 +83,10 @@
 			if(icon != null) putValue(SMALL_ICON, icon);
 		}
 		public void actionPerformed(ActionEvent ae) {
-			java.awt.EventQueue.invokeLater(new Runnable() {
-				public void run() {
-					view.setVisible(false);
-					view.dispose();
-					if(terminated)
-						System.exit(0);
-				}
-			});
+			view.setVisible(false);
+			view.dispose();
+			if(terminated)
+				System.exit(0);
 		}
 	}
 



From fraktalek at berlios.de  Sun Jun  4 21:29:13 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Sun, 4 Jun 2006 21:29:13 +0200
Subject: [Plantlore-dev] r442 - trunk/src/net/sf/plantlore/client
Message-ID: <200606041929.k54JTDNA014694@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-04 21:29:09 +0200 (Sun, 04 Jun 2006)
New Revision: 442

Modified:
   trunk/src/net/sf/plantlore/client/AddEditView.form
   trunk/src/net/sf/plantlore/client/AddEditView.java
Log:
Use ordinary JComboBox for user and role choosing. (Temporary solution of the stolen focus).



Modified: trunk/src/net/sf/plantlore/client/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-04 17:46:47 UTC (rev 441)
+++ trunk/src/net/sf/plantlore/client/AddEditView.form	2006-06-04 19:29:09 UTC (rev 442)
@@ -58,11 +58,11 @@
                   <Group type="103" groupAlignment="0" attributes="0">
                       <Group type="102" alignment="0" attributes="0">
                           <Component id="yearSpinner" min="-2" pref="73" max="-2" attributes="0"/>
-                          <EmptySpace pref="204" max="32767" attributes="0"/>
+                          <EmptySpace pref="171" max="32767" attributes="0"/>
                           <Component id="checklistButton" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <Component id="jScrollPane3" alignment="0" pref="354" max="32767" attributes="1"/>
-                      <Component id="jScrollPane1" alignment="0" pref="354" max="32767" attributes="0"/>
+                      <Component id="jScrollPane3" alignment="0" pref="336" max="32767" attributes="1"/>
+                      <Component id="jScrollPane1" alignment="0" pref="336" max="32767" attributes="0"/>
                   </Group>
                   <EmptySpace min="-2" pref="85" max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="1" attributes="0">
@@ -71,12 +71,12 @@
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="1" attributes="0">
-                      <Component id="townComboBox" pref="241" max="32767" attributes="1"/>
+                      <Component id="townComboBox" pref="209" max="32767" attributes="1"/>
                       <Group type="102" alignment="0" attributes="0">
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
                               <Component id="extendedButton" alignment="0" min="-2" max="-2" attributes="0"/>
-                              <Component id="jScrollPane2" alignment="0" pref="241" max="32767" attributes="1"/>
+                              <Component id="jScrollPane2" alignment="0" pref="209" max="32767" attributes="1"/>
                           </Group>
                       </Group>
                   </Group>
@@ -308,7 +308,7 @@
                                   <EmptySpace max="-2" attributes="0"/>
                                   <Component id="jPanel6" max="32767" attributes="1"/>
                               </Group>
-                              <Component id="jPanel5" pref="561" max="32767" attributes="1"/>
+                              <Component id="jPanel5" max="32767" attributes="1"/>
                           </Group>
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="1" attributes="0">
@@ -341,7 +341,7 @@
                       <Component id="jPanel4" min="0" max="32767" attributes="1"/>
                       <Component id="jPanel10" alignment="0" max="32767" attributes="1"/>
                   </Group>
-                  <EmptySpace pref="276" max="32767" attributes="0"/>
+                  <EmptySpace pref="273" max="32767" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -400,7 +400,7 @@
                               </Group>
                           </Group>
                           <Component id="dayLabel" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="dayChooser" alignment="0" pref="132" max="32767" attributes="0"/>
+                          <Component id="dayChooser" alignment="0" pref="135" max="32767" attributes="0"/>
                       </Group>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
@@ -679,7 +679,7 @@
                           <Component id="herbariumTextField" alignment="0" pref="113" max="32767" attributes="1"/>
                           <Component id="sourceCombo" alignment="0" pref="171" max="32767" attributes="1"/>
                       </Group>
-                      <EmptySpace pref="106" max="32767" attributes="0"/>
+                      <EmptySpace pref="76" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -690,7 +690,7 @@
                           <Component id="sourceLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="sourceCombo" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace pref="14" max="32767" attributes="0"/>
+                      <EmptySpace pref="12" max="32767" attributes="0"/>
                       <Group type="103" groupAlignment="1" attributes="0">
                           <Component id="publicationLabel" min="-2" max="-2" attributes="0"/>
                           <Component id="publicationCombo" min="-2" max="-2" attributes="0"/>
@@ -807,7 +807,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane4" pref="230" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="200" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -815,7 +815,7 @@
             <DimensionLayout dim="1">
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
-                      <Component id="jScrollPane4" pref="93" max="32767" attributes="0"/>
+                      <Component id="jScrollPane4" pref="96" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -905,7 +905,7 @@
                           <Component id="longitudeLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           <Component id="longitudeTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace pref="42" max="32767" attributes="0"/>
+                      <EmptySpace pref="45" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -1059,7 +1059,7 @@
               <Group type="103" groupAlignment="0" attributes="0">
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jScrollPane5" pref="230" max="32767" attributes="0"/>
+                      <Component id="jScrollPane5" pref="200" max="32767" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
               </Group>
@@ -1112,10 +1112,10 @@
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="389" max="32767" attributes="0"/>
+                      <EmptySpace pref="314" max="32767" attributes="0"/>
                   </Group>
                   <Group type="102" alignment="1" attributes="0">
-                      <EmptySpace pref="327" max="32767" attributes="0"/>
+                      <EmptySpace pref="235" max="32767" attributes="0"/>
                       <Component id="preloadAuthorsCheckBox" min="-2" max="-2" attributes="0"/>
                       <EmptySpace max="-2" attributes="0"/>
                   </Group>
@@ -1174,7 +1174,7 @@
               <Group type="102" alignment="1" attributes="0">
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="helpButton" linkSize="12" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace pref="626" max="32767" attributes="0"/>
+                  <EmptySpace pref="598" max="32767" attributes="0"/>
                   <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>

Modified: trunk/src/net/sf/plantlore/client/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-04 17:46:47 UTC (rev 441)
+++ trunk/src/net/sf/plantlore/client/AddEditView.java	2006-06-04 19:29:09 UTC (rev 442)
@@ -28,6 +28,7 @@
 import javax.swing.SpinnerNumberModel;
 import javax.swing.table.AbstractTableModel;
 import javax.swing.table.TableColumn;
+import net.sf.plantlore.common.AutoComboBox;
 import net.sf.plantlore.common.AutoComboBoxNG3;
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.Pair;
@@ -759,20 +760,37 @@
         TableColumn tc4 = authorTable.getColumnModel().getColumn(3);
 
         JComboBox cb;
+        /*if (model.getAuthors() == null) 
+            cb = new AutoComboBox();
+        else
+            cb = new AutoComboBox(model.getAuthors());
+        
+        ((AutoComboBox)cb).setStrict(true);
+        tc1.setCellEditor(new DefaultCellEditor(cb));  
+        
+        if (model.getAuthorRoles() == null) 
+            cb = new AutoComboBox();
+        else
+            cb = new AutoComboBox(model.getAuthorRoles());
+        
+        ((AutoComboBox)cb).setStrict(true);
+        tc2.setCellEditor(new DefaultCellEditor(cb));
+*/      
+//        
         if (model.getAuthors() == null) 
-            cb = new AutoComboBoxNG3();
+            cb = new JComboBox();
         else
-            cb = new AutoComboBoxNG3(model.getAuthors());
+            cb = new JComboBox(model.getAuthors());
         
         tc1.setCellEditor(new DefaultCellEditor(cb));  
         
         if (model.getAuthorRoles() == null) 
-            cb = new AutoComboBoxNG3();
+            cb = new JComboBox();
         else
-            cb = new AutoComboBoxNG3(model.getAuthorRoles());
+            cb = new JComboBox(model.getAuthorRoles());
         
         tc2.setCellEditor(new DefaultCellEditor(cb));
-        
+//  
         ButtonEditor be = new ButtonEditor(model);
         tc3.setCellEditor(be);
         tc3.setCellRenderer(be);



From kovo at berlios.de  Sun Jun  4 22:22:24 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Sun, 4 Jun 2006 22:22:24 +0200
Subject: [Plantlore-dev] r443 - in trunk/src/net/sf/plantlore: common help
Message-ID: <200606042022.k54KMOFT017521@sheep.berlios.de>

Author: kovo
Date: 2006-06-04 22:22:23 +0200 (Sun, 04 Jun 2006)
New Revision: 443

Modified:
   trunk/src/net/sf/plantlore/common/PlantloreHelp.java
   trunk/src/net/sf/plantlore/help/jhelpset.hs
   trunk/src/net/sf/plantlore/help/jhelpset_cs_CZ.hs
   trunk/src/net/sf/plantlore/help/jhelpset_en.hs
Log:
Update of Help - window with help is now bigger and has correct title. It should also be possible to use help when Plantlore is run from the command line using jar file.

Modified: trunk/src/net/sf/plantlore/common/PlantloreHelp.java
===================================================================
--- trunk/src/net/sf/plantlore/common/PlantloreHelp.java	2006-06-04 19:29:09 UTC (rev 442)
+++ trunk/src/net/sf/plantlore/common/PlantloreHelp.java	2006-06-04 20:22:23 UTC (rev 443)
@@ -1,13 +1,8 @@
-/*
- * PlantloreHelp.java
- *
- * Created on 15. leden 2006, 3:31
- *
- */
 
 package net.sf.plantlore.common;
 
 import java.awt.Component;
+import java.awt.Dimension;
 import java.net.URL;
 import javax.help.HelpBroker;
 import javax.help.HelpSet;
@@ -20,16 +15,20 @@
 import org.apache.log4j.Logger;
 
 /**
- * Class for invoking Help viewer.
+ *  Class for invoking Help viewer. This class should never be instatiated and initialize() method 
+ *  should be called to initialize help when application is started. This class also contains 
+ *  constants with help mapping, therefore if you need to modify help structure, modify these constants.
  *
- * @author Tomas Kovarik
- * @version 0.1, Jan 15, 2006
+ *  For details about JavaHelp system, refer to the following pages:
+ *  http://java.sun.com/products/javahelp/ - JavaHelp home a java.sun.com
+ *  http://docs.sun.com/source/819-0913/dev/csh.html - implementation of context-sensitive help
+ *
+ *  @author Tomas Kovarik
+ *  @version 1.0, June 4, 2006
  */
-public class PlantloreHelp {
-    
+public class PlantloreHelp {    
     // File containing Java Help settings
-    private static final String HELPFILE = "jhelpset.hs";
-    
+    private static final String HELPFILE = "net/sf/plantlore/help/jhelpset.hs";    
     // Basic information about Plantlore
     public static final String PLANTLORE_OVERVIEW       = "plantlore.overview";
     // Resources available for Plantlore users
@@ -85,14 +84,20 @@
 
     /* Instance of a logger */
     private static Logger logger = Logger.getLogger(PlantloreHelp.class.getPackage().getName());
-
+    /* Instance of HelpSet and HelpBroker. These variables are initiliazed by initialize() method */
     private static HelpBroker hb;
     private static HelpSet hs;
     
     /** Creates a new instance of PlantloreHelp */
     public PlantloreHelp() {
     }
-
+    
+    /**
+     *  Initialize Help (using JavaHelp 2.0). This method loads help configuration (jhelpset.hs)
+     *  and creates HelpBroker.
+     *
+     *  @throws PlantloreException in case HelpSet could not be found and/or loaded properly
+     */
     public static void initialize() throws PlantloreException {
         try {
             // Get the classloader of this class.
@@ -100,22 +105,51 @@
             URL url = HelpSet.findHelpSet(cl, HELPFILE, L10n.getCurrentLocale());
             // Create a new JHelp object with a new HelpSet.        
             hs = new HelpSet(cl, url);
-            // Create the HelpBroker
+            hs.setTitle("Plantlore Help");            
+            // Create the HelpBroker            
             hb = hs.createHelpBroker();
+            hb.setSize(new Dimension(800,600));
         } catch (HelpSetException e) {
             logger.error("Unable to initialize help: "+e.getMessage());
             throw new PlantloreException("Unable to initialize help: "+e.getMessage());
         }        
     }
     
+    /**
+     *  Associate help with the given button (any descendant of javax.swing.AbstractButton or 
+     *  java.awt.Button). Assigns given help section to the button and creates ActionListener
+     *  for the button. In case the second argument is not a descendant of the mentioned classes,
+     *  IllegalArgumentException is thrown.
+     *
+     *  @param section  section of help we want to display. Use constants defined in this class
+     *  @param button   instance of javax.swing.AbstractButton or java.awt.Button or any of their
+     *                  descendants that we want to associate with the given help section.
+     */
     public static void addButtonHelp(String section, Component button) {
         hb.enableHelpOnButton(button, section, hs);        
     }
     
+    /**
+     *  Generic method for enabling help for any descendant of Component class.
+     *
+     *  @param section  section of help we want to display. Use constants defined in this class.
+     *  @param comp     component for which we want to enable help. This can be any descendant of
+     *                  Component class
+     */
     public static void addComponentHelp(String section, Component comp) {
         hb.enableHelp(comp, section, hs);
     }
     
+    /**
+     *  Add context-sensitive help to the given component. The component will display appropriate
+     *  section of help when Help Key is pressed (on Windows platform this should be F1 key). The 
+     *  component must have focus for this feature to work. If you want to display help for the whole
+     *  dialog window (no matter which of the components has focus, use dialog's RootPane as an
+     *  argument for this method)
+     *
+     *  @param section  section of help we want to display. Use constants defined in this class.
+     *  @param comp     component for which we want to register context-sensitive help
+     */
     public static void addKeyHelp(String section, Component comp) {
         hb.enableHelpKey(comp, section, hs);
     }   

Modified: trunk/src/net/sf/plantlore/help/jhelpset.hs
===================================================================
--- trunk/src/net/sf/plantlore/help/jhelpset.hs	2006-06-04 19:29:09 UTC (rev 442)
+++ trunk/src/net/sf/plantlore/help/jhelpset.hs	2006-06-04 20:22:23 UTC (rev 443)
@@ -24,4 +24,14 @@
       <type>javax.help.SearchView</type>
       <data engine="com.sun.java.help.search.DefaultSearchEngine">JavaHelpSearch</data>
     </view>
+    <presentation default=true>
+       <name>main window</name>
+       <title>Plantlore Help</title>
+       <location x="200" y="200" />
+       <toolbar>
+           <helpaction>javax.help.BackAction</helpaction>
+           <helpaction>javax.help.ForwardAction</helpaction>
+           <helpaction image="homeicon">javax.help.HomeAction</helpaction>
+       </toolbar>
+   </presentation>
   </helpset>

Modified: trunk/src/net/sf/plantlore/help/jhelpset_cs_CZ.hs
===================================================================
--- trunk/src/net/sf/plantlore/help/jhelpset_cs_CZ.hs	2006-06-04 19:29:09 UTC (rev 442)
+++ trunk/src/net/sf/plantlore/help/jhelpset_cs_CZ.hs	2006-06-04 20:22:23 UTC (rev 443)
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+?<?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <!DOCTYPE helpset PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 1.0//EN" "http://java.sun.com/products/javahelp/helpset_1_0.dtd">
   <helpset version="1.0">
     <title>N?pov?da Plantlore</title>
@@ -24,4 +24,14 @@
       <type>javax.help.SearchView</type>
       <data engine="com.sun.java.help.search.DefaultSearchEngine">JavaHelpSearch</data>
     </view>
-	  </helpset>
+    <presentation default=true>
+       <name>main window</name>
+       <title>Plantlore - Napoveda</title>
+       <location x="200" y="200" />
+       <toolbar>
+           <helpaction>javax.help.BackAction</helpaction>
+           <helpaction>javax.help.ForwardAction</helpaction>
+           <helpaction image="homeicon">javax.help.HomeAction</helpaction>
+       </toolbar>
+   </presentation>
+</helpset>

Modified: trunk/src/net/sf/plantlore/help/jhelpset_en.hs
===================================================================
--- trunk/src/net/sf/plantlore/help/jhelpset_en.hs	2006-06-04 19:29:09 UTC (rev 442)
+++ trunk/src/net/sf/plantlore/help/jhelpset_en.hs	2006-06-04 20:22:23 UTC (rev 443)
@@ -24,4 +24,14 @@
       <type>javax.help.SearchView</type>
       <data engine="com.sun.java.help.search.DefaultSearchEngine">JavaHelpSearch</data>
     </view>
+    <presentation default=true>
+       <name>main window</name>
+       <title>Plantlore Help</title>
+       <location x="200" y="200" />
+       <toolbar>
+           <helpaction>javax.help.BackAction</helpaction>
+           <helpaction>javax.help.ForwardAction</helpaction>
+           <helpaction image="homeicon">javax.help.HomeAction</helpaction>
+       </toolbar>
+   </presentation>
   </helpset>



From kovo at berlios.de  Sun Jun  4 23:00:21 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Sun, 4 Jun 2006 23:00:21 +0200
Subject: [Plantlore-dev] r444 - in trunk/src/net/sf/plantlore: middleware server
Message-ID: <200606042100.k54L0Lo4023265@sheep.berlios.de>

Author: kovo
Date: 2006-06-04 23:00:19 +0200 (Sun, 04 Jun 2006)
New Revision: 444

Modified:
   trunk/src/net/sf/plantlore/middleware/DBLayer.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Add executeUpdateInTransactionHistory() method to DBLayer (this method executes update query using a long running transaction without saving history). Add some JavaDoc comments. JavaDoc for DBLayer interface and HibernateDBLayer still needs to be updated.

Modified: trunk/src/net/sf/plantlore/middleware/DBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-04 20:22:23 UTC (rev 443)
+++ trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-04 21:00:19 UTC (rev 444)
@@ -86,6 +86,19 @@
     public void executeUpdateHistory(Object data) throws DBLayerException, RemoteException;
 
     /**
+     *  Execute DB update using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and DOES NOT save history
+     *
+     *  @param data holder object with the record we want to update
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case network connection failed
+     */
+    public void executeUpdateInTransactionHistory(Object data) throws DBLayerException, RemoteException;
+    
+    /**
      *  Get more rows from the current result set.
      *
      *  @param resultId id of the result from which we want to read

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 20:22:23 UTC (rev 443)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-04 21:00:19 UTC (rev 444)
@@ -499,6 +499,45 @@
     }
     
     /**
+     *  Execute DB update using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and DOES NOT save history
+     *
+     *  @param data holder object with the record we want to update
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case network connection failed
+     */
+    public void executeUpdateInTransactionHistory(Object data) throws DBLayerException, RemoteException {
+        // Check whether we are connected to the database
+        if (sessionFactory == null) {
+            logger.warn("SessionFactory not avilable. Not connected to the database.");
+            DBLayerException ex = new DBLayerException("SessionFactory not available. Not connected to the database.");
+            ex.setError(ex.ERROR_CONNECT, null);
+            throw ex;
+        }
+        // Modify the input data - UPDATEWHEN and UPDATEWHO where applicable
+        if (data instanceof Occurrence) {
+            Occurrence occ = (Occurrence)data;
+            occ.setUpdatedWhen(new java.util.Date());
+            occ.setUpdatedWho(this.plantloreUser);
+            data = occ;
+        }        
+        // Check whether we have rights for this operation
+        checkRights(data, UPDATE);        
+        // Modify the input data - UPDATEWHEN and UPDATEWHO where applicable
+        if (data instanceof Occurrence) {
+            Occurrence occ = (Occurrence)data;
+            occ.setUpdatedWhen(new java.util.Date());
+            occ.setUpdatedWho(this.plantloreUser);
+            data = occ;
+        }        
+        // Save item into the database
+        txSession.update(data);        
+    }
+    
+    /**
      *  Get more rows from the current result set.
      *
      *  @param resultId id of the result from which we want to read
@@ -666,6 +705,17 @@
         return stub;
     }    
     
+    /**
+     *  Create new subquery (SQL "subselect"). To work with this query, use methods of the SelectQuery
+     *  interface.
+     *
+     *  @param classname classname of the holder object we want to use for the select.
+     *  @param slias alias used for the holder specified in the first argument
+     *  @return new instance of subquery
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */
     public SelectQuery createSubQuery(Class classname, String alias) throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -674,7 +724,6 @@
             ex.setError(ex.ERROR_CONNECT, null);
             throw ex;
         }
-        System.out.println("CREATE NEW SUBQUERY");
         SelectQuery query = new SubQueryImplementation(classname, alias), 
         	stub = query;
         
@@ -707,7 +756,7 @@
             tx = session.beginTransaction();
             // Execute detached criteria query
             sq.setProjectionList();
-            res = sq.getCriteria().scroll(); // retrieve Criteria from SelectQuery
+                res = sq.getCriteria().scroll(); // retrieve Criteria from SelectQuery
             // Commit transaction
             tx.commit();                                      
         } catch (HibernateException e) {
@@ -815,6 +864,15 @@
         return this.rights;
     }
 
+    /**
+     *  Begin long running transaction. in the current implementation, there can be only one long
+     *  running transaction at a time.
+     *
+     *  @return true if transaction was started, false if there already is a long running transaction
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */
     synchronized public boolean beginTransaction() throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -833,7 +891,16 @@
         this.longTx = this.txSession.beginTransaction();        
         return true;                    // Transaction succesfully started
     }
-    
+
+    /**
+     *  Commit long running transaction. In the current implementation, there can be only one long
+     *  running transaction at a time.
+     *
+     *  @return true if commit was successful, false if there is no long running transaction
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */    
     public boolean commitTransaction() throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -850,9 +917,21 @@
         this.longTx.commit();
         // Set the transaction object to null
         this.longTx = null;
+        // Close the session
+        this.txSession.close();
         return true;
     }
     
+    /**
+     *  Rollback long running transaction. In the current implementation, there can be only one 
+     *  long running transaction is possible. All the DB changes made by *InHistory() methods will
+     *  be rolled back.
+     *
+     *  @return true if rollback was successful, false if the long transaction is not in progress
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */
     public boolean rollbackTransaction() throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -868,10 +947,24 @@
         // Rollback the transaction
         this.longTx.rollback();
         // Set the transaction object to null
-        this.longTx = null;        
+        this.longTx = null;
+        // Close the session
+        this.txSession.close();        
         return true;        
     }
-    
+
+    /**
+     *  Execute DB insert using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges, saves history and updates
+     *  the holder with the author (CCREATEDWHO) and time of creation (CREATEDWHEN).
+     *
+     *  @param data holder object with the record we want to insert
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */    
     public int executeInsertInTransaction(Object data) throws DBLayerException, RemoteException {
         int recordId;
         
@@ -930,6 +1023,17 @@
         return recordId;        
     }
     
+    /**
+     *  Execute DB update using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and saves history
+     *
+     *  @param data holder object with the record we want to update
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case network connection failed
+     */
     public void executeUpdateInTransaction(Object data) throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -946,22 +1050,31 @@
             data = occ;
         }        
         // Check whether we have rights for this operation
-        checkRights(data, UPDATE);
-        
+        checkRights(data, UPDATE);        
         // Modify the input data - UPDATEWHEN and UPDATEWHO where applicable
         if (data instanceof Occurrence) {
             Occurrence occ = (Occurrence)data;
             occ.setUpdatedWhen(new java.util.Date());
             occ.setUpdatedWho(this.plantloreUser);
             data = occ;
-        }
-        
+        }        
         // Save history record for this change
         saveHistory(txSession, data, UPDATE, null);
         // Save item into the database
         txSession.update(data);
     }
     
+    /**
+     *  Execute DB delete using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and saves history
+     *
+     *  @param data holder object with the record we want to delete
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the delete
+     *  @throws RemoteException in case network connection failed
+     */
     public void executeDeleteInTransaction(Object data) throws DBLayerException, RemoteException {
         // Check whether we are connected to the database
         if (sessionFactory == null) {
@@ -1826,12 +1939,12 @@
     }
    
     // TODO: IS IT OK TO OVERRIDE THIS METHOD?
-    public void destroy() {        
+    public void destroy() throws RemoteException {
         if (this.queries.size() > 0) {
             logger.warn(this.queries.size()+" queries were left unclosed in the DBLayer");
         }
     }
-    
+
     //===============================================================
     // What happens to unreferenced objects? They get buried by the untertaker!
     



From admin at berlios.de  Sun Jun  4 23:42:14 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 4 Jun 2006 23:42:14 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7751] Simplify the Add triplet dialog
Message-ID: <200606042142.k54LgEij016052@unicorn.berlios.de>

Bug #7751, was updated on 2006-Jun-04 23:42
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Open
Resolution: None
Bug Group: RFE
Priority: 3
Submitted by: tkovarik
Assigned to : krater
Summary: Simplify the Add triplet dialog

Details: The add triplet (now called DBInfo) dialog could be made more simple and user friendly. Since users connect either to a local database or a remote server, I suggest that the items in the dialog are divided into two groups - Local database and Remote database. This can be done for example by two tabs in the dialog. Each of the two options would have only those fields neccessary for that type of login (for example masterlogin and masterpassword are not neccessary for remote connection).
This feature could be implemented in the 2.0 version.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7751&group_id=5975


From fraktalek at berlios.de  Mon Jun  5 00:16:41 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Mon, 5 Jun 2006 00:16:41 +0200
Subject: [Plantlore-dev] r445 - in trunk/src/net/sf/plantlore: client l10n
Message-ID: <200606042216.k54MGftd032669@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-05 00:16:39 +0200 (Mon, 05 Jun 2006)
New Revision: 445

Modified:
   trunk/src/net/sf/plantlore/client/AddEdit.java
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
User is now informed about insufficient rights to Edit, Delete or Add records.
This includes adding new occurrences from edit dialog.



Modified: trunk/src/net/sf/plantlore/client/AddEdit.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-04 22:16:39 UTC (rev 445)
@@ -921,7 +921,7 @@
             return false;
     }
     
-    public Pair<Boolean,String> checkData() {
+    public Pair<Boolean,String> checkData() throws RemoteException {
         if (authorList.size() < 1)
             return new Pair<Boolean,String>(false, "You have to add at least one author!");
         else {
@@ -933,6 +933,10 @@
         if (taxonList == null || taxonList.size() < 1)
             return new Pair<Boolean,String>(false, "You have to add at least one taxon!");
         
+        if (editMode && taxonList.size() > 1 && database.getUserRights().getAdd() != 1) { //the user is not allowed to add new records
+            return new Pair<Boolean,String>(false, L10n.getString("AddEdit.InsufficientAddRights"));
+        }
+        
         Pair<Pair<String,Integer>,String> ai, aj;
         for (int i=0; i < authorList.size() ; i++) {
             ai = authorList.get(i);

Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-04 22:16:39 UTC (rev 445)
@@ -30,6 +30,7 @@
 import net.sf.plantlore.common.record.Publication;
 import net.sf.plantlore.common.record.Right;
 import net.sf.plantlore.common.record.Territory;
+import net.sf.plantlore.common.record.User;
 import net.sf.plantlore.common.record.Village;
 import net.sf.plantlore.l10n.L10n;
 
@@ -760,6 +761,50 @@
         
         return task;
     }
+    
+        public boolean isEditAllowed(int occId) throws RemoteException, DBLayerException {
+            User user = database.getUser();
+            Right rights = database.getUserRights();
+
+            if (rights.getAdministrator() == 1) {
+                logger.debug("This user is an administrator which allows him to edit this record.");
+                return true;
+            }
+            
+            if (rights.getEditAll() == 1) {
+                logger.debug("This user can edit all records which means that this one too.");
+                return true;               
+            }
+            
+            SelectQuery sq = database.createQuery(Occurrence.class);
+            sq.createAlias(Occurrence.CREATEDWHO,"cw");
+            sq.addProjection(PlantloreConstants.PROJ_PROPERTY,"cw."+User.ID);
+            sq.addRestriction(PlantloreConstants.RESTR_EQ,Occurrence.ID, null, occId, null);
+            int resId = database.executeQuery(sq);
+            int resCount = database.getNumRows(resId);
+            assert resCount == 1;
+            if (resCount == 0)
+                throw new DBLayerException("The record is no longer in the database.");
+            Object[] obj = database.more(resId, 0, 0);
+            Object[] res = (Object[])obj[0];
+            String userId = ""+res[0];            
+            logger.debug("Occurrence id "+occId+" was created by user id "+userId);
+            if (user.getId().equals(res[0])) {
+                logger.debug("It was this user who created the record. Therefore he is allowed to edit it.");
+                return true;
+            }
+            String[] editableIds = rights.getEditGroup().split(",");          
+            for (String id : editableIds) {
+                if (userId.equals(id)) {
+                    logger.debug("This user is allowed to edit this user's record.");
+                    return true;
+                } 
+            }
+            
+            logger.debug("This user is NOT allowed to edit this record.");
+            return false;                
+        }
+    
 }
 
 

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-04 22:16:39 UTC (rev 445)
@@ -10,6 +10,7 @@
 import java.awt.Component;
 import java.awt.Cursor;
 import java.awt.Frame;
+import java.awt.HeadlessException;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.FocusListener;
@@ -96,6 +97,8 @@
 import net.sf.plantlore.client.login.Login;
 import net.sf.plantlore.client.login.LoginCtrl;
 import net.sf.plantlore.client.login.LoginView;
+import net.sf.plantlore.common.record.Right;
+import net.sf.plantlore.common.record.User;
 import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.middleware.DBLayer;
 import net.sf.plantlore.middleware.SelectQuery;
@@ -581,7 +584,16 @@
             //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Add"));            
         } 
 
-        public void actionPerformed(ActionEvent actionEvent) {                
+        public void actionPerformed(ActionEvent actionEvent) {         
+            try {
+                if (model.getDatabase().getUserRights().getAdd() != 1) {
+                    JOptionPane.showMessageDialog(view, L10n.getString("AddEdit.InsufficientAddRights"),L10n.getString("AddEdit.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
+                    return;
+                }
+            } catch (RemoteException ex) {
+                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+ex.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                logger.error(ex);
+            }
             addModel.clear();
             addView.setVisible(true);
         }
@@ -596,10 +608,15 @@
             putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E, ActionEvent.CTRL_MASK));
             //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Edit"));            
         } 
-
+        
         public void actionPerformed(ActionEvent actionEvent) {
             Object[] row = model.getSelectedRow();
+            
             try {
+                if (!model.isEditAllowed(model.getSelectedOccurrence())) {
+                    JOptionPane.showMessageDialog(view, L10n.getString("AddEdit.InsufficientEditRights"),L10n.getString("AddEdit.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
+                    return;
+                }
                 editModel.setRecord((Integer) row[row.length-1]);
             } catch (DBLayerException ex) {
                 JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+ex.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
@@ -628,6 +645,27 @@
             Selection selection = model.getTableModel().getSelection();
             Object[] arg = { selection.values().size() };
             
+            if (arg[0].equals(0)) {
+                JOptionPane.showMessageDialog(view, L10n.getString("Message.CheckAnOccurrence"),L10n.getString("Message.CheckAnOccurrenceTitle"),JOptionPane.INFORMATION_MESSAGE);
+                return;                
+            }
+            
+            try {
+                for (Integer occId : selection.values())
+                    if (!model.isEditAllowed(occId)) {
+                        JOptionPane.showMessageDialog(view, L10n.getString("Delete.InsufficientRights"), L10n.getString("Delete.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
+                        return;
+                    }
+            } catch (RemoteException ex) {  
+                logger.error("Remote problem: "+ex);
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+            } catch (DBLayerException ex) {
+                logger.error("Database problem: "+ex);
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+            }
+            
             int choice = JOptionPane.showConfirmDialog(view, 
                     L10n.getFormattedString("Message.DeleteRecords",arg),
                     L10n.getString("Message.DeleteRecordsTitle"),
@@ -759,7 +797,7 @@
         public void actionPerformed(ActionEvent actionEvent) {
             try {
                 if (model.getTableModel().getSelection().values().size() < 1) {
-                    JOptionPane.showMessageDialog(view, "Check at least one occurrence, please.");
+                    JOptionPane.showMessageDialog(view, L10n.getString("Message.CheckAnOccurrence"),L10n.getString("Message.CheckAnOccurrenceTitle"),JOptionPane.INFORMATION_MESSAGE);
                     return;
                 }
 
@@ -805,6 +843,7 @@
                 ProgressBar pb = new ProgressBar(task, view, true) {
                     public void exceptionHandler(final Exception ex) {
                         logger.error("Error while filling jasper report in SchedaAction: "+ex);
+                        ex.printStackTrace();
                         SwingUtilities.invokeLater(new Runnable() {
                             public void run() {
                                 JOptionPane.showMessageDialog(view.getParent(), L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);            
@@ -826,6 +865,7 @@
             } catch(Exception ex) { // Unreachable CATCH block
                 logger.error("Broken report: "+ex);
                 JOptionPane.showMessageDialog(view,L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);
+                ex.printStackTrace();
             }
         }
     }

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-04 22:16:39 UTC (rev 445)
@@ -1275,3 +1275,17 @@
 Server.Info.Terminated = Server terminated (clients disconnected).
 
 
+
+AddEdit.InsufficientEditRights=You don't have sufficient rights to edit this record.
+
+AddEdit.InsufficientAddRights=You don't have sufficient rights to add new records.
+
+AddEdit.InsufficientRightsTitle=Insufficient rights
+
+Message.CheckAnOccurrence=Check at least one occurrence, please.
+
+Message.CheckAnOccurrenceTitle=No record checked
+
+Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
+
+Delete.InsufficientRightsTitle=Insufficient rights

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-04 22:16:39 UTC (rev 445)
@@ -827,3 +827,17 @@
 Detail.HabNoteTitle=Habitat note
 
 Detail.PlaceDescriptionTitle=Place description
+
+AddEdit.InsufficientEditRights=You don't have sufficient rights to edit this record.
+
+AddEdit.InsufficientAddRights=You don't have sufficient rights to add new records.
+
+AddEdit.InsufficientRightsTitle=Insufficient rights
+
+Message.CheckAnOccurrence=Check at least one occurrence, please.
+
+Message.CheckAnOccurrenceTitle=No record checked
+
+Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
+
+Delete.InsufficientRightsTitle=Insufficient rights

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-04 21:00:19 UTC (rev 444)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-04 22:16:39 UTC (rev 445)
@@ -895,3 +895,17 @@
 Detail.HabNoteTitle=Habitat note
 
 Detail.PlaceDescriptionTitle=Place description
+
+AddEdit.InsufficientEditRights=You don't have sufficient rights to edit this record.
+
+AddEdit.InsufficientAddRights=You don't have sufficient rights to add new records.
+
+AddEdit.InsufficientRightsTitle=Insufficient rights
+
+Message.CheckAnOccurrence=Check at least one occurrence, please.
+
+Message.CheckAnOccurrenceTitle=No record checked
+
+Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
+
+Delete.InsufficientRightsTitle=Insufficient rights



From admin at berlios.de  Mon Jun  5 00:25:03 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 00:25:03 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7717] Rights not implemented
Message-ID: <200606042225.k54MP36v018142@unicorn.berlios.de>

Bug #7717, was updated on 2006-Jun-02 00:19
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 9
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Rights not implemented

Details: !!!

Follow-Ups:

Date: 2006-Jun-05 00:25
By: fraktalek

Comment:
User is informed about insufficient rights to Add, Edit, Delete from revision 445.

-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7717&group_id=5975


From admin at berlios.de  Mon Jun  5 00:27:17 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 00:27:17 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7725] Implement detail in Overview
Message-ID: <200606042227.k54MRHNZ018257@unicorn.berlios.de>

Bug #7725, was updated on 2006-Jun-02 13:36
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 7
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Implement detail in Overview

Details: The user should be able to review detailed data about an occurrence quickly and without the need to edit it.


Follow-Ups:

Date: 2006-Jun-05 00:27
By: fraktalek

Comment:
Implemented in revision 432. Unfortunately contains a minor bug. Thanks to the hyperactivity of JTable wrong detail is displayed on enter on the last result.

-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7725&group_id=5975


From fraktalek at berlios.de  Mon Jun  5 00:29:48 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Mon, 5 Jun 2006 00:29:48 +0200
Subject: [Plantlore-dev] r446 - trunk/src/net/sf/plantlore/client
Message-ID: <200606042229.k54MTm7E000945@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-05 00:29:48 +0200 (Mon, 05 Jun 2006)
New Revision: 446

Modified:
   trunk/src/net/sf/plantlore/client/AppCore.java
Log:
Fixed bug  Bug #7668 - Deleted authors can be assigned to an occurrence
Now only rows with cdeleted equal to 0 are loaded for Metadata, Publications and authors.



Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-04 22:16:39 UTC (rev 445)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-04 22:29:48 UTC (rev 446)
@@ -393,6 +393,7 @@
         sq.addOrder(PlantloreConstants.DIRECT_ASC, Author.WHOLENAME);
         sq.addProjection(PlantloreConstants.PROJ_PROPERTY, Author.WHOLENAME);
         sq.addProjection(PlantloreConstants.PROJ_PROPERTY, Author.ID);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ, Author.DELETED, null, 0, null);
 
         resultid = database.executeQuery(sq);
         resultsCount = database.getNumRows(resultid);
@@ -582,6 +583,8 @@
         sq.addOrder(PlantloreConstants.DIRECT_ASC, Publication.REFERENCECITATION);
         sq.addProjection(PlantloreConstants.PROJ_DISTINCT,Publication.REFERENCECITATION);
         sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Publication.ID);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ, Publication.DELETED,null,0, null);
+        
         resultid = database.executeQuery(sq);
         resultsCount = database.getNumRows(resultid);
         records = database.more(resultid, 0, resultsCount-1);
@@ -609,6 +612,8 @@
         sq.addOrder(PlantloreConstants.DIRECT_ASC, Metadata.DATASETTITLE);
         sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Metadata.DATASETTITLE);
         sq.addProjection(PlantloreConstants.PROJ_PROPERTY,Metadata.ID);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ, Metadata.DELETED, null, 0, null);
+        
         resultid = database.executeQuery(sq);
         resultsCount = database.getNumRows(resultid);
         records = database.more(resultid, 0, resultsCount-1);



From admin at berlios.de  Mon Jun  5 00:30:45 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 00:30:45 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7668] Deleted authors can be assigned to an occurrence
Message-ID: <200606042230.k54MUjCP018398@unicorn.berlios.de>

Bug #7668, was updated on 2006-May-30 20:08
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 7
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Deleted authors can be assigned to an occurrence

Details: Deleted authors can be assigned to a new occurrence in the Add occurrence dialog. In the table with the names and roles of authors, you can select deleted authors in the combo with the names.

How to reproduce:
1. Add new author
2. Delete the author
---> Restart plantlore (since cached data is not reloaded yet)
3. Open add dialog
4. Add author (button in the table with the authors)
5. Select the author from the combo in the table (you can select the one you just deleted)

Encountered in revision: 395

Follow-Ups:

Date: 2006-Jun-05 00:30
By: fraktalek

Comment:
Fixed in revision 446. Only rows with cdeleted equal to 0 are now loaded for authors, publications and metadata.

-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7668&group_id=5975


From admin at berlios.de  Mon Jun  5 00:32:15 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 00:32:15 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7749] Selecting an Author Name or a Revision transfers focus
Message-ID: <200606042232.k54MWFMf018473@unicorn.berlios.de>

Bug #7749, was updated on 2006-Jun-04 17:16
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: Wont Fix
Bug Group: Bug
Priority: 2
Submitted by: krater
Assigned to : fraktalek
Summary: Selecting an Author Name or a Revision transfers focus

Details: Selecting an Author or a Revision transfers focus to the Nearest bigger seat ComboBox. Annoying.

Follow-Ups:

Date: 2006-Jun-05 00:32
By: fraktalek

Comment:
Won't fix now. Worked around by replacing the AutoComboBoxNG3 to simple JComboBox.

-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7749&group_id=5975


From admin at berlios.de  Mon Jun  5 00:35:37 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 00:35:37 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7753] Add, Edit, Delete should run in transaction.
Message-ID: <200606042235.k54MZbVV018637@unicorn.berlios.de>

Bug #7753, was updated on 2006-Jun-05 00:35
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Add, Edit, Delete should run in transaction.

Details: History-friendly implementation is now possible thanks to executeUpdateInTransactionHistory() from revision 444.


For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7753&group_id=5975


From krater at berlios.de  Mon Jun  5 15:12:51 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 15:12:51 +0200
Subject: [Plantlore-dev] r447 - in trunk/src/net/sf/plantlore/client: . checklist export export/component login
Message-ID: <200606051312.k55DCpRF006708@sheep.berlios.de>

Author: krater
Date: 2006-06-05 15:12:43 +0200 (Mon, 05 Jun 2006)
New Revision: 447

Modified:
   trunk/src/net/sf/plantlore/client/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/MainConfig.java
   trunk/src/net/sf/plantlore/client/checklist/ChecklistCtrl.java
   trunk/src/net/sf/plantlore/client/checklist/ChecklistView.java
   trunk/src/net/sf/plantlore/client/export/ExportMngCtrlA.java
   trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java
   trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java
   trunk/src/net/sf/plantlore/client/export/ExportProgressCtrl.java
   trunk/src/net/sf/plantlore/client/export/ExportProgressView.java
   trunk/src/net/sf/plantlore/client/export/component/TemplateSelectionModel.java
   trunk/src/net/sf/plantlore/client/export/component/XTree.java
   trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
   trunk/src/net/sf/plantlore/client/login/LoginView.java
Log:
Checklist, login and export GUI repaired (ALT+TAB shows these windows properly).

Checklist forgets the list of selected plants after that list was Submitted. 

Login: a minor bug fixed - even if no DBInfo was selected, the User could click on the Continue button (which caused exceptions).

Modified: trunk/src/net/sf/plantlore/client/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -129,7 +129,7 @@
     	}
 		public void actionPerformed(ActionEvent isUseless) {
 			if(checklistView == null) {
-				checklistView = new ChecklistView( (AutoTextArea) view.taxonTextArea );
+				checklistView = new ChecklistView(view, (AutoTextArea) view.taxonTextArea );
 				new ChecklistCtrl( checklistView, (AutoTextArea) view.taxonTextArea );
 			}
 			checklistView.setVisible(true);			

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -51,7 +51,6 @@
 
 import net.sf.plantlore.client.export.ExportMng;
 import net.sf.plantlore.client.export.ExportMngCtrlA;
-import net.sf.plantlore.client.export.ExportMngViewA;
 import net.sf.plantlore.client.export.ExportProgressCtrl;
 import net.sf.plantlore.client.export.ExportProgressView;
 import net.sf.plantlore.client.history.History;
@@ -176,7 +175,6 @@
     
     // Export
     ExportMng exportModel;
-    ExportMngViewA exportView;
     ExportMngCtrlA exportCtrl;
     ExportProgressView exportProgressView;
     ExportProgressCtrl exportProgressCtrl;
@@ -528,8 +526,7 @@
             		exportModel = new ExportMng(model.getDatabase());
             		exportProgressView = new ExportProgressView(null);
             		exportProgressCtrl = new ExportProgressCtrl(null, exportProgressView);
-            		exportView = new ExportMngViewA(exportModel);
-            		exportCtrl = new ExportMngCtrlA(exportModel, exportView, exportProgressView, exportProgressCtrl);
+            		exportCtrl = new ExportMngCtrlA(exportModel, view, exportProgressView, exportProgressCtrl);
             	} catch(ExportException e) {
             		logger.error("Export MVC cannot be created. " + e.getMessage());
             		return;

Modified: trunk/src/net/sf/plantlore/client/MainConfig.java
===================================================================
--- trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/MainConfig.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -176,7 +176,7 @@
     			Attribute attr = ((Element)n).attribute("selected");
     			if(attr != null && "true".equalsIgnoreCase(attr.getValue()) ) {
     				selected = dbi;
-    				// System.out.println("SELECTED = " + dbi);
+    				System.out.println("SELECTED = " + dbi);
     			}
     		}
     		

Modified: trunk/src/net/sf/plantlore/client/checklist/ChecklistCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/checklist/ChecklistCtrl.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/checklist/ChecklistCtrl.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -51,6 +51,7 @@
 		public void actionPerformed(ActionEvent arg0) {
 			model.addLines( view.checklist.getSelectedValues() );
 			view.setVisible(false);
+			view.checklist.clearSelection();
 		}
 	}
 	

Modified: trunk/src/net/sf/plantlore/client/checklist/ChecklistView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/checklist/ChecklistView.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/checklist/ChecklistView.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -1,5 +1,7 @@
 package net.sf.plantlore.client.checklist;
 
+import java.awt.Dialog;
+
 import javax.swing.JFileChooser;
 
 import net.sf.plantlore.common.AutoTextArea;
@@ -19,7 +21,9 @@
      * @param model	The model is an AutoTextArea - 
      * the selected plants will be appended to the end of the AutoTextArea's contents.
      */
-    public ChecklistView(AutoTextArea model) {
+    public ChecklistView(Dialog parent, AutoTextArea model) {
+    	super(parent, true);
+    	
     	this.model = model;
         initComponents();
         choice = new JFileChooser();

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngCtrlA.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngCtrlA.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngCtrlA.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -2,7 +2,9 @@
 
 import javax.swing.JFileChooser;
 import javax.swing.JOptionPane;
+import javax.swing.filechooser.FileFilter;
 
+import net.sf.plantlore.client.AppCoreView;
 import net.sf.plantlore.client.export.component.XFilter;
 import net.sf.plantlore.l10n.L10n;
 
@@ -10,7 +12,8 @@
 	
 	
 	private ExportMng model;
-	private ExportMngViewA view;
+	private AppCoreView view;
+	private JFileChooser choice;
 	
 	private ExportMngViewB viewB;
 	//private ExportMngCtrlB ctrlB;
@@ -18,29 +21,35 @@
 	private ExportProgressView progressView;
 	private ExportProgressCtrl progressCtrl;
 	
-	public ExportMngCtrlA(ExportMng model, ExportMngViewA view, 
+	public ExportMngCtrlA(ExportMng model, AppCoreView view, 
 			ExportProgressView progressView, ExportProgressCtrl progressCtrl) {
 		this.model = model; this.view = view; 
 		this.progressView = progressView; this.progressCtrl = progressCtrl;
-		viewB = new ExportMngViewB();
+		viewB = new ExportMngViewB(view);
 		/*ctrlB = */new ExportMngCtrlB(model, viewB, progressView, progressCtrl);
+		
+		choice = new JFileChooser();
+		choice.setAcceptAllFileFilterUsed(false);
+		for( FileFilter filter: model.getFilters() )
+			choice.addChoosableFileFilter(filter);
 	}
 	
 	public void setVisible(boolean visible) {
 		if(visible) {
-			int result = view.choice.showDialog(null, L10n.getString("Export.Title"));
+			// The dialog must have a parent so that it is displayed correctly above it after ALT+TAB is pressed.
+			int result = choice.showDialog(view, L10n.getString("Export.Title"));
 			if( result == JFileChooser.APPROVE_OPTION ) {
 				
-				if(view.choice.getSelectedFile() == null) {
-					JOptionPane.showMessageDialog(null,
-							L10n.getString("Error.MissingFileName"),
-							L10n.getString("Error.NothingSelected"),
-						    JOptionPane.WARNING_MESSAGE);
+				if(choice.getSelectedFile() == null) {
+//					JOptionPane.showMessageDialog(null,
+//							L10n.getString("Error.MissingFileName"),
+//							L10n.getString("Error.NothingSelected"),
+//						    JOptionPane.WARNING_MESSAGE);
 					return;
 				}
 				
-				model.setSelectedFile( view.choice.getSelectedFile().getAbsolutePath() );
-				XFilter filter = (XFilter) view.choice.getFileFilter();
+				model.setSelectedFile( choice.getSelectedFile().getAbsolutePath() );
+				XFilter filter = (XFilter) choice.getFileFilter();
 				model.setActiveFileFilter( filter );
 				
 				if( filter.isColumnSelectionEnabled() )
@@ -55,7 +64,7 @@
 					progressView.setVisible(true);
 				} catch(Exception e) {
 					JOptionPane.showMessageDialog(null,
-							L10n.getString("Error.ExportFailed") + e,
+							L10n.getString("Error.ExportFailed") + e.getMessage(),
 							L10n.getString("Export.Failed"),
 						    JOptionPane.WARNING_MESSAGE);
 				}

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -21,37 +21,32 @@
 			ExportProgressView progressView,  ExportProgressCtrl progressCtrl) {
 		this.model = model; this.view = view; 
 		this.progressView = progressView; this.progressCtrl = progressCtrl;
-		view.next.addActionListener( new Next() );
+		view.next.setAction( new Next() );
 	}
 	
 	
 	class Next extends AbstractAction {
 		public void actionPerformed(ActionEvent arg0) {
 			Template t = view.tsm.getTemplate();
-			if( t.isEmpty() )
+			view.setVisible(false);
+			view.tsm.clearSelection();
+			
+			try {
+				model.setTemplate( t ); // Set the new template.
+				
+				ExportTask task = model.createExportTask();
+				progressCtrl.setModel(task); 
+				progressView.setModel(task);
+				
+				task.execute();
+				
+				progressView.setVisible(true);
+			}
+			catch(Exception e) {
 				JOptionPane.showMessageDialog(view,
-					L10n.getString("Error.NoColumnsSelected"),
-				    L10n.getString("Error.NothingSelected"),
-				    JOptionPane.WARNING_MESSAGE);
-			else {
-				view.setVisible(false);
-				try {
-					model.setTemplate( t ); // Set the new template.
-
-					ExportTask task = model.createExportTask();
-					progressCtrl.setModel(task); 
-					progressView.setModel(task);
-					
-					task.execute();
-					
-					progressView.setVisible(true);
-				}
-				catch(Exception e) {
-					JOptionPane.showMessageDialog(view,
-							L10n.getString("Error.ExportFailed") + e,
-							L10n.getString("Export.Failed"),
-						    JOptionPane.WARNING_MESSAGE);
-				}
+						L10n.getString("Error.ExportFailed") + e.getMessage(),
+						L10n.getString("Export.Failed"),
+						JOptionPane.WARNING_MESSAGE);
 			}
 		}
 	}

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -6,6 +6,8 @@
 
 package net.sf.plantlore.client.export;
 
+import java.awt.Frame;
+
 import net.sf.plantlore.client.export.component.TemplateSelectionModel;
 import net.sf.plantlore.client.export.component.XTree;
 import net.sf.plantlore.l10n.L10n;
@@ -19,13 +21,14 @@
 	protected TemplateSelectionModel tsm;
     
     /** Creates new form ExportMngView */
-    public ExportMngViewB() {
+    public ExportMngViewB(Frame parent) {
+    	super(parent, true);
+    	
     	tsm = new TemplateSelectionModel();
     	
         initComponents();
-        
+        getRootPane().setDefaultButton(next);
         setLocationRelativeTo(null); // center of the screen
-        setModal(true);
     }
     
     /** This method is called from within the constructor to

Modified: trunk/src/net/sf/plantlore/client/export/ExportProgressCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportProgressCtrl.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/ExportProgressCtrl.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -22,7 +22,7 @@
 	
 	public ExportProgressCtrl(ExportTask model, ExportProgressView view) {
 		setModel(model); this.view = view;
-		view.abort.addActionListener( new Abort() );
+		view.abort.setAction( new Abort() );
 	}
 	
 	class Abort extends AbstractAction {

Modified: trunk/src/net/sf/plantlore/client/export/ExportProgressView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportProgressView.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/ExportProgressView.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -6,6 +6,7 @@
 
 package net.sf.plantlore.client.export;
 
+import java.awt.EventQueue;
 import java.util.Observable;
 import java.util.Observer;
 
@@ -27,6 +28,8 @@
 		model = newModel;
 		if(model != null)
 			model.addObserver(this);
+		
+		exceptionOccured = false;
 	}
 	
     
@@ -113,64 +116,67 @@
     
     private boolean exceptionOccured = false;
     
-	public void update(Observable source, Object parameter) {
+	public void update(Observable source, final Object parameter) {
 		// The final cleanup may overwrite the exception! 
 		if(exceptionOccured)
 			return;
 		
-		if( parameter != null && parameter instanceof Exception ) {
-			Exception e = (Exception) parameter;
-			setTitle(L10n.getString("Export.Failed"));
-			progress.setIndeterminate(false);
-    		progress.setStringPainted(true);
-			status.setText(e.toString());
-			progress.setValue(0);
-			progress.setString("");
-			abort.setText(L10n.getString("Export.Hide"));
-			exceptionOccured = true;
-		}
-		else if(model == null) {
-			return;
-		}
-		else if(model.isAborted()) {
-			setTitle(L10n.getString("Export.Aborted"));
-			if(total > 0)
-				status.setText(count +"/" + total + " " + L10n.getString("Export.RecordsExported"));
-			else
-				status.setText(count + " " + L10n.getString("Export.RecordsExported"));
-			progress.setIndeterminate(false);
-    		progress.setStringPainted(true);
-			progress.setValue(0);
-			progress.setString("");
-			abort.setText(L10n.getString("Export.Hide"));
-		} 
-		else if(!model.isExportInProgress()) {
-			setTitle(L10n.getString("Export.Completed"));
-			progress.setIndeterminate(false);
-    		progress.setStringPainted(true);
-			status.setText(count + " " + L10n.getString("Export.RecordsExported"));
-			progress.setMaximum(100);
-			progress.setValue(100);
-			progress.setString("100%");
-			abort.setText(L10n.getString("Export.Hide"));
-		}
-		else if( this.isVisible() ) {
-			count = model.getNumberOfExported();
-			if(count >= 0) {
-				progress.setValue( count );
-				if(total > 0) {
-					String percent = Integer.toString(100*count / total) + "%";
-					progress.setString( percent );
-					status.setText(count +"/" + total + " " + L10n.getString("Export.RecordsExported"));
-					setTitle(percent + L10n.getString("Export.Progress"));
+		EventQueue.invokeLater(new Runnable(){
+			public void run() {
+				if( parameter != null && parameter instanceof Exception ) {
+					Exception e = (Exception) parameter;
+					setTitle(L10n.getString("Export.Failed"));
+					progress.setIndeterminate(false);
+					progress.setStringPainted(true);
+					status.setText(e.getMessage());
+					progress.setValue(0);
+					progress.setString("");
+					abort.setText(L10n.getString("Export.Hide"));
+					exceptionOccured = true;
 				}
-				else {
+				else if(model == null) {
+					return;
+				}
+				else if(model.isAborted()) {
+					setTitle(L10n.getString("Export.Aborted"));
+					if(total > 0)
+						status.setText(count +"/" + total + " " + L10n.getString("Export.RecordsExported"));
+					else
+						status.setText(count + " " + L10n.getString("Export.RecordsExported"));
+					progress.setIndeterminate(false);
+					progress.setStringPainted(true);
+					progress.setValue(0);
+					progress.setString("");
+					abort.setText(L10n.getString("Export.Hide"));
+				} 
+				else if(!model.isExportInProgress()) {
+					setTitle(L10n.getString("Export.Completed"));
+					progress.setIndeterminate(false);
+					progress.setStringPainted(true);
 					status.setText(count + " " + L10n.getString("Export.RecordsExported"));
-					setTitle(count + " " + L10n.getString("Export.RecordsExported"));
+					progress.setMaximum(100);
+					progress.setValue(100);
+					progress.setString("100%");
+					abort.setText(L10n.getString("Export.Hide"));
 				}
-				
+				else if( isVisible() ) {
+					count = model.getNumberOfExported();
+					if(count >= 0) {
+						progress.setValue( count );
+						if(total > 0) {
+							String percent = Integer.toString(100*count / total) + "%";
+							progress.setString( percent );
+							status.setText(count +"/" + total + " " + L10n.getString("Export.RecordsExported"));
+							setTitle(percent + L10n.getString("Export.Progress"));
+						}
+						else {
+							status.setText(count + " " + L10n.getString("Export.RecordsExported"));
+							setTitle(count + " " + L10n.getString("Export.RecordsExported"));
+						}
+						
+					}
+				}
 			}
-		}
+		});
 	}
-    
 }

Modified: trunk/src/net/sf/plantlore/client/export/component/TemplateSelectionModel.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/component/TemplateSelectionModel.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/component/TemplateSelectionModel.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -62,6 +62,12 @@
 		}
 		super.addSelectionPaths( paths );
 	}
+	
+	@Override
+	public void clearSelection() {
+		super.clearSelection();
+		xtemplate.unsetEverything();
+	}
 			
 	/**
 	 * 

Modified: trunk/src/net/sf/plantlore/client/export/component/XTree.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/component/XTree.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/export/component/XTree.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -286,7 +286,7 @@
 		this( DefaultHierarchy );
 	}
 	
-	
+		
 	/**
 	 * Create a new XTree with a specified Hierarchy Model.
 	 * @param hierarchy The hierarchy to be processed.
@@ -316,6 +316,7 @@
 			else
 				addSelectionPath(path);
 		}
+		
 	}
 	
 	

Modified: trunk/src/net/sf/plantlore/client/login/LoginCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/login/LoginCtrl.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -50,7 +50,9 @@
 	
 	class ChoiceChanged implements ListSelectionListener {
 		public void valueChanged(ListSelectionEvent e) {
-			model.setSelected( view.choice.getSelectedIndex() );
+			int index = view.choice.getSelectedIndex();
+			view.next.setEnabled( index >= 0 ); // Evil code.
+			model.setSelected( index );
 		}	
 	}
 	

Modified: trunk/src/net/sf/plantlore/client/login/LoginView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-04 22:29:48 UTC (rev 446)
+++ trunk/src/net/sf/plantlore/client/login/LoginView.java	2006-06-05 13:12:43 UTC (rev 447)
@@ -32,6 +32,7 @@
         getRootPane().setDefaultButton(next);
         // See what's new.
         update(null, Login.UPDATE_LIST);
+        remember.setVisible(false);
     }
     
     /** This method is called from within the constructor to
@@ -107,7 +108,7 @@
     /**
      * Update the list of records (in case there were some changes).
      */
-    public void update(Observable source, final Object parameter) {
+    public void update(final Observable source, final Object parameter) {
     	java.awt.EventQueue.invokeLater(new Runnable() {
     		public void run() {
     			// Ignore setSelected() event
@@ -117,6 +118,14 @@
     				// This is probably because every time an item is inserted 
     				// into the list, it is also selected!
     				choice.setListData(model.getRecords());
+    				
+    		        // Update the selected record as well
+    		        DBInfo selected = model.getSelected();
+    		        if(source == null) // Is it the first update?
+    		        	if(selected != null)
+    		        		choice.setSelectedValue(selected, true);
+    		        	else
+    		        		choice.setSelectedIndex(0);
     			}
     			else if(parameter != null && parameter instanceof DBLayer)
     				setVisible(false); // the database layer has been created, we are no longer neccessary



From krater at berlios.de  Mon Jun  5 15:16:26 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 15:16:26 +0200
Subject: [Plantlore-dev] r448 - trunk/src/net/sf/plantlore/client/export
Message-ID: <200606051316.k55DGQBB007986@sheep.berlios.de>

Author: krater
Date: 2006-06-05 15:16:24 +0200 (Mon, 05 Jun 2006)
New Revision: 448

Removed:
   trunk/src/net/sf/plantlore/client/export/ExportMngViewA.java
Log:
The view is obsolete. It was merged with the controller since there never was a proper view...

Deleted: trunk/src/net/sf/plantlore/client/export/ExportMngViewA.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngViewA.java	2006-06-05 13:12:43 UTC (rev 447)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngViewA.java	2006-06-05 13:16:24 UTC (rev 448)
@@ -1,29 +0,0 @@
-package net.sf.plantlore.client.export;
-
-
-import javax.swing.JFileChooser;
-import javax.swing.filechooser.FileFilter;
-
-
-public class ExportMngViewA {
-	
-	private ExportMng model;
-	protected JFileChooser choice;
-	
-	
-	
-	public ExportMngViewA(ExportMng model) {
-		this.model = model;
-		initComponents();
-	}
-
-	
-	private void initComponents() {
-		choice = new JFileChooser();
-		choice.setAcceptAllFileFilterUsed(false);
-		for( FileFilter filter: model.getFilters() )
-			choice.addChoosableFileFilter(filter);
-	}
-	
-	
-}



From fraktalek at berlios.de  Mon Jun  5 16:25:26 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Mon, 5 Jun 2006 16:25:26 +0200
Subject: [Plantlore-dev] r449 - in trunk/src/net/sf/plantlore: client common
Message-ID: <200606051425.k55EPQB5028032@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-05 16:25:23 +0200 (Mon, 05 Jun 2006)
New Revision: 449

Modified:
   trunk/src/net/sf/plantlore/client/AddEdit.java
   trunk/src/net/sf/plantlore/client/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/common/DBLayerUtils.java
   trunk/src/net/sf/plantlore/common/ProgressBar.form
   trunk/src/net/sf/plantlore/common/ProgressBar.java
Log:
Add,Edit and Delete now use transactions. 
And we have a green progress bar now :-)



Modified: trunk/src/net/sf/plantlore/client/AddEdit.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/client/AddEdit.java	2006-06-05 14:25:23 UTC (rev 449)
@@ -597,11 +597,11 @@
         h.setTerritory(t);
         
         if (updateAllPlants) {
-            database.executeUpdate(h);
+            database.executeUpdateInTransaction(h);
         } else {
             //we've already created and set up a new Habitat now we have to store it into the database
             h.setDeleted(0);
-            int habId = database.executeInsert(h);
+            int habId = database.executeInsertInTransaction(h);
             h.setId(habId);
         }
         
@@ -671,7 +671,7 @@
         hTmp.setTerritory(o.getHabitat().getTerritory());
         hTmp.setDeleted(0);
         
-        int habId = database.executeInsert(hTmp);
+        int habId = database.executeInsertInTransaction(hTmp);
         hTmp.setId(habId);
         
         occTmp.setDataSource(o.getDataSource());
@@ -693,34 +693,41 @@
         return occTmp;
     }
         
-    public void storeRecord(boolean updateAllPlants) {
+    private boolean originalTaxonSurvived() {
+        for (int t = 0; t < taxonList.size(); t++) {
+            if (taxonOriginal.equals(taxonList.get(t))) {
+                return true;
+            }
+        }        
+        return false;
+    }
+    
+    public void storeRecord(boolean updateAllPlants) throws DBLayerException, RemoteException {
         DBLayerUtils dlu = new DBLayerUtils(database);
 
         logger.info("Storing occurrence record...");
-        //FIXME: exception catching/throwing
         try {     
                 if (editMode) {
-                    boolean originalTaxonSurvived = false;
+                    boolean originalTaxonSurvived = originalTaxonSurvived();
                     
-                    for (int t = 0; t < taxonList.size(); t++) {
-                        if (taxonOriginal.equals(taxonList.get(t))) {
-                            originalTaxonSurvived = true;
-                            break;
-                        }
+                    boolean ok = database.beginTransaction();
+                    if (!ok) {
+                        logger.debug("AppCore.deleteSelected(): Can't create transaction. Another is probably already running.");
+                        throw new DBLayerException("Can't create transaction. Another already running.");
                     }
-
+                                            
                     prepareOccurrenceUpdate(updateAllPlants);
                     if (originalTaxonSurvived) {
                         // update original occurrence
                         logger.info("Updating original occurrence");
-                        database.executeUpdate(o);
+                        database.executeUpdateInTransaction(o);
                         logger.debug("Original occurrence id="+o.getId()+" updated.");
                     } else {
                         // delete original occurrence and bound author occurrences
                         logger.info("Deleting original occurrence and associated author occurrences");
                         o.setDeleted(1);
-                        database.executeUpdate(o);
-                        dlu.deleteHabitat(o.getHabitat());
+                        database.executeUpdateInTransaction(o);
+                        dlu.deleteHabitatInTransaction(o.getHabitat());
                         logger.debug("Occurrence id "+o.getId()+" "+o.getPlant().getTaxon()+" deleted.");
                         Set<Map.Entry<Integer,AuthorOccurrence>> aoSet = authorOccurrences.entrySet();
                         Iterator it = aoSet.iterator();
@@ -728,7 +735,7 @@
                             Map.Entry<Integer, AuthorOccurrence> entry = (Entry<Integer, AuthorOccurrence>) it.next();
                             AuthorOccurrence tmp = entry.getValue();
                             tmp.setDeleted(2);
-                            database.executeUpdateHistory(tmp);
+                            database.executeUpdateInTransactionHistory(tmp);
                             logger.debug("AuthorOccurrence id "+tmp.getId()+" "+tmp.getAuthor().getWholeName()+" deleted.");
                         }
                         //clear the authorOccurrences so that we don't try to delete them once again further in this method
@@ -758,7 +765,7 @@
                         if (!originalSurvived) {
                             aoTmp = authorOccurrences.get(auth.getFirst());
                             aoTmp.setDeleted(1);
-                            database.executeUpdate(aoTmp);
+                            database.executeUpdateInTransaction(aoTmp);
                             logger.debug("AuthorOccurrence id="+aoTmp.getId()+" "+aoTmp.getAuthor().getWholeName()+" deleted.");
                         }
                     }
@@ -776,7 +783,7 @@
                             AuthorOccurrence aoTmp = authorOccurrences.get(pTmp.getFirst().getSecond());
                             aoTmp.setRole(pTmp.getSecond());
                             aoTmp.setNote(resultRevision.get(j));
-                            database.executeUpdate(aoTmp);
+                            database.executeUpdateInTransaction(aoTmp);
                             logger.debug("AuthorOccurrence id="+aoTmp.getId()+" "+pTmp.getFirst().getFirst()+" updated");
                         } 
                     }
@@ -794,7 +801,7 @@
                         logger.info("Creating a new occurrence for "+taxonList.get(j));
                         Occurrence occTmp = cloneOccurrence();
                         occTmp.setPlant((Plant) dlu.getObjectFor(lookupPlant(taxonList.get(j)),Plant.class));
-                        int occId = database.executeInsert(occTmp);
+                        int occId = database.executeInsertInTransaction(occTmp);
                         occTmp.setId(occId);
                         logger.debug("Occurrence for "+taxonList.get(j)+" inserted. Id="+occTmp.getId());
                         Integer id = lookupPlant(taxonList.get(j));
@@ -812,7 +819,7 @@
                             aoTmp.setNote(resultRevision.get(k));
                             aoTmp.setOccurrence(occTmp);
                             aoTmp.setDeleted(0);
-                            database.executeInsert(aoTmp);
+                            database.executeInsertInTransaction(aoTmp);
                             logger.debug("AuthorOccurrence for "+pTmp.getFirst().getFirst()+" inserted. Id="+aoTmp.getId());
                         }
                     }
@@ -837,11 +844,13 @@
                                 aoTmp.setNote(resultRevision.get(k));
                                 aoTmp.setOccurrence(o);
                                 aoTmp.setDeleted(0);
-                                database.executeInsert(aoTmp);    
+                                database.executeInsertInTransaction(aoTmp);    
                                 logger.debug("AuthorOccurrence for "+pTmp.getFirst().getFirst()+" inserted. Id="+aoTmp.getId());                            
                             }
                         }
                     
+                    database.commitTransaction();
+                    
                 } else { //Add Mode
                     Village v;
                     Phytochorion p;
@@ -861,15 +870,22 @@
                     if (quadrant != null) h.setQuadrant(quadrant);
                     h.setTerritory(t);
                     h.setDeleted(0);
+                    
+                    boolean ok = database.beginTransaction();
+                    if (!ok) {
+                        logger.debug("AppCore.deleteSelected(): Can't create transaction. Another is probably already running.");
+                        throw new DBLayerException("Can't create transaction. Another already running.");
+                    }
+                    
                     logger.info("Creating a shared habitat");
-                    int habId = database.executeInsert(h);//insert the shared habitat
+                    int habId = database.executeInsertInTransaction(h);//insert the shared habitat
                     h.setId(habId);
                     logger.debug("Shared habitat created. Id="+h.getId());
                         
                     for (int j = 0; j < taxonList.size(); j++) {
                         logger.info("Creating an Occurrence using the shared habitat");
                         Occurrence occ = prepareNewOccurrence(taxonList.get(j), h);//share the habitat
-                        int occId = database.executeInsert(occ);
+                        int occId = database.executeInsertInTransaction(occ);
                         occ.setId(occId);
                         logger.debug("Occurrence for "+taxonList.get(j)+" inserted. Id="+occ.getId());
                         
@@ -882,14 +898,17 @@
                             aoTmp.setNote(resultRevision.get(k));
                             aoTmp.setOccurrence(occ);
                             aoTmp.setDeleted(0);
-                            database.executeInsert(aoTmp);                            
+                            database.executeInsertInTransaction(aoTmp);                            
                         }//for authorList
                     }// for taxonList
+                    
+                    database.commitTransaction();
                 }//add mode
-        } catch (RemoteException ex) {
-            ex.printStackTrace();
         } catch (DBLayerException ex) {
-            ex.printStackTrace();
+            database.rollbackTransaction();
+            DBLayerException dbex = new DBLayerException("Add/Edit was rolled back. Some database problem occurred during processing: "+ex);
+            dbex.setStackTrace(ex.getStackTrace());
+            throw dbex;
         }        
     }//createRecord()
 
@@ -933,10 +952,14 @@
         if (taxonList == null || taxonList.size() < 1)
             return new Pair<Boolean,String>(false, "You have to add at least one taxon!");
         
-        if (editMode && taxonList.size() > 1 && database.getUserRights().getAdd() != 1) { //the user is not allowed to add new records
+        if (editMode && taxonList.size() > 1 && database.getUserRights().getAdd() != 1 && database.getUserRights().getAdministrator() != 1) { //the user is not allowed to add new records
             return new Pair<Boolean,String>(false, L10n.getString("AddEdit.InsufficientAddRights"));
         }
         
+        if (editMode && !originalTaxonSurvived() && database.getUserRights().getAdd() != 1 && database.getUserRights().getAdministrator() != 1) { //in case the user replaced original taxon by some other but doesn't have rights for adding
+            return new Pair<Boolean,String>(false, L10n.getString("AddEdit.InsufficientAddRights"));            
+        }
+        
         Pair<Pair<String,Integer>,String> ai, aj;
         for (int i=0; i < authorList.size() ; i++) {
             ai = authorList.get(i);

Modified: trunk/src/net/sf/plantlore/client/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/client/AddEditCtrl.java	2006-06-05 14:25:23 UTC (rev 449)
@@ -19,6 +19,7 @@
 import java.awt.event.MouseEvent;
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
+import java.rmi.RemoteException;
 import java.text.DateFormat;
 import java.text.MessageFormat;
 import java.text.NumberFormat;
@@ -49,6 +50,7 @@
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.Pair;
 import net.sf.plantlore.common.PlantloreHelp;
+import net.sf.plantlore.common.exception.DBLayerException;
 import net.sf.plantlore.common.record.Occurrence;
 import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.Logger;
@@ -453,48 +455,59 @@
         
         public void mouseClicked(MouseEvent e) {
             int choice=-1;
-            Pair<Boolean,String> check = model.checkData();
-            if (!check.getFirst()) {
-                JOptionPane.showMessageDialog(view,check.getSecond());
-                return;
-            } 
-            if (inEditMode) {
-                Occurrence[] sharedOcc = model.getHabitatSharingOccurrences();
-                if (sharedOcc.length > 1) {
-                    Object[] arg = {""+(sharedOcc.length-1)};
-                    String formattedQuestion = L10n.getFormattedString("AddEdit.OkQuestion",arg);
-                    
-                    Object[] options = {ALL,JUST_THIS,CANCEL};
-                    choice = JOptionPane.showOptionDialog(view, 
-                            formattedQuestion,
-                            TITLE,
-                            JOptionPane.YES_NO_CANCEL_OPTION,
-                            JOptionPane.QUESTION_MESSAGE,
-                            null,
-                            options,
-                            options[0]);
-                    switch (choice) {
-                        case 0:
+            try {
+                Pair<Boolean,String> check = model.checkData();
+                if (!check.getFirst()) {
+                    JOptionPane.showMessageDialog(view,check.getSecond());
+                    return;
+                } 
+                if (inEditMode) {
+                    Occurrence[] sharedOcc = model.getHabitatSharingOccurrences();
+                    if (sharedOcc.length > 1) {
+                        Object[] arg = {""+(sharedOcc.length-1)};
+                        String formattedQuestion = L10n.getFormattedString("AddEdit.OkQuestion",arg);
+
+                        Object[] options = {ALL,JUST_THIS,CANCEL};
+                        choice = JOptionPane.showOptionDialog(view, 
+                                formattedQuestion,
+                                TITLE,
+                                JOptionPane.YES_NO_CANCEL_OPTION,
+                                JOptionPane.QUESTION_MESSAGE,
+                                null,
+                                options,
+                                options[0]);
+                        switch (choice) {
+                            case 0:
+                                model.storeRecord(true);
+                                view.setVisible(false);
+                                break;
+                            case 1:
+                                model.storeRecord(false);
+                                view.setVisible(false);
+                                break;
+                            case 2:
+                            default:                        
+                                //we'll do nothing and leave the AddEdit dialog visible
+                        }
+                    } else {
                             model.storeRecord(true);
-                            view.setVisible(false);
-                            break;
-                        case 1:
-                            model.storeRecord(false);
-                            view.setVisible(false);
-                            break;
-                        case 2:
-                        default:                        
-                            //we'll do nothing and leave the AddEdit dialog visible
+                            view.setVisible(false);                    
                     }
-                } else {
-                        model.storeRecord(true);
-                        view.setVisible(false);                    
+                } else {//inAddMode
+                    model.storeRecord(true);
+                    view.setVisible(false);
                 }
-            } else {//inAddMode
-                model.storeRecord(true);
-                view.setVisible(false);
+            } catch (RemoteException ex) {
+                logger.error("Remote problem: "+ex);
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+            } catch (DBLayerException ex) {
+                logger.error("Database problem: "+ex);
+                ex.printStackTrace();
+                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
             }
-        }
+        }//mouseClicked
+            
     }//OkButtonListener
     
     class CancelButtonListener extends MouseAdapter {

Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 14:25:23 UTC (rev 449)
@@ -734,30 +734,45 @@
             public Object task() throws DBLayerException, RemoteException {
                 DBLayerUtils dlu = new DBLayerUtils(database);
 
-                Collection<Integer> toBeDeleted = getTableModel().getSelection().values();
-                setLength(toBeDeleted.size()*2); //inform about approx. length of this task
-                setStatusMessage(L10n.getFormattedString("Delete.Message.ProgressInfo",deleted,toBeDeleted.size()));
-                for (Integer i : toBeDeleted) {
-                    Occurrence occ = (Occurrence) dlu.getObjectFor(i.intValue(), Occurrence.class);
-                    AuthorOccurrence[] aos = dlu.getAuthorsOf(occ);
+                boolean ok = false;
+                ok = database.beginTransaction();
+                if (!ok) {
+                    logger.debug("AppCore.deleteSelected(): Can't create transaction. Another is probably already running.");
+                    throw new DBLayerException("Can't create transaction. Another already running.");
+                }
+                
+                try {
+                    Collection<Integer> toBeDeleted = getTableModel().getSelection().values();
+                    setLength(toBeDeleted.size()*2); //inform about approx. length of this task
+                    setStatusMessage(L10n.getFormattedString("Delete.Message.ProgressInfo",deleted,toBeDeleted.size()));
+                    for (Integer i : toBeDeleted) {
+                        Occurrence occ = (Occurrence) dlu.getObjectFor(i.intValue(), Occurrence.class);
+                        AuthorOccurrence[] aos = dlu.getAuthorsOf(occ);
 
-                    logger.debug("Deleting occurrence id "+i);
-                    occ.setDeleted(1);
-                    database.executeUpdate(occ);
-                    dlu.deleteHabitat(occ.getHabitat());
-                    logger.debug("Occurrence id "+occ.getId()+" "+occ.getPlant().getTaxon()+" deleted.");
-                    setPosition(getPosition()+1);
-                    
-                    for (AuthorOccurrence authorOcc : aos) {
-                        authorOcc.setDeleted(2);
-                        database.executeUpdateHistory(authorOcc);
-                        logger.debug("AuthorOccurrence id "+authorOcc.getId()+" "+authorOcc.getAuthor().getWholeName()+" deleted.");
+                        logger.debug("Deleting occurrence id "+i);
+                        occ.setDeleted(1);
+                        database.executeUpdateInTransaction(occ);
+                        dlu.deleteHabitatInTransaction(occ.getHabitat());
+                        logger.debug("Occurrence id "+occ.getId()+" "+occ.getPlant().getTaxon()+" deleted.");
+                        setPosition(getPosition()+1);
+
+                        for (AuthorOccurrence authorOcc : aos) {
+                            authorOcc.setDeleted(2);
+                            database.executeUpdateInTransactionHistory(authorOcc);
+                            logger.debug("AuthorOccurrence id "+authorOcc.getId()+" "+authorOcc.getAuthor().getWholeName()+" deleted.");
+                        }
+                        deleted++;
+                        setPosition(getPosition()+1);
+                        setStatusMessage(L10n.getFormattedString("Delete.Message.ProgressInfo",deleted,toBeDeleted.size()));
                     }
-                    deleted++;
-                    setPosition(getPosition()+1);
-                    setStatusMessage(L10n.getFormattedString("Delete.Message.ProgressInfo",deleted,toBeDeleted.size()));
+                } catch (DBLayerException ex) {
+                    database.rollbackTransaction();
+                    DBLayerException dbex = new DBLayerException("Delete rolled back. Some database problem occurred: "+ex);
+                    dbex.setStackTrace(ex.getStackTrace());
+                    throw dbex;
                 }
-
+                
+                database.commitTransaction();
                 getTableModel().clearSelection();
                 fireStopped(null);
                 return null;

Modified: trunk/src/net/sf/plantlore/common/DBLayerUtils.java
===================================================================
--- trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/common/DBLayerUtils.java	2006-06-05 14:25:23 UTC (rev 449)
@@ -96,6 +96,27 @@
         db.closeQuery(sq);
     }
     
+    /** Deletes Habitat for given Occurrence if needed.
+     *
+     * Will delete Habitat if no live Occurrence point at it.
+     *
+     */
+    public void deleteHabitatInTransaction(Habitat h) throws DBLayerException, RemoteException {
+        SelectQuery sq = db.createQuery(Occurrence.class);        
+        sq.addRestriction(PlantloreConstants.RESTR_EQ,Occurrence.HABITAT,null,h,null);
+        sq.addRestriction(PlantloreConstants.RESTR_EQ,Occurrence.DELETED, null, 0, null);
+        int resultid = db.executeQuery(sq);
+        int resultCount = db.getNumRows(resultid);
+        if (resultCount == 0) {
+            logger.info("Deleting habitat id="+h.getId()+" with nearest village "+h.getNearestVillage().getName());
+            h.setDeleted(1);
+            db.executeUpdateInTransaction(h);
+        } else {
+            logger.debug("Leaving habitat id="+h.getId()+" live. Live Occurrence records point at it.");
+        }
+        db.closeQuery(sq);
+    }
+    
 //    public static void main(String[] args) throws DBLayerException, RemoteException {
 //        DBLayer db = new HibernateDBLayer();
 //        db.initialize("jdbc:firebirdsql:localhost/3050:/mnt/data/temp/plantloreHIBdataUTF.fdb","sysdba","masterkey");

Modified: trunk/src/net/sf/plantlore/common/ProgressBar.form
===================================================================
--- trunk/src/net/sf/plantlore/common/ProgressBar.form	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/common/ProgressBar.form	2006-06-05 14:25:23 UTC (rev 449)
@@ -72,6 +72,11 @@
       </Layout>
       <SubComponents>
         <Component class="javax.swing.JProgressBar" name="progressBar">
+          <Properties>
+            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
+              <Color blue="0" green="ff" id="green" palette="1" red="0" type="palette"/>
+            </Property>
+          </Properties>
         </Component>
         <Component class="javax.swing.JTextField" name="statusField">
           <Properties>

Modified: trunk/src/net/sf/plantlore/common/ProgressBar.java
===================================================================
--- trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-06-05 13:16:24 UTC (rev 448)
+++ trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-06-05 14:25:23 UTC (rev 449)
@@ -82,6 +82,7 @@
         setResizable(false);
         setUndecorated(true);
         jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createEtchedBorder()));
+        progressBar.setForeground(java.awt.Color.green);
 
         statusField.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
         statusField.setBorder(null);



From admin at berlios.de  Mon Jun  5 17:53:24 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 17:53:24 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7760] Previous selection is not cleared when searching
Message-ID: <200606051553.k55FrOYH006984@unicorn.berlios.de>

Bug #7760, was updated on 2006-Jun-05 17:53
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Previous selection is not cleared when searching

Details: When you select some records in the overview and then search for occurrences, previous selection is not cleared and it is possible to delete selected records (although you do not see them). Furthermore, buttons used for selecting all records, no recordsa and for inverting selection cause NullPointerException to be throws.

How to reproduce:
1. Open Plantlore, login (overview is diaplayed)
2. Select some records (check the checkboxes)
3. Open search dialog, search for something that is not in the database (so that no records are found)
4A. Now overview doesn't display anything, click Delete button. System allows you to delete previously selected records
4B. Click "Invert selection", "Select all" or "Select none" buttons. NPE is thrown.

Although the behaviour described in 4A might be a feature, I think it should not.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7760&group_id=5975


From admin at berlios.de  Mon Jun  5 17:57:06 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 17:57:06 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7761] User manager should only be accessible to administrator
Message-ID: <200606051557.k55Fv6ga007222@unicorn.berlios.de>

Bug #7761, was updated on 2006-Jun-05 17:57
Here is a current snapshot of the bug.

Project: Plantlore
Category: UserManager
Status: Open
Resolution: None
Bug Group: Bug
Priority: 7
Submitted by: tkovarik
Assigned to : joselada
Summary: User manager should only be accessible to administrator

Details: User manager should only be accessible to someone with CADMINISTRATOR privilege. This is important since normal users should not see information about other users of Plantlore (especially when passwords are displayed in plaintext!)

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7761&group_id=5975


From admin at berlios.de  Mon Jun  5 18:07:10 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:07:10 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7764] Clients can access data from the TUSER table.
Message-ID: <200606051607.k55G7AtE007959@unicorn.berlios.de>

Bug #7764, was updated on 2006-Jun-05 18:07
Here is a current snapshot of the bug.

Project: Plantlore
Category: DBLayer
Status: Open
Resolution: None
Bug Group: Bug
Priority: 9
Submitted by: tkovarik
Assigned to : tkovarik
Summary: Clients can access data from the TUSER table.

Details: Clients, who do not have CADMINISTRATOR privilege should NEVER be able to access data from TUSER table directly, since passwords are stored in plaintext. This has to be solved on the server side to prevent user-hackers to gain access to the database.
It will be neccessary to filter SelectQueries for TUSER table and somehow prevent fetching of User records when selecting data from tables that have FK pointing to TUSER (since Hibernate fetches all FK automatically). This could be done by modifying Hibernate configuration.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7764&group_id=5975


From admin at berlios.de  Mon Jun  5 18:20:42 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:20:42 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7753] Add, Edit, Delete should run in transaction.
Message-ID: <200606051620.k55GKgGI008695@unicorn.berlios.de>

Bug #7753, was updated on 2006-Jun-05 00:35
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 9
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Add, Edit, Delete should run in transaction.

Details: History-friendly implementation is now possible thanks to executeUpdateInTransactionHistory() from revision 444.


Follow-Ups:

Date: 2006-Jun-05 18:20
By: fraktalek

Comment:
Done in revision 449.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7753&group_id=5975


From admin at berlios.de  Mon Jun  5 18:24:43 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:24:43 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7760] Previous selection is not cleared when searching
Message-ID: <200606051624.k55GOhEY009121@unicorn.berlios.de>

Bug #7760, was updated on 2006-Jun-05 17:53
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Previous selection is not cleared when searching

Details: When you select some records in the overview and then search for occurrences, previous selection is not cleared and it is possible to delete selected records (although you do not see them). Furthermore, buttons used for selecting all records, no recordsa and for inverting selection cause NullPointerException to be throws.

How to reproduce:
1. Open Plantlore, login (overview is diaplayed)
2. Select some records (check the checkboxes)
3. Open search dialog, search for something that is not in the database (so that no records are found)
4A. Now overview doesn't display anything, click Delete button. System allows you to delete previously selected records
4B. Click "Invert selection", "Select all" or "Select none" buttons. NPE is thrown.

Although the behaviour described in 4A might be a feature, I think it should not.

Follow-Ups:

Date: 2006-Jun-05 18:24
By: fraktalek

Comment:
This could be a feature in the future (if properly fixed of course). The user could make different searches and checked records would be remembered even after consecutive searches. Would have to fix invert selected though... And perhaps change select all to select all on current page, the same for select none and add functions to select and deselect the whole result...
So right now we'll agreed to fix this bug by always clearing selection when and where apropriate.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7760&group_id=5975


From fraktalek at berlios.de  Mon Jun  5 18:35:01 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Mon, 5 Jun 2006 18:35:01 +0200
Subject: [Plantlore-dev] r450 - trunk/src/net/sf/plantlore/client
Message-ID: <200606051635.k55GZ1Jt022730@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-05 18:34:40 +0200 (Mon, 05 Jun 2006)
New Revision: 450

Modified:
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
Log:
Fixed bug 7760 Previous selection is not cleared when searching.



Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 14:25:23 UTC (rev 449)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 16:34:40 UTC (rev 450)
@@ -324,6 +324,8 @@
     }
     
     public void setResultId(int resultId, SelectQuery sq) throws RemoteException, DBLayerException {
+        getTableModel().clearSelection(); //fix bug #7760
+        
         setChanged();
         notifyObservers("LOADING_NEW_DATA");
         tableSorter.setResultId(resultId, sq);

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 14:25:23 UTC (rev 449)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 16:34:40 UTC (rev 450)
@@ -717,7 +717,8 @@
         } 
 
         public void actionPerformed(ActionEvent actionEvent) {
-            model.selectAll();
+            if (model.getResultsCount() > 0)
+                model.selectAll();
         }
     }
 
@@ -729,7 +730,8 @@
         } 
 
         public void actionPerformed(ActionEvent actionEvent) {
-            model.selectNone();
+            if (model.getResultsCount() > 0)
+                model.selectNone();
         }
     }
     
@@ -741,7 +743,8 @@
         } 
 
         public void actionPerformed(ActionEvent actionEvent) {
-            model.invertSelected();
+            if (model.getResultsCount() > 0)
+                model.invertSelected();
         }
     }
 



From admin at berlios.de  Mon Jun  5 18:35:12 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:35:12 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7760] Previous selection is not cleared when searching
Message-ID: <200606051635.k55GZC7S009675@unicorn.berlios.de>

Bug #7760, was updated on 2006-Jun-05 17:53
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Previous selection is not cleared when searching

Details: When you select some records in the overview and then search for occurrences, previous selection is not cleared and it is possible to delete selected records (although you do not see them). Furthermore, buttons used for selecting all records, no recordsa and for inverting selection cause NullPointerException to be throws.

How to reproduce:
1. Open Plantlore, login (overview is diaplayed)
2. Select some records (check the checkboxes)
3. Open search dialog, search for something that is not in the database (so that no records are found)
4A. Now overview doesn't display anything, click Delete button. System allows you to delete previously selected records
4B. Click "Invert selection", "Select all" or "Select none" buttons. NPE is thrown.

Although the behaviour described in 4A might be a feature, I think it should not.

Follow-Ups:

Date: 2006-Jun-05 18:35
By: fraktalek

Comment:
Fixed in revision 450.
-------------------------------------------------------

Date: 2006-Jun-05 18:24
By: fraktalek

Comment:
This could be a feature in the future (if properly fixed of course). The user could make different searches and checked records would be remembered even after consecutive searches. Would have to fix invert selected though... And perhaps change select all to select all on current page, the same for select none and add functions to select and deselect the whole result...
So right now we'll agreed to fix this bug by always clearing selection when and where apropriate.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7760&group_id=5975


From admin at berlios.de  Mon Jun  5 18:35:20 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:35:20 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7760] Previous selection is not cleared when searching
Message-ID: <200606051635.k55GZK4E009689@unicorn.berlios.de>

Bug #7760, was updated on 2006-Jun-05 17:53
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 5
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Previous selection is not cleared when searching

Details: When you select some records in the overview and then search for occurrences, previous selection is not cleared and it is possible to delete selected records (although you do not see them). Furthermore, buttons used for selecting all records, no recordsa and for inverting selection cause NullPointerException to be throws.

How to reproduce:
1. Open Plantlore, login (overview is diaplayed)
2. Select some records (check the checkboxes)
3. Open search dialog, search for something that is not in the database (so that no records are found)
4A. Now overview doesn't display anything, click Delete button. System allows you to delete previously selected records
4B. Click "Invert selection", "Select all" or "Select none" buttons. NPE is thrown.

Although the behaviour described in 4A might be a feature, I think it should not.

Follow-Ups:

Date: 2006-Jun-05 18:35
By: fraktalek

Comment:
Fixed in revision 450.
-------------------------------------------------------

Date: 2006-Jun-05 18:35
By: fraktalek

Comment:
Fixed in revision 450.
-------------------------------------------------------

Date: 2006-Jun-05 18:24
By: fraktalek

Comment:
This could be a feature in the future (if properly fixed of course). The user could make different searches and checked records would be remembered even after consecutive searches. Would have to fix invert selected though... And perhaps change select all to select all on current page, the same for select none and add functions to select and deselect the whole result...
So right now we'll agreed to fix this bug by always clearing selection when and where apropriate.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7760&group_id=5975


From admin at berlios.de  Mon Jun  5 18:41:30 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:41:30 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7765] Refresh should refresh current search
Message-ID: <200606051641.k55GfUm6009912@unicorn.berlios.de>

Bug #7765, was updated on 2006-Jun-05 18:41
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: Bug
Priority: 4
Submitted by: fraktalek
Assigned to : fraktalek
Summary: Refresh should refresh current search

Details: Now refresh creates default empty query - the same as is created on startup, which is perhaps not what would the user expect.


For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7765&group_id=5975


From admin at berlios.de  Mon Jun  5 19:31:43 2006
From: admin at berlios.de (admin at berlios.de)
Date: Mon, 5 Jun 2006 18:31:43 +0100 (BST)
Subject: [Plantlore-dev] [Bug #7766] History, User - use transaction.
Message-ID: <200606051731.k55HVhVG010080@unicorn.berlios.de>

Bug #7766, was updated on 2006-Jun-05 18:31
Here is a current snapshot of the bug.

Project: Plantlore
Category: History
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: joselada
Assigned to : joselada
Summary: History, User - use transaction.

Details: History - executeUpdateInTransactionHistory(rec).
User manager - executeInsertInTransaction(user/right), executeUpdateInTransaction(user/right).

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7766&group_id=5975


From krater at berlios.de  Mon Jun  5 21:42:58 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 21:42:58 +0200
Subject: [Plantlore-dev] r451 - in trunk/src/net/sf/plantlore/client: . export imports imports/table
Message-ID: <200606051942.k55JgwbC031200@sheep.berlios.de>

Author: krater
Date: 2006-06-05 21:42:54 +0200 (Mon, 05 Jun 2006)
New Revision: 451

Removed:
   trunk/src/net/sf/plantlore/client/imports/ImportMngView.java
Modified:
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/export/ExportMngViewB.form
   trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java
   trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
   trunk/src/net/sf/plantlore/client/imports/ImportMngCtrl.java
   trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java
Log:
Final improvements of import.

Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -250,10 +250,14 @@
     }
     
     public int getResultsCount() {
-        if (tableSorter != null)        
-            return tableSorter.getResultsCount();
-        else
-            return 0;
+        if (tableSorter != null) {        
+        	try {
+                return database.getNumRows(this.getTableModel().getResultId());
+            } catch (RemoteException e) {
+                //
+            }
+        }
+        return 0;
     }
     
     public int getPagesCount() {

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -88,7 +88,6 @@
 import net.sf.plantlore.client.imports.DecisionView;
 import net.sf.plantlore.client.imports.ImportMng;
 import net.sf.plantlore.client.imports.ImportMngCtrl;
-import net.sf.plantlore.client.imports.ImportMngView;
 import net.sf.plantlore.client.imports.ImportProgressCtrl;
 import net.sf.plantlore.client.imports.ImportProgressView;
 import net.sf.plantlore.client.imports.table.TableImportMng;
@@ -181,7 +180,6 @@
     
     // Import
     ImportMng importModel;
-    ImportMngView importView;
     ImportMngCtrl importCtrl;
     ImportProgressView importProgressView;
     ImportProgressCtrl importProgressCtrl;
@@ -469,8 +467,7 @@
         			importProgressView = new ImportProgressView(importModel);
         			importProgressCtrl = new ImportProgressCtrl(importModel, importProgressView);
         			
-        			importView = new ImportMngView(importModel);
-        			importCtrl = new ImportMngCtrl(importModel, importView, importProgressView);
+        			importCtrl = new ImportMngCtrl(importModel, view, importProgressView);
         			
         			importDecisionView = new DecisionView(importModel);
         			importDecisionCtrl = new DecisionCtrl(importModel, importDecisionView);

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngViewB.form
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngViewB.form	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngViewB.form	2006-06-05 19:42:54 UTC (rev 451)
@@ -1,8 +1,10 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<Form version="1.3" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
+<Form version="1.3" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
   <Properties>
-    <Property name="defaultCloseOperation" type="int" value="3"/>
+    <Property name="title" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+      <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Export.SelectColumns" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+    </Property>
   </Properties>
   <SyntheticProperties>
     <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
@@ -20,7 +22,7 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jScrollPane1" alignment="0" pref="380" max="32767" attributes="0"/>
+                  <Component id="jScrollPane1" pref="380" max="32767" attributes="0"/>
                   <Component id="next" alignment="1" min="-2" max="-2" attributes="0"/>
               </Group>
               <EmptySpace max="-2" attributes="0"/>
@@ -32,9 +34,9 @@
           <Group type="102" alignment="0" attributes="0">
               <EmptySpace min="-2" max="-2" attributes="0"/>
               <Component id="jScrollPane1" pref="229" max="32767" attributes="0"/>
-              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
               <Component id="next" min="-2" max="-2" attributes="0"/>
-              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <EmptySpace max="-2" attributes="0"/>
           </Group>
       </Group>
     </DimensionLayout>
@@ -46,6 +48,8 @@
       <SubComponents>
         <Component class="javax.swing.JTree" name="tree">
           <AuxValues>
+            <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new XTree();"/>
+            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="tree.setSelectionModel( tsm );"/>
             <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
           </AuxValues>
         </Component>
@@ -53,7 +57,9 @@
     </Container>
     <Component class="javax.swing.JButton" name="next">
       <Properties>
-        <Property name="text" type="java.lang.String" value="Export"/>
+        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+          <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Export.Title" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+        </Property>
       </Properties>
       <AuxValues>
         <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngViewB.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -42,13 +42,11 @@
         tree = new XTree();
         next = new javax.swing.JButton();
 
-        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
         setTitle(L10n.getString("Export.SelectColumns"));
+        tree.setSelectionModel( tsm );
         jScrollPane1.setViewportView(tree);
 
         next.setText(L10n.getString("Export.Title"));
-        
-        tree.setSelectionModel( tsm );
 
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
@@ -78,7 +76,7 @@
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JScrollPane jScrollPane1;
     protected javax.swing.JButton next;
-    protected XTree tree;
+    protected javax.swing.JTree tree;
     // End of variables declaration//GEN-END:variables
     
 }

Modified: trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -212,10 +212,8 @@
 		problematicRecord = about;
 		observerNotifier.start(); // must be another thread
 		while( lastDecision == Action.UNKNOWN && !aborted ) {
-			System.out.println(">>>> GOING TO SLEEP");
-			try { wait(); } catch( InterruptedException e ) {}
+			try { wait(); } catch( InterruptedException e ) {/* Never mind. */}
 		}
-		System.out.println(">>>> DECISION DONE => AWAKEN!");
 		return lastDecision;
 	}
 	
@@ -371,10 +369,10 @@
 						else
 							switch(intention) {
 							case DELETE:
-								occInDB = (Occurrence) delete( occInDB );
+								occInDB = (Occurrence) delete( occInDB, 1 );
 								// By a common decision: If the habitat is not shared it should be marked as deleted, too.
 								if( sharedBy(occInDB.getHabitat(), Occurrence.class, Occurrence.HABITAT) > 1 )
-									delete( occInDB.getHabitat() );
+									delete( occInDB.getHabitat(), 1 );
 								takenAction = Action.DELETE;
 								break;
 							default:
@@ -433,7 +431,8 @@
 					numberOfUndeadAuthors = 1; // so that the transaction is confirmed
 					
 					for(AuthorOccurrence ao : sharers) 
-						delete( ao );					
+						if( !ao.isDead() )
+							delete( ao, 2 );					
 				}
 				// The intention was to ADD or UPDATE the existing Occurrence record.  
 				else {
@@ -507,7 +506,10 @@
 									ao.setAuthor(authorInDB);
 									
 									// Now the AuthorOccurrence is complete.
-									db.executeInsertInTransaction(ao);	
+									if( occInDB != null )
+										db.executeInsertInTransaction( ao );
+									else
+										/*db.executeInsertInTransactionHistory( ao )*/;
 									
 									numberOfUndeadAuthors++;
 								}
@@ -517,7 +519,7 @@
 								case DELETE:
 									if( !aoInDB.isDead() ) {
 										aoInDB.setOccurrence( occInDB ); // repair the simplified record!
-										delete(aoInDB);
+										delete( aoInDB, 1 );
 										numberOfUndeadAuthors--;
 									}
 									break;
@@ -570,7 +572,7 @@
 			if( transactionInProgress ) 
 				try {
 					transactionInProgress = ! db.rollbackTransaction();
-				} catch (Exception e2) {}
+				} catch (Exception e2) {/* Nothing we can do, can we? */}
 			
 			setChanged(); notifyObservers(e);
 			return;
@@ -1012,11 +1014,11 @@
 	 * to belong to the database layer (ie. it must be something previously
 	 * obtained directly from the database layer).
 	 */
-	public Record delete(Record record) 
+	public Record delete(Record record, int deleteLevel) 
 	throws RemoteException, DBLayerException {
 		if(record instanceof Deletable) {
 			logger.info("Deleting ["+record+"] from the database.");
-			((Deletable)record).setDeleted(1);
+			((Deletable)record).setDeleted(deleteLevel);
 			db.executeUpdateInTransaction( record );
 		}
 		return record;

Modified: trunk/src/net/sf/plantlore/client/imports/ImportMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/ImportMngCtrl.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/imports/ImportMngCtrl.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -1,7 +1,10 @@
 package net.sf.plantlore.client.imports;
 
+import java.awt.Frame;
+
 import javax.swing.JFileChooser;
 import javax.swing.JOptionPane;
+import javax.swing.filechooser.FileFilter;
 
 import net.sf.plantlore.l10n.L10n;
 
@@ -9,20 +12,27 @@
 public class ImportMngCtrl {
 	
 	private ImportMng model;
-	private ImportMngView view;
-	
+	protected JFileChooser choice;
+	private Frame parent;
 	private ImportProgressView  progressView;
 	
-	public ImportMngCtrl(ImportMng model, ImportMngView view, ImportProgressView progressView) {
-		this.model = model; this.view = view; this.progressView = progressView;
+	public ImportMngCtrl(ImportMng model, Frame view, ImportProgressView progressView) {
+		this.model = model; 
+		this.progressView = progressView;
+		this.parent = view;
+		
+		choice = new JFileChooser();
+		choice.setAcceptAllFileFilterUsed(false);
+		for( FileFilter filter: model.getFilters() )
+			choice.addChoosableFileFilter(filter);
 	}
 	
 	public void setVisible(boolean visible) {
 		if(visible) {
-			int result = view.choice.showDialog(null, L10n.getString("Import.Title"));
+			int result = choice.showDialog(parent, L10n.getString("Import.Title"));
 			if( result == JFileChooser.APPROVE_OPTION ) {
 				
-				if(view.choice.getSelectedFile() == null) {
+				if(choice.getSelectedFile() == null) {
 					JOptionPane.showMessageDialog(null,
 							L10n.getString("Error.MissingFileName"),
 							L10n.getString("Error.NothingSelected"),
@@ -30,7 +40,7 @@
 					return;
 				}
 				
-				model.setSelectedFile( view.choice.getSelectedFile().getAbsolutePath() );
+				model.setSelectedFile( choice.getSelectedFile().getAbsolutePath() );
 				try {
 					model.start();
 					progressView.reset();

Deleted: trunk/src/net/sf/plantlore/client/imports/ImportMngView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/ImportMngView.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/imports/ImportMngView.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -1,28 +0,0 @@
-package net.sf.plantlore.client.imports;
-
-import javax.swing.JFileChooser;
-import javax.swing.filechooser.FileFilter;
-
-
-public class ImportMngView {
-	
-	private ImportMng model;
-	protected JFileChooser choice;
-	
-	
-	public ImportMngView(ImportMng model) {
-		this.model = model;
-		initComponents();
-	}
-	
-	
-	private void initComponents() {
-		choice = new JFileChooser();
-		choice.setAcceptAllFileFilterUsed(false);
-		for( FileFilter filter: model.getFilters() )
-			choice.addChoosableFileFilter(filter);
-	}
-	
-	
-	
-}

Modified: trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java	2006-06-05 16:34:40 UTC (rev 450)
+++ trunk/src/net/sf/plantlore/client/imports/table/TableImportMngCtrl.java	2006-06-05 19:42:54 UTC (rev 451)
@@ -25,7 +25,7 @@
 	
 	public void setVisible(boolean visible) {
 		if(visible) {
-			int result = choice.showDialog(null, L10n.getString("Import.Title"));
+			int result = choice.showDialog(view, L10n.getString("Import.Title"));
 			if( result == JFileChooser.APPROVE_OPTION ) {
 				if(choice.getSelectedFile() == null) {
 					JOptionPane.showMessageDialog(null,



From fraktalek at berlios.de  Mon Jun  5 21:46:31 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Mon, 5 Jun 2006 21:46:31 +0200
Subject: [Plantlore-dev] r452 - trunk/src/net/sf/plantlore/client
Message-ID: <200606051946.k55JkVBA031956@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-05 21:46:25 +0200 (Mon, 05 Jun 2006)
New Revision: 452

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreView.form
   trunk/src/net/sf/plantlore/client/AppCoreView.java
Log:
Added item for import to table (JMenuItem dataImportTable) and renamed overview JScrollPane.



Modified: trunk/src/net/sf/plantlore/client/AppCoreView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-06-05 19:42:54 UTC (rev 451)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.form	2006-06-05 19:46:25 UTC (rev 452)
@@ -29,6 +29,14 @@
                 <Property name="text" type="java.lang.String" value="Item"/>
               </Properties>
             </MenuItem>
+            <MenuItem class="javax.swing.JMenuItem" name="dataImportTable">
+              <Properties>
+                <Property name="text" type="java.lang.String" value="Item"/>
+              </Properties>
+              <AuxValues>
+                <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+              </AuxValues>
+            </MenuItem>
             <MenuItem class="javax.swing.JMenuItem" name="dataExport">
               <Properties>
                 <Property name="text" type="java.lang.String" value="Item"/>
@@ -222,7 +230,7 @@
           <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
           <Component id="jPanel4" alignment="0" max="32767" attributes="0"/>
           <Component id="mainToolBar" alignment="0" pref="679" max="32767" attributes="0"/>
-          <Component id="jPanel2" alignment="1" max="32767" attributes="0"/>
+          <Component id="overviewPanel" alignment="1" max="32767" attributes="0"/>
           <Component id="pageToolBar" alignment="0" pref="679" max="32767" attributes="0"/>
       </Group>
     </DimensionLayout>
@@ -231,7 +239,7 @@
           <Group type="102" alignment="1" attributes="0">
               <Component id="mainToolBar" min="-2" max="-2" attributes="0"/>
               <EmptySpace min="-2" max="-2" attributes="0"/>
-              <Component id="jPanel2" max="32767" attributes="0"/>
+              <Component id="overviewPanel" max="32767" attributes="0"/>
               <EmptySpace min="-2" max="-2" attributes="0"/>
               <Component id="jPanel4" min="-2" max="-2" attributes="0"/>
               <EmptySpace min="-2" max="-2" attributes="0"/>
@@ -464,7 +472,10 @@
         </Component>
       </SubComponents>
     </Container>
-    <Container class="javax.swing.JPanel" name="jPanel2">
+    <Container class="javax.swing.JPanel" name="overviewPanel">
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+      </AuxValues>
 
       <Layout>
         <DimensionLayout dim="0">
@@ -474,13 +485,14 @@
         </DimensionLayout>
         <DimensionLayout dim="1">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="overviewScrollPane" alignment="1" pref="388" max="32767" attributes="0"/>
+              <Component id="overviewScrollPane" alignment="1" pref="316" max="32767" attributes="0"/>
           </Group>
         </DimensionLayout>
       </Layout>
       <SubComponents>
         <Container class="javax.swing.JScrollPane" name="overviewScrollPane">
           <AuxValues>
+            <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
             <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
           </AuxValues>
 

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-05 19:42:54 UTC (rev 451)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-05 19:46:25 UTC (rev 452)
@@ -72,7 +72,7 @@
         nextPage = new javax.swing.JButton();
         recordsPerPage = new javax.swing.JFormattedTextField();
         refreshButton = new javax.swing.JButton();
-        jPanel2 = new javax.swing.JPanel();
+        overviewPanel = new javax.swing.JPanel();
         overviewScrollPane = new javax.swing.JScrollPane();
         overview = new javax.swing.JTable();
         jPanel4 = new javax.swing.JPanel();
@@ -85,6 +85,7 @@
         fileLogin = new javax.swing.JMenuItem();
         jSeparator2 = new javax.swing.JSeparator();
         dataImport = new javax.swing.JMenuItem();
+        dataImportTable = new javax.swing.JMenuItem();
         dataExport = new javax.swing.JMenuItem();
         jSeparator3 = new javax.swing.JSeparator();
         fileSettings = new javax.swing.JMenuItem();
@@ -217,15 +218,15 @@
         ));
         overviewScrollPane.setViewportView(overview);
 
-        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
-        jPanel2.setLayout(jPanel2Layout);
-        jPanel2Layout.setHorizontalGroup(
-            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+        org.jdesktop.layout.GroupLayout overviewPanelLayout = new org.jdesktop.layout.GroupLayout(overviewPanel);
+        overviewPanel.setLayout(overviewPanelLayout);
+        overviewPanelLayout.setHorizontalGroup(
+            overviewPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
         );
-        jPanel2Layout.setVerticalGroup(
-            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
+        overviewPanelLayout.setVerticalGroup(
+            overviewPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
         );
 
         recordsCount.setText("-");
@@ -273,6 +274,9 @@
         dataImport.setText("Item");
         fileMenu.add(dataImport);
 
+        dataImportTable.setText("Item");
+        fileMenu.add(dataImportTable);
+
         dataExport.setText("Item");
         fileMenu.add(dataExport);
 
@@ -362,7 +366,7 @@
             .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
             .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
             .add(mainToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
-            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+            .add(org.jdesktop.layout.GroupLayout.TRAILING, overviewPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
             .add(pageToolBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
         );
         layout.setVerticalGroup(
@@ -370,7 +374,7 @@
             .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                 .add(mainToolBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(overviewPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
@@ -678,6 +682,7 @@
     protected javax.swing.JMenuItem dataAuthors;
     private javax.swing.JMenuItem dataExport;
     private javax.swing.JMenuItem dataImport;
+    protected javax.swing.JMenuItem dataImportTable;
     protected javax.swing.JMenu dataMenu;
     protected javax.swing.JMenuItem dataMetadata;
     protected javax.swing.JMenuItem dataPublication;
@@ -697,7 +702,6 @@
     private javax.swing.JButton invertSelected;
     private javax.swing.JMenuBar jMenuBar1;
     private javax.swing.JPanel jPanel1;
-    private javax.swing.JPanel jPanel2;
     private javax.swing.JPanel jPanel3;
     private javax.swing.JPanel jPanel4;
     private javax.swing.JSeparator jSeparator1;
@@ -715,7 +719,8 @@
     private javax.swing.JMenuItem occurrencesScheda;
     private javax.swing.JMenuItem occurrencesSearch;
     protected javax.swing.JTable overview;
-    private javax.swing.JScrollPane overviewScrollPane;
+    protected javax.swing.JPanel overviewPanel;
+    protected javax.swing.JScrollPane overviewScrollPane;
     private javax.swing.JLabel pageStatus;
     private javax.swing.JLabel pageStatusLabel;
     private javax.swing.JToolBar pageToolBar;



From krater at berlios.de  Mon Jun  5 21:57:04 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 21:57:04 +0200
Subject: [Plantlore-dev] r453 - trunk/src/net/sf/plantlore/client
Message-ID: <200606051957.k55Jv45b001906@sheep.berlios.de>

Author: krater
Date: 2006-06-05 21:57:02 +0200 (Mon, 05 Jun 2006)
New Revision: 453

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/AppCoreView.java
Log:
Import bound to the Application Core Controller.

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 19:46:25 UTC (rev 452)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 19:57:02 UTC (rev 453)
@@ -105,1264 +105,1525 @@
 
 import org.apache.log4j.Logger;
 
-/** Application core controller.
- *
+/**
+ * Application core controller.
+ * 
  * Creates and sets listeners for components in <code>AppCoreView</code>.
- *
+ * 
  * @author Jakub
  */
-public class AppCoreCtrl
-{
-    Logger logger;
-    Preferences prefs;
-    private final static int MAX_RECORDS_PER_PAGE = 1000;
-    private boolean showButtonText = true;
-    
-    //--------------SUPPLIED MODELS AND VIEWS-----------------
-    AppCore model;
-    AppCoreView view;
-    
-    //--------------MODELS AND VIEWS THIS CONTROLLER CREATES-----------------
-    AddEdit addModel;
-    AddEdit editModel;
-    AddEditView addView;
-    AddEditView editView;
-    AddEditCtrl addCtrl;
-    AddEditCtrl editCtrl;
-    
-    Search searchModel;
-    SearchView searchView;
-    SearchCtrl searchCtrl;
-    
-    Settings settingsModel;
-    SettingsView settingsView;
-    SettingsCtrl settingsCtrl;
-    
-    Print printModel;
-    PrintView printView;
-    PrintCtrl printCtrl;
-    
-    // History of one occurrence
-    History historyModel;
-    HistoryView historyView;
-    HistoryCtrl historyCtrl;
-    
-    //History of "database" 
-    History wholeHistoryModel;
-    WholeHistoryView wholeHistoryView;
-    WholeHistoryCtrl wholeHistoryCtrl;
-    
-    //MetadataManager
-    MetadataManager metadataManagerModel;
-    MetadataManagerView metadataManagerView;
-    MetadataManagerCtrl metadataManagerCtrl;
-    
-    //PublicationManager
-    PublicationManager publicationManagerModel;
-    PublicationManagerView publicationManagerView;
-    PublicationManagerCtrl publicationManagerCtrl;
-    
-    //UserManager
-    UserManager userManagerModel;
-    UserManagerView userManagerView;
-    UserManagerCtrl userManagerCtrl;
-    
-    // Login
-    Login loginModel;
-    LoginView loginView;
-    LoginCtrl loginCtrl;
-    
-    // Export
-    ExportMng exportModel;
-    ExportMngCtrlA exportCtrl;
-    ExportProgressView exportProgressView;
-    ExportProgressCtrl exportProgressCtrl;
-    
-    // Import
-    ImportMng importModel;
-    ImportMngCtrl importCtrl;
-    ImportProgressView importProgressView;
-    ImportProgressCtrl importProgressCtrl;
-    DecisionView importDecisionView;
-    DecisionCtrl importDecisionCtrl;
-    
-    // Immutable Table Import
-    TableImportMng tableImportModel;
-    TableImportMngCtrl tableImportCtrl;
-    
-    //Detail
-    Detail detailModel;
-    DetailView detailView;
-    DetailCtrl detailCtrl;
+public class AppCoreCtrl {
+	Logger logger;
 
-    //Bridges
-    ManagerBridge managerBridge = new ManagerBridge();
-    
-    //Actions
-    AbstractAction settingsAction = new SettingsAction();
-    AbstractAction printAction = new PrintAction();
-    AbstractAction helpContentsAction = new HelpContentsAction();
-    AbstractAction helpAboutAction = new HelpAboutAction();
-    AbstractAction  exportAction = new ExportAction();
-    AbstractAction importAction = new TableImportAction();
-    
-    AbstractAction dataAuthorsAction = new DataAuthorsAction();
-    AbstractAction dataPublicationsAction = new DataPublicationsAction();
-    AbstractAction dataMetadataAction = new DataMetadataAction();
-    AbstractAction dataHistoryAction = new DataHistoryAction();
-    AbstractAction dataWholeHistoryAction = new DataWholeHistoryAction();
-    AbstractAction dataUserAction = new DataUserAction();
-    
-    AbstractAction historyAction = new DataHistoryAction();
-    AbstractAction schedaAction = new SchedaAction();
-    AbstractAction searchAction = new SearchAction();
-    AbstractAction addAction = new AddAction();
-    AbstractAction editAction = new EditAction();
-    AbstractAction deleteAction = new DeleteAction();
-    AbstractAction selectAllAction = new SelectAllAction();
-    AbstractAction selectNoneAction = new SelectNoneAction();
-    AbstractAction invertSelectedAction = new InvertSelectedAction();
-    AbstractAction nextPageAction = new NextPageAction();
-    AbstractAction prevPageAction = new PreviousPageAction();
-    AbstractAction refreshAction = new RefreshAction();
-    
-    AbstractAction loginAction = new LoginAction();
-    
-    /** Creates a new instance of AppCoreCtrl */
-    public AppCoreCtrl(AppCore model, AppCoreView view)
-    {
-        logger = Logger.getLogger(this.getClass().getPackage().getName());
-        prefs = Preferences.userNodeForPackage(this.getClass());
+	Preferences prefs;
 
-        this.model = model;
-        this.view = view;
-        view.setSettingsAction(settingsAction);
-        view.setPrintAction(printAction);
-        view.addExitListener(new ExitListener());
-        view.setHelpContentsAction(helpContentsAction);
-        view.setHelpAboutAction(helpAboutAction);
-        view.setExportAction(exportAction);
-        view.setImportAction(importAction);
-        
-        view.addDataAuthorsAction(dataAuthorsAction);
-        view.addDataPublicationsAction(dataPublicationsAction);
-        view.addDataMetadataAction(dataMetadataAction);
-        view.addDataHistoryAction(dataHistoryAction);
-        view.addDataWholeHistoryAction(dataWholeHistoryAction);
-        view.addDataUserAction(dataUserAction);
-        
-        view.setSearchAction(searchAction);
-        view.setAddAction(addAction);
-        view.setEditAction(editAction);
-        view.setDeleteAction(deleteAction);
-        view.setSchedaAction(schedaAction);
-        view.setHistoryRecordAction(historyAction);
+	private final static int MAX_RECORDS_PER_PAGE = 1000;
 
-        view.setSelectAllAction(selectAllAction);
-        view.setSelectNoneAction(selectNoneAction);
-        view.setInvertSelectedAction(invertSelectedAction);
-        view.setNextPageAction(nextPageAction);
-        view.setPrevPageAction(prevPageAction);
-        view.setSelectedRowListener(new OverviewSelectionListener());
-        view.overview.addMouseListener(new OverviewMouseListener());
-        view.refreshButton.setAction(refreshAction);
-        view.occurrencesRefresh.setAction(refreshAction);
-        
-        view.overview.addKeyListener(new OverviewKeyListener());
+	private boolean showButtonText = true;
 
-        view.addWindowListener(new AppWindowListener());
-        view.setRecordsPerPageListener(new RecordsPerPagePropertyChangeListener());
-        
-        view.setLoginAction(loginAction);
-                
-        constructDialogs();                
-               
-        // This is here in order to skip login procedure and connect to the database automatically
-        // For developement purposes only - so that we don't have to go through login each time we run Plantlore 
-        // view.initOverview();
-        
-        setDatabaseDependentCommandsEnabled(false);
-    }
-    
-    private void constructDialogs() {
-        //--- Add ---
-        addModel = new AddEdit(model.getDatabase(),false);
-        addView = new AddEditView(view, true, addModel, false);
-        addView.setTitle(L10n.getString("AddEdit.AddDialogTitle"));
-        addCtrl = new AddEditCtrl(addModel, addView, false);
+	// --------------SUPPLIED MODELS AND VIEWS-----------------
+	AppCore model;
 
-        //--- Edit ---
-        editModel = new AddEdit(model.getDatabase(),true);
-        editView = new AddEditView(view, true, editModel, true);
-        editView.setTitle(L10n.getString("AddEdit.EditDialogTitle"));
-        editCtrl = new AddEditCtrl(editModel, editView, true);
-        
-        
-        //--- Search ---
-        searchModel = new Search(model.getDatabase());
-        StatusBarManager sbm = view.getSBM();
-        searchModel.setColumns(model.getTableModel().getColumns());
-        searchView = new SearchView(view, true, searchModel);
-        searchView.setTitle(L10n.getString("Search.DialogTitle"));
-        searchCtrl = new SearchCtrl(searchModel, searchView);
-        searchModel.addObserver(new SearchBridge());
-        
-        //--- Detail ---
-        detailModel = new Detail(model);
-        detailView = new DetailView(detailModel, view, true);
-        detailCtrl = new DetailCtrl(detailModel, detailView);        
-    }
-    
-    private void setDatabaseDependentCommandsEnabled(boolean enabled) {
-        settingsAction.setEnabled(enabled);
-        printAction.setEnabled(enabled);
-        exportAction.setEnabled(enabled);
-        importAction.setEnabled(enabled);
-        
-        dataAuthorsAction.setEnabled(enabled);
-        dataPublicationsAction.setEnabled(enabled);
-        dataMetadataAction.setEnabled(enabled);
-        dataHistoryAction.setEnabled(enabled);
-        dataWholeHistoryAction.setEnabled(enabled);
-        dataUserAction.setEnabled(enabled);
-        
-        historyAction.setEnabled(enabled);
-        schedaAction.setEnabled(enabled);
-        searchAction.setEnabled(enabled);
-        addAction.setEnabled(enabled);
-        editAction.setEnabled(enabled);
-        deleteAction.setEnabled(enabled);
+	AppCoreView view;
 
-        selectAllAction.setEnabled(enabled);
-        selectNoneAction.setEnabled(enabled);
-        invertSelectedAction.setEnabled(enabled);
-        nextPageAction.setEnabled(enabled);
-        prevPageAction.setEnabled(enabled);  
-        view.recordsPerPage.setEnabled(enabled);
-        refreshAction.setEnabled(enabled);
-    }
-    
-    /** Handles click to menu item Settings.
-     *
-     */
-    class SettingsAction extends AbstractAction {
-        public SettingsAction() {
-            putValue(NAME, L10n.getString("Settings"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("SettingsTooltip"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Settings"));            
-        }
-        public void actionPerformed(ActionEvent actionEvent)
-        {
-            logger.info("Settings selected");
-            //If the dialog is already constructed then use it. Otherwise construct it first.
-            if (settingsModel == null) {
-                settingsModel = new Settings();
-                settingsModel.setSelectedColumns(model.getTableModel().getColumns());
-                settingsModel.addObserver(new SettingsBridge());
-                settingsView = new SettingsView(view,true,settingsModel);
-                settingsCtrl = new SettingsCtrl(settingsModel, settingsView);
-            } 
-            //settingsView.loadValues();
-            settingsView.setVisible(true);
-        }
-    }
-    
-    /** Assumes that user doesn't work with the Search dialog at time of the update.
-     *
-     */
-    class SettingsBridge implements Observer {        
-        public void update(Observable o, Object arg) {
-            if (arg instanceof String) {                
-                String s = (String)arg;
-                if (s.equals("COLUMNS")) {
-                    logger.debug("User changed columns in settings. Propagating the change to overview and config.");
-                    ArrayList<Column> columns = settingsModel.getSelectedColumns();
-                    model.getTableSorter().setColumns(columns);
-                    model.getMainConfig().setColumns(columns);
-                    
-                    searchModel.setColumns(columns);
-                    searchModel.clear();
-                    searchModel.constructQuery();
-                }
-            }
-        }        
-    }
-    
-    class PrintAction extends AbstractAction {
-        public PrintAction() {
-            putValue(NAME, L10n.getString("Print"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("PrintTooltip"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Print"));                        
-        }
-        public void actionPerformed(ActionEvent actionEvent)
-        {
-            if (printModel == null) {
-                printModel = new Print();
-                printView = new PrintView(view, true, printModel);
-                printCtrl = new PrintCtrl(printModel, printView);
-            }
-            Selection sel = model.getTableModel().getSelection();
-            if (sel.values().size() < 1) {
-                JOptionPane.showMessageDialog(view, "Please check at least one record.");
-                return;
-            }
-            printModel.setSource(model.getDatabase(), sel);
-            printView.setVisible(true);
-        }
-    }
-    
-    
-    /** Handles the exit command.
-     *
-     * Maybe settings should be stored first?
-     */
-    class ExitListener implements ActionListener {
-        public void actionPerformed(ActionEvent actionEvent) 
-        {
-            try {
-                model.savePreferences();
-            } catch (IOException ex) {
-                JOptionPane.showMessageDialog(view, "Problem while saving configuration: "+ex.getMessage());
-            }
-            // Destroy the DBLayer
-            //model.getDatabase().destroy();  --- takhle se to nesmi delat, musi ji znicit factory, ktera ji vyrobila
-            System.exit(0);
-        }
-    }
+	// --------------MODELS AND VIEWS THIS CONTROLLER CREATES-----------------
+	AddEdit addModel;
 
-    class HelpContentsAction extends AbstractAction {
-        public HelpContentsAction() {
-            putValue(NAME, L10n.getString("helpContents"));
-            putValue(SHORT_DESCRIPTION, "Help contents");
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("helpContents"));
-        }
-        public void actionPerformed(ActionEvent actionEvent) {
-            System.out.println("Help contents selected");
-        }
-    }
-        
-    class HelpAboutAction extends AbstractAction {
-        public HelpAboutAction() {
-            putValue(NAME, L10n.getString("helpAbout"));
-            putValue(SHORT_DESCRIPTION, "Help about tooltip");
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("helpAbout"));
-        }
-        public void actionPerformed(ActionEvent actionEvent)
-        {
-            System.out.println("Help about selected");
-        }
-    }
-    
-    class ImportAction extends AbstractAction {
-        public ImportAction() {
-            putValue(NAME, L10n.getString("dataImport"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("dataImportTooltip"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("dataImport"));            
-        } 
+	AddEdit editModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-        	if(importModel == null) {
-        		try {
-        			importModel = new ImportMng(model.getDatabase());
-        			importProgressView = new ImportProgressView(importModel);
-        			importProgressCtrl = new ImportProgressCtrl(importModel, importProgressView);
-        			
-        			importCtrl = new ImportMngCtrl(importModel, view, importProgressView);
-        			
-        			importDecisionView = new DecisionView(importModel);
-        			importDecisionCtrl = new DecisionCtrl(importModel, importDecisionView);
-        		} catch(ImportException e) {
-        			logger.error("Import MVC cannot be created. " + e.getMessage());
-        			return;
-        		}
-        	}
-        	
-        	if(importModel.isImportInProgress())
-        		importProgressView.setVisible(true);
-        	else
-        		importCtrl.setVisible(true);
-        	
-        }
-    }
-    
-    
-    class TableImportAction extends AbstractAction {
-        public TableImportAction() {
-            putValue(NAME, L10n.getString("Overview.TableImport"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.TableImportTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.TableImport"));            
-        } 
+	AddEditView addView;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-        	if(tableImportModel == null) {
-        		try {
-        			tableImportModel = new TableImportMng( model.getDatabase() );
-        			tableImportCtrl = new TableImportMngCtrl( tableImportModel, view );
-        		} catch(ImportException e) {
-        			logger.error("Import MVC cannot be created. " + e.getMessage());
-        			return;
-        		}
-        	}
+	AddEditView editView;
 
-        	tableImportCtrl.setVisible( true );
-        }
-    }
-    
-    
-    class ExportAction extends AbstractAction {
-        public ExportAction() {
-            putValue(NAME, L10n.getString("dataExport"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("dataExportTooltip"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("dataExport"));            
-        } 
+	AddEditCtrl addCtrl;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            // Create a new dialog if it already doesn't exist.
-            if(exportModel == null) {
-            	try {
-            		exportModel = new ExportMng(model.getDatabase());
-            		exportProgressView = new ExportProgressView(null);
-            		exportProgressCtrl = new ExportProgressCtrl(null, exportProgressView);
-            		exportCtrl = new ExportMngCtrlA(exportModel, view, exportProgressView, exportProgressCtrl);
-            	} catch(ExportException e) {
-            		logger.error("Export MVC cannot be created. " + e.getMessage());
-            		return;
-            	}
-            }
-            // Display the progress view if an export is already running.
-            if(exportModel.isAnExportInProgress())
-        		exportProgressView.setVisible(true);
-            // Display the Export dialog.
-            else {
-            	try {
-            		/*==============================================================
-            		 * Right after the startup the searchModel may not be initialized!
-            		 * (if Export is called prior to Search...)
-            		 * 
-            		 * FIXME: Solve this with Jakub.
-            		 *==============================================================*/
-            		SelectQuery query;
-            		if(searchModel == null) {
-            			System.out.println(">>>>>>>> CREATING A FAKE QUERY");
-            			query = model.getDatabase().createQuery(Occurrence.class); // fake the query
-            		}
-            		else {
-            			Object[] queryParam = searchModel.constructExportQuery();
-            			query = (SelectQuery)queryParam[0];
-            			if( (Boolean)queryParam[1] ) { // use projections
-            				exportModel.useProjections(true);
-            				exportModel.setRootTable( (Class)queryParam[2] );
-            			}
-            		}
-            		exportModel.setSelectQuery( query );
-            		exportModel.setSelection(model.getTableModel().getSelection());
-            	} catch (DBLayerException e) {
-            		JOptionPane.showMessageDialog(view, "DBLayer Exception: "+e);
-            		return;
-            	} catch (RemoteException e) {
-            		JOptionPane.showMessageDialog(view, "Remote Exception: "+e);
-            		return;
-            	}
-            	exportCtrl.setVisible(true);
-            }
-        }
-    }
+	AddEditCtrl editCtrl;
 
-    class AddAction extends AbstractAction {
-        public AddAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.Add"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Add24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.AddTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Add"));            
-        } 
+	Search searchModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {         
-            try {
-                if (model.getDatabase().getUserRights().getAdd() != 1) {
-                    JOptionPane.showMessageDialog(view, L10n.getString("AddEdit.InsufficientAddRights"),L10n.getString("AddEdit.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;
-                }
-            } catch (RemoteException ex) {
-                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+ex.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                logger.error(ex);
-            }
-            addModel.clear();
-            addView.setVisible(true);
-        }
-    }
-    
-    class EditAction extends AbstractAction {
-        public EditAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.Edit"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Edit24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.EditTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E, ActionEvent.CTRL_MASK));
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Edit"));            
-        } 
-        
-        public void actionPerformed(ActionEvent actionEvent) {
-            Object[] row = model.getSelectedRow();
-            
-            try {
-                if (!model.isEditAllowed(model.getSelectedOccurrence())) {
-                    JOptionPane.showMessageDialog(view, L10n.getString("AddEdit.InsufficientEditRights"),L10n.getString("AddEdit.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;
-                }
-                editModel.setRecord((Integer) row[row.length-1]);
-            } catch (DBLayerException ex) {
-                JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+ex.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                logger.error(ex+": "+ex.getErrorInfo());
-            } catch (RemoteException ex) {
-                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+ex.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                logger.error(ex);
-            }
-            editView.loadComponentData();
-            editView.setVisible(true);
-        }
-    }
-    
-    class DeleteAction extends AbstractAction {
-        public DeleteAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.Delete"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Delete24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.DeleteTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0));
+	SearchView searchView;
 
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Delete"));            
-        } 
+	SearchCtrl searchCtrl;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            Selection selection = model.getTableModel().getSelection();
-            Object[] arg = { selection.values().size() };
-            
-            if (arg[0].equals(0)) {
-                JOptionPane.showMessageDialog(view, L10n.getString("Message.CheckAnOccurrence"),L10n.getString("Message.CheckAnOccurrenceTitle"),JOptionPane.INFORMATION_MESSAGE);
-                return;                
-            }
-            
-            try {
-                for (Integer occId : selection.values())
-                    if (!model.isEditAllowed(occId)) {
-                        JOptionPane.showMessageDialog(view, L10n.getString("Delete.InsufficientRights"), L10n.getString("Delete.InsufficientRightsTitle"),JOptionPane.INFORMATION_MESSAGE);
-                        return;
-                    }
-            } catch (RemoteException ex) {  
-                logger.error("Remote problem: "+ex);
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
-            } catch (DBLayerException ex) {
-                logger.error("Database problem: "+ex);
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
-            }
-            
-            int choice = JOptionPane.showConfirmDialog(view, 
-                    L10n.getFormattedString("Message.DeleteRecords",arg),
-                    L10n.getString("Message.DeleteRecordsTitle"),
-                    JOptionPane.OK_CANCEL_OPTION,
-                    JOptionPane.WARNING_MESSAGE);
+	Settings settingsModel;
 
-            switch (choice) {
-                case JOptionPane.CANCEL_OPTION:
-                    return;
-                case JOptionPane.OK_OPTION:
-                    logger.info("Deleting "+arg[0]+" records.");
+	SettingsView settingsView;
 
-                    Task task = model.deleteSelected();
-                    
-                    ProgressBar progressBar = new ProgressBar(task,view,true) {
-                        public void exceptionHandler(Exception ex) {
-                            if (ex instanceof DBLayerException) {
-                                DBLayerException e = (DBLayerException)ex;
-                                JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                                logger.error(e+": "+e.getErrorInfo());
-                                getTask().stop();
-                                return;
-                            }
-                            if (ex instanceof RemoteException) {
-                                RemoteException e = (RemoteException)ex;
-                                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                                logger.error(e);
-                                getTask().stop();
-                                return;
-                            }
-                            JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                            logger.error(ex);                            
-                        }              
-                        
-                        public void afterStopped(Object value) {
-                            refreshOverview(false); //false -> do not create task, refresh the overview directly in this thread
-                        }
-                    };
-                    progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
-                    
-                    task.start();
-                    break;
-            }//switch
-        }
-    }
+	SettingsCtrl settingsCtrl;
 
-    class SelectAllAction extends AbstractAction {
-        public SelectAllAction() {
-            putValue(NAME, L10n.getString("Overview.SelectAll"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SelectAllTT"));
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.SelectAll"));            
-        } 
+	Print printModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            if (model.getResultsCount() > 0)
-                model.selectAll();
-        }
-    }
+	PrintView printView;
 
-    class SelectNoneAction extends AbstractAction {
-        public SelectNoneAction() {
-            putValue(NAME, L10n.getString("Overview.SelectNone"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SelectNoneTT"));
-//            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.SelectNone"));            
-        } 
+	PrintCtrl printCtrl;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            if (model.getResultsCount() > 0)
-                model.selectNone();
-        }
-    }
-    
-    class InvertSelectedAction extends AbstractAction {
-        public InvertSelectedAction() {
-            putValue(NAME, L10n.getString("Overview.InvertSelected"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.InvertSelectedTT"));
-//            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.InvertSelected"));            
-        } 
+	// History of one occurrence
+	History historyModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            if (model.getResultsCount() > 0)
-                model.invertSelected();
-        }
-    }
+	HistoryView historyView;
 
-    class SearchAction extends AbstractAction {
-        public SearchAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.Search"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Search24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SearchTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));
-                        
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Search"));            
-        } 
+	HistoryCtrl historyCtrl;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            searchModel.clear();
-            searchView.setVisible(true);
-        }
-    }
-    
-    class SearchBridge implements Observer {
-        public void update(Observable o, Object arg) {
-            if (arg != null && arg instanceof Integer) {
-                logger.debug("Fetching new result id from Search model. Storing it to AppCore model.");
-                try {
-                    model.setResultId(searchModel.getNewResultId(), searchModel.getNewSelectQuery());
-                } catch (RemoteException ex) {
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+ex.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                    logger.error(ex);
-                } catch (DBLayerException ex) {
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+ex.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                    logger.error(ex+": "+ex.getErrorInfo());
-                }
-                //model.setExportQuery(searchModel.getExportQuery(), false, Occurrence.class);
-            }
-        }
-        
-        
-    }
-    
-    class SchedaAction extends AbstractAction {
-        public SchedaAction() {
-            putValue(NAME, L10n.getString("Overview.Scheda"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SchedaTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));
-//            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Scheda"));            
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/ComposeMail24.gif"));
-        } 
+	// History of "database"
+	History wholeHistoryModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            try {
-                if (model.getTableModel().getSelection().values().size() < 1) {
-                    JOptionPane.showMessageDialog(view, L10n.getString("Message.CheckAnOccurrence"),L10n.getString("Message.CheckAnOccurrenceTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;
-                }
+	WholeHistoryView wholeHistoryView;
 
-                final JasperReport schedaReport;
-                InputStream schedaIs = this.getClass().getClassLoader().getResourceAsStream("net/sf/plantlore/client/resources/SchedaA6.jasper");
+	WholeHistoryCtrl wholeHistoryCtrl;
 
-                try {
-                    ObjectInputStream schedaOis = new ObjectInputStream(schedaIs);
-                    schedaReport = (JasperReport) schedaOis.readObject();
-                } catch (FileNotFoundException ex) {
-                    logger.error("Problem loading jasper report resource: "+ex);
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.InternalProblem")+"\n"+ex.getMessage(),L10n.getString("Error.InternalProblemTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;                    
-                } catch (IOException ex) {                    
-                    logger.error("Problem loading jasper report resource: "+ex);
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.InternalProblem")+ex.getMessage(),L10n.getString("Error.InternalProblemTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;
-                } catch (ClassNotFoundException ex) {
-                    logger.error("Problem loading jasper report resource: "+ex);
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.InternalProblem")+ex.getMessage(),L10n.getString("Error.InternalProblemTitle"),JOptionPane.INFORMATION_MESSAGE);
-                    return;                    
-                }
-                                
-                prefs = Preferences.userNodeForPackage(AppCoreCtrl.class);
-                String h1 = prefs.get("HEADER_ONE","Set the first header in settings, please.");
-                String h2 = prefs.get("HEADER_TWO","Set the second header in settings, please.");
-                final HashMap params = new HashMap();
-                params.put("HEADER_ONE",h1);
-                params.put("HEADER_TWO",h2);
-                
-                Task task = new Task() {
-                    JasperPrint jasperPrint;
-                    public Object task() throws JRException {
-                        jasperPrint = JasperFillManager.fillReport(
-                              schedaReport, params, new JasperDataSource(
-                                                    model.getDatabase(), model.getTableModel().getSelection() )
-                                                    );
-                        fireStopped(jasperPrint);
-                        return jasperPrint;
-                    }
-                };
-                
-                ProgressBar pb = new ProgressBar(task, view, true) {
-                    public void exceptionHandler(final Exception ex) {
-                        logger.error("Error while filling jasper report in SchedaAction: "+ex);
-                        ex.printStackTrace();
-                        SwingUtilities.invokeLater(new Runnable() {
-                            public void run() {
-                                JOptionPane.showMessageDialog(view.getParent(), L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);            
-                            }
-                        });
-                        getTask().stop();
-                    }                    
-                    public void afterStopped(final Object value) {
-                        SwingUtilities.invokeLater(new Runnable() {
-                            public void run() {
-                                new SchedaView(view, true, (JasperPrint)value).setVisible(true);  
-                            }                            
-                        });
-                    }
-                };
-                pb.setTitle(L10n.getString("Scheda.ProgressTitle"));
-                
-                task.start();
-            } catch(Exception ex) { // Unreachable CATCH block
-                logger.error("Broken report: "+ex);
-                JOptionPane.showMessageDialog(view,L10n.getString("Print.Message.BrokenReport")+"\n"+ex.getMessage(),L10n.getString("Print.Message.BrokenReport"),JOptionPane.WARNING_MESSAGE);
-                ex.printStackTrace();
-            }
-        }
-    }
-    
-    class PreviousPageAction extends AbstractAction {
-        public PreviousPageAction() {
-            putValue(NAME, L10n.getString("Overview.PrevPage"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.PrevPageTT"));
-//            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.PrevPage"));            
-        } 
+	// MetadataManager
+	MetadataManager metadataManagerModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            try {
-                model.prevPage();
-            } catch (RemoteException ex) {
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
-            } catch (DBLayerException ex) {
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
-            }
-        }
-    }
-    
-    class NextPageAction extends AbstractAction {
-        public NextPageAction() {
-            putValue(NAME, L10n.getString("Overview.NextPage"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.NextPageTT"));
-//            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.NextPage"));            
-        } 
+	MetadataManagerView metadataManagerView;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            try {
-                model.nextPage();
-            } catch (RemoteException ex) {
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
-            } catch (DBLayerException ex) {
-                ex.printStackTrace();
-                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
-            }
-        }
-    }
+	MetadataManagerCtrl metadataManagerCtrl;
 
-    class AppWindowListener extends WindowAdapter {
-        public void windowClosing(WindowEvent e)
-        {
-            try {
-                model.savePreferences();
-            } catch (IOException ex) {
-                JOptionPane.showMessageDialog(view, "Problem while saving configuration: "+ex.getMessage());
-            }
-        }
-    }
+	// PublicationManager
+	PublicationManager publicationManagerModel;
 
-    class DataAuthorsAction extends AbstractAction {
-        public DataAuthorsAction() {
-            putValue(NAME, L10n.getString("Overview.MenuDataAuthors"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.MenuDataAuthorsTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuDataAuthors"));                        
-        }
-        public void actionPerformed(ActionEvent e) {
-            AuthorManager authModel = new AuthorManager(model.getDatabase());
-            AuthorManagerView authView = new AuthorManagerView(authModel, view, true);
-            AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel, authView);
-            authView.setVisible(true);                
-        }
-        
-    }
-    
-    
-    class DataPublicationsAction extends AbstractAction {
-        public DataPublicationsAction() {
-            putValue(NAME, L10n.getString("Overview.MenuDataPublications"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.MenuDataPublicationsTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuDataPublications"));
-        }
+	PublicationManagerView publicationManagerView;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            publicationManagerModel = new PublicationManager(model.getDatabase());
-            publicationManagerView = new PublicationManagerView(publicationManagerModel, view, true);
-            publicationManagerCtrl = new PublicationManagerCtrl(publicationManagerModel, publicationManagerView);
-            publicationManagerView.setVisible(true); 
-        }
-    }   
-    
-        class DataUserAction extends AbstractAction {
-        public DataUserAction() {
-             putValue(NAME, L10n.getString("userManager"));
-        }
+	PublicationManagerCtrl publicationManagerCtrl;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            System.out.println("UserManager");
+	// UserManager
+	UserManager userManagerModel;
 
-            userManagerModel = new UserManager(model.getDatabase());
-            userManagerView = new UserManagerView(userManagerModel, view, true);
-            userManagerCtrl = new UserManagerCtrl(userManagerModel, userManagerView);
-            userManagerView.setVisible(true); 
-        }
-    }    
-    
-    class DataHistoryAction extends AbstractAction {
-        public DataHistoryAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.History"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/History24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.HistoryTT"));
-//            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.History"));                        
-        }
-        
-        public void actionPerformed(ActionEvent e) {
-            System.out.println("Undo selected");
-            //toto volani historie nebude v menu, ale jako tlacitko pro vybrany zaznam        
-            //o vybranem zaznamu predame informace, ktere chceme o nem v historii zobrazit
-            //jmeno rosliny, jmeno autora a lokaci a idOccurrences
-                                   
-            historyModel = new History(model.getDatabase(), model.getSelectedOccurrence());
-            historyView = new HistoryView(historyModel, view, true);
-            historyCtrl = new HistoryCtrl(historyModel, historyView);
-            historyModel.addObserver(managerBridge);
-            historyView.setVisible(true);                         
-        }
-        
-    }
-        
-    class DataWholeHistoryAction extends AbstractAction {
-        public DataWholeHistoryAction() {
-             putValue(NAME, L10n.getString("wholeHistory"));
-        }
+	UserManagerView userManagerView;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            System.out.println("Whole history - Undo selected");
+	UserManagerCtrl userManagerCtrl;
 
-            wholeHistoryModel = new History(model.getDatabase());
-            wholeHistoryView = new WholeHistoryView(wholeHistoryModel, view, true);
-            wholeHistoryCtrl = new WholeHistoryCtrl(wholeHistoryModel, wholeHistoryView);
-            wholeHistoryModel.addObserver(managerBridge);
-            wholeHistoryView.setVisible(true); 
-        }
-    }    
-    
-   /* 
-    *
-    */
-    class DataMetadataAction extends AbstractAction {
-        public DataMetadataAction() {
-             putValue(NAME, L10n.getString("metadataManager"));
-             putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_M, ActionEvent.CTRL_MASK));
-        }
+	// Login
+	Login loginModel;
 
-        public void actionPerformed(ActionEvent actionEvent) {
-            System.out.println("Metadata Manager");
+	LoginView loginView;
 
-            metadataManagerModel = new MetadataManager(model.getDatabase());
-            metadataManagerView = new MetadataManagerView(metadataManagerModel, view, true);
-            metadataManagerCtrl = new MetadataManagerCtrl(metadataManagerModel, metadataManagerView);
-            metadataManagerModel.addObserver(managerBridge);
-            metadataManagerView.setVisible(true);
-        }
-    }              
-    
-    class RecordsPerPagePropertyChangeListener implements PropertyChangeListener {
-        public void propertyChange(PropertyChangeEvent e) {
-            JFormattedTextField tf = (JFormattedTextField)e.getSource();
-            if (e != null && e.getPropertyName().equals("value")) 
-            {
-                int i = ((Number)tf.getValue()).intValue(); 
-                if (i > MAX_RECORDS_PER_PAGE) {
-                    JOptionPane.showMessageDialog(view,L10n.getString("Overview.Warning.MaxRecordsPerPage")+" "+MAX_RECORDS_PER_PAGE);
-                    Object obj = e.getOldValue();
-                    if (obj != null)
-                        tf.setValue(obj);
-                    else // either multiple properties changed or there was no previous value - the value should better be at least 1 anyway...
-                        tf.setValue(prefs.getInt("recordsPerPage", 30));
-                    return;
-                }
-                
-                if (i < 1)
-                {
-                    Object obj = e.getOldValue();
-                    if (obj != null)
-                        tf.setValue(obj);
-                    else // either multiple properties changed or there was no previous value - the value should better be at least 1 anyway...
-                        tf.setValue(1);
-                } else {
-                    model.setRecordsPerPage(i);                    
-                }
-            }
-        }  
-    }
-    
-    class OverviewSelectionListener implements ListSelectionListener {
-        public void valueChanged(ListSelectionEvent e) {
-            //Ignore extra messages.
-            if (e.getValueIsAdjusting()) return;
-            
-            ListSelectionModel lsm =
-                    (ListSelectionModel)e.getSource();
-            if (lsm.isSelectionEmpty()) {
-                //no rows are selected
-            } else {
-                int selectedRow = lsm.getMinSelectionIndex();
-                model.setSelectedRow(selectedRow);
-                //selectedRow is selected
-            }
-        }
-    }
-    
-    class OverviewMouseListener implements MouseListener {
-        public void mouseClicked(MouseEvent e) {
-            if (e.getClickCount() == 2) {
-                JOptionPane.showMessageDialog(view,"Double click! On row #"+model.getSelectedRowNumber());
-            }
-            System.out.println("Click count = "+e.getClickCount());
-        }
+	LoginCtrl loginCtrl;
 
-        public void mousePressed(MouseEvent e) {
-        }
+	// Export
+	ExportMng exportModel;
 
-        public void mouseReleased(MouseEvent e) {
-        }
+	ExportMngCtrlA exportCtrl;
 
-        public void mouseEntered(MouseEvent e) {
-        }
+	ExportProgressView exportProgressView;
 
-        public void mouseExited(MouseEvent e) {
-        }
-        
-    }
-    
-    class OverviewKeyListener implements KeyListener {
-        public void keyTyped(KeyEvent e) {
-            System.out.println("Typed key: char="+e.getKeyChar()+" code="+e.getKeyCode()+" text="+e.getKeyText(e.getKeyChar())+" modif="+e.getKeyModifiersText(e.getModifiers()));
-            if (e.getKeyText(e.getKeyChar()).equals("Space"))
-                model.invertSelectedOnCurrentRow();
-            if (e.getKeyText(e.getKeyChar()).equals("Enter")) {
-                try {
-                    int resultNumber = model.getSelectedResultNumber();
-                    if (resultNumber != model.getResultsCount())
-                        model.selectAndShow(resultNumber - 1);//After Enter the hyperactive JTable moves selection to next row, so we need to correct that
-                    detailModel.load(model.getSelectedResultNumber());
-                    detailView.setVisible(true);
-                } catch (RemoteException ex) {  
-                    JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
-                    ex.printStackTrace();
-                } catch (DBLayerException ex) {
-                    JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
-                    ex.printStackTrace();
-                }
-            }
-        }
+	ExportProgressCtrl exportProgressCtrl;
 
-        public void keyPressed(KeyEvent e) {
-            
-        }
+	// Import
+	ImportMng importModel;
 
-        public void keyReleased(KeyEvent e) {
-        }
-        
-    }
-    
-    class LoginAction extends AbstractAction {
-        public LoginAction() {
-            putValue(NAME, L10n.getString("Overview.MenuFileLogin"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.MenuFileLoginTT"));
-            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuFileLogin"));                        
-        }
-        public void actionPerformed(ActionEvent arg0) {
-                // Reuse the existing dialogs, hide'em when they're no longer needed.
-                if(loginModel == null) {
-                	loginModel = new Login(new RMIDBLayerFactory(), model.getMainConfig());
-                	loginModel.addObserver(new DatabaseChange());
-                	loginView = new LoginView(view, loginModel);
-                	loginCtrl = new LoginCtrl(loginModel, loginView);
-                }
-                loginCtrl.setVisible(true);
-        }
-    }
-    
-    // Update all information about the database layer and inform everyone who has to be informed 
-    class DatabaseChange implements Observer {
-        /** Fetches combobox items from AppCore and stores them to dialog models.
-         *
-         */
-        private void fillDialogModels() {
-            logger.debug("Filling Add model.");
-                addModel.setAuthors(model.getAuthors());
-                addModel.setAuthorRoles(model.getAuthorRoles());
-                addModel.setPlants(model.getPlants());
-                addModel.setVillages(model.getVillages());
-                addModel.setPhytNames(model.getPhytNames());
-                addModel.setPhytCodes(model.getPhytCodes());
-                addModel.setCountries(model.getCountries());
-                addModel.setSources(model.getSources());
-                addModel.setPublications(model.getPublications());
-                addModel.setProjects(model.getProjects());
-                addModel.setTerritories(model.getTerritories());            
+	ImportMngCtrl importCtrl;
 
-            logger.debug("Filling Edit model.");
-                editModel.setAuthors(model.getAuthors());
-                editModel.setAuthorRoles(model.getAuthorRoles());
-                editModel.setPlants(model.getPlants());
-                editModel.setVillages(model.getVillages());
-                editModel.setPhytNames(model.getPhytNames());
-                editModel.setPhytCodes(model.getPhytCodes());
-                editModel.setCountries(model.getCountries());
-                editModel.setSources(model.getSources());
-                editModel.setPublications(model.getPublications());
-                editModel.setProjects(model.getProjects());
-                editModel.setTerritories(model.getTerritories());
+	ImportProgressView importProgressView;
 
-            logger.debug("Filling Search model.");
-                searchModel.setAuthors(model.getAuthors());
-                searchModel.setAuthorRoles(model.getAuthorRoles());
-                searchModel.setPlants(model.getPlants());
-                searchModel.setVillages(model.getVillages());
-                searchModel.setPhytNames(model.getPhytNames());
-                searchModel.setPhytCodes(model.getPhytCodes());
-                searchModel.setCountries(model.getCountries());
-                searchModel.setSources(model.getSources());
-                searchModel.setPublications(model.getPublications());
-                searchModel.setProjects(model.getProjects());
-                searchModel.setTerritories(model.getTerritories());
-        }
+	ImportProgressCtrl importProgressCtrl;
 
-    	public void update(Observable targer, Object parameter) {
-    		if(parameter != null && parameter instanceof DBLayer) {
-                        loginAction.setEnabled(false);
-                        view.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
+	DecisionView importDecisionView;
 
-                        System.out.println("[!] DBLayer retrieval.");
-    			DBLayer dblayer = loginModel.getDBLayer();
+	DecisionCtrl importDecisionCtrl;
 
+	// Immutable Table Import
+	TableImportMng tableImportModel;
 
-                        //FIXME: neni potreba zresetovat stav treba loginModelu, pokdu neco takhle selze? pripadne stav jinyho objektu?
-                        try {
-                            model.setDatabase(dblayer);
-                        } catch (RemoteException ex) {
-                            JOptionPane.showMessageDialog(view,"Remote problem","Some remote problem occurred:\n"+ex,JOptionPane.WARNING_MESSAGE);
-                            return;
-                        } catch (DBLayerException ex) {
-                            JOptionPane.showMessageDialog(view,"Database problem","Some database problem occurred:\n"+ex,JOptionPane.WARNING_MESSAGE);
-                            return;
-                        }
-                        //distribute database to dialogs
-                        addModel.setDatabase(dblayer);
-                        editModel.setDatabase(dblayer);
-                        searchModel.setDatabase(dblayer);
-                        detailModel.setDatabase(dblayer);
-    			
-                        model.setAccessRights( loginModel.getAccessRights() );
-                        model.login();
-                        
-                        view.getSBM().display(L10n.getString("Message.FillingDialogs"));
-                        fillDialogModels();
-                        
-                        view.getSBM().display(L10n.getString("Message.LoadingOverviewData"));
-                        searchModel.clear();
-                        searchModel.constructQuery();
-                        view.getSBM().displayDefaultText();
-                        
-    			view.initOverview();
-                        view.setCursor(Cursor.getDefaultCursor());
-                        setDatabaseDependentCommandsEnabled(true);
-    		}
-    	}
-    }
-    
-    private Task refreshOverview(boolean createTask) {
-        if (createTask) {
-            Task task = new Task() {
-                public Object task() {
-                    searchModel.clear();
-                    searchModel.constructQuery();
-                    fireStopped(null);
-                    return null;
-                }
-            };
+	TableImportMngCtrl tableImportCtrl;
 
-            return task;
-        } else {
-            searchModel.clear();
-            searchModel.constructQuery();
-            return null;
-        }
-    }
-    
-    class RefreshAction extends AbstractAction {
-        public RefreshAction() {
-            if (showButtonText)
-                putValue(NAME, L10n.getString("Overview.Refresh"));
-            putValue(SMALL_ICON,Resource.createIcon("/toolbarButtonGraphics/general/Refresh24.gif"));
-            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.RefreshTT"));
-            putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_R, ActionEvent.CTRL_MASK));
-            //putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Refresh"));                        
-        }
+	// Detail
+	Detail detailModel;
 
-        public void actionPerformed(ActionEvent e) {
-            // e can be null !!! - we call actionPerformed(null) in DeleteAction
-            Task task = refreshOverview(true);
-            ProgressBar progressBar = new ProgressBar(task, view, true) {
-                public void exceptionHandler(Exception ex) {   
-                    //FIXME
-                    ex.printStackTrace();
-                    getTask().stop();
-                }                    
-            };
-            progressBar.setTitle(L10n.getString("Overview.Refresh.ProgressTitle"));
+	DetailView detailView;
 
-            task.start(); 
-        }
-        
-    }
-    
-    /** Propagates changes made in managers to the rest of the application.
-     *
-     */
-    class ManagerBridge implements Observer {
-        public void update(Observable o, Object arg) {
-            if (arg instanceof PlantloreConstants.Table[]) {
-                PlantloreConstants.Table[] tables = (PlantloreConstants.Table[])arg;   
-                try {
-                for (PlantloreConstants.Table table : tables) {
-                    logger.debug("ManagerBridge received message that "+table+" has been updated.");
-                    switch (table) {
-                        case AUTHOR:
-                            model.loadAuthors();
-                            addModel.setAuthors(model.getAuthors());
-                            editModel.setAuthors(model.getAuthors());
-                            searchModel.setAuthors(model.getAuthors());
-                            break;
-                        case AUTHOROCCURRENCE:
-                            model.loadAuthorRoles();
-                            addModel.setAuthorRoles(model.getAuthorRoles());
-                            editModel.setAuthorRoles(model.getAuthorRoles());
-                            searchModel.setAuthorRoles(model.getAuthorRoles());                            
-                            break;
-                        case METADATA:
-                            model.loadProjects();
-                            addModel.setProjects(model.getProjects());
-                            editModel.setProjects(model.getProjects());
-                            searchModel.setProjects(model.getProjects());
-                            break;
-                        case OCCURRENCE:
-                            refreshAction.actionPerformed(null);
-                            break;
-                        case PHYTOCHORION:
-                            model.loadPhytCodes();
-                            model.loadPhytNames();
-                            addModel.setPhytCodes(model.getPhytCodes());
-                            addModel.setPhytNames(model.getPhytNames());
-                            editModel.setPhytCodes(model.getPhytCodes());
-                            editModel.setPhytNames(model.getPhytNames());
-                            searchModel.setPhytCodes(model.getPhytCodes());
-                            searchModel.setPhytNames(model.getPhytNames());
-                            break;
-                        case PLANT:
-                            model.loadPlants();
-                            addModel.setPlants(model.getPlants());
-                            editModel.setPlants(model.getPlants());
-                            searchModel.setPlants(model.getPlants());
-                            break;
-                        case PUBLICATION:
-                            model.loadPublications();
-                            addModel.setPublications(model.getPublications());
-                            editModel.setPublications(model.getPublications());
-                            searchModel.setPublications(model.getPublications());
-                            break;
-                        case RIGHT: //???
-                            logger.warn("Reaction to changes in RIGHTS table is NOT IMPLEMENTED.");
-                            break;
-                        case TERRITORY:
-                            model.loadTerritories();
-                            addModel.setTerritories(model.getTerritories());
-                            editModel.setTerritories(model.getTerritories());
-                            searchModel.setTerritories(model.getTerritories());
-                            break;
-                        case USER: //???
-                            logger.warn("Reaction to changes in USERS table is NOT IMPLEMENTED.");
-                            break;
-                        case VILLAGE:
-                            model.loadVillages();
-                            addModel.setVillages(model.getVillages());
-                            editModel.setVillages(model.getVillages());
-                            searchModel.setVillages(model.getVillages());
-                            break;
-                    }//switch table
-                }//for
-                } catch (DBLayerException ex) {
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+ex.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                    logger.error(ex+": "+ex.getErrorInfo());
-                } catch (RemoteException ex) {
-                    JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+ex.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
-                    logger.error(ex);
-                }
-            }//if arg instanceof Table[]
-        }//update()        
-    }//class ManagerBridge
-    
-}
+	DetailCtrl detailCtrl;
 
+	// Bridges
+	ManagerBridge managerBridge = new ManagerBridge();
 
+	// Actions
+	AbstractAction settingsAction = new SettingsAction();
+
+	AbstractAction printAction = new PrintAction();
+
+	AbstractAction helpContentsAction = new HelpContentsAction();
+
+	AbstractAction helpAboutAction = new HelpAboutAction();
+
+	AbstractAction exportAction = new ExportAction();
+
+	AbstractAction importAction = new ImportAction();
+
+	AbstractAction tableImportAction = new TableImportAction();
+
+	AbstractAction dataAuthorsAction = new DataAuthorsAction();
+
+	AbstractAction dataPublicationsAction = new DataPublicationsAction();
+
+	AbstractAction dataMetadataAction = new DataMetadataAction();
+
+	AbstractAction dataHistoryAction = new DataHistoryAction();
+
+	AbstractAction dataWholeHistoryAction = new DataWholeHistoryAction();
+
+	AbstractAction dataUserAction = new DataUserAction();
+
+	AbstractAction historyAction = new DataHistoryAction();
+
+	AbstractAction schedaAction = new SchedaAction();
+
+	AbstractAction searchAction = new SearchAction();
+
+	AbstractAction addAction = new AddAction();
+
+	AbstractAction editAction = new EditAction();
+
+	AbstractAction deleteAction = new DeleteAction();
+
+	AbstractAction selectAllAction = new SelectAllAction();
+
+	AbstractAction selectNoneAction = new SelectNoneAction();
+
+	AbstractAction invertSelectedAction = new InvertSelectedAction();
+
+	AbstractAction nextPageAction = new NextPageAction();
+
+	AbstractAction prevPageAction = new PreviousPageAction();
+
+	AbstractAction refreshAction = new RefreshAction();
+
+	AbstractAction loginAction = new LoginAction();
+
+	/** Creates a new instance of AppCoreCtrl */
+	public AppCoreCtrl(AppCore model, AppCoreView view) {
+		logger = Logger.getLogger(this.getClass().getPackage().getName());
+		prefs = Preferences.userNodeForPackage(this.getClass());
+
+		this.model = model;
+		this.view = view;
+		view.setSettingsAction(settingsAction);
+		view.setPrintAction(printAction);
+		view.addExitListener(new ExitListener());
+		view.setHelpContentsAction(helpContentsAction);
+		view.setHelpAboutAction(helpAboutAction);
+		view.setExportAction(exportAction);
+		view.setImportAction(importAction);
+		view.setTableImportAction(tableImportAction);
+
+		view.addDataAuthorsAction(dataAuthorsAction);
+		view.addDataPublicationsAction(dataPublicationsAction);
+		view.addDataMetadataAction(dataMetadataAction);
+		view.addDataHistoryAction(dataHistoryAction);
+		view.addDataWholeHistoryAction(dataWholeHistoryAction);
+		view.addDataUserAction(dataUserAction);
+
+		view.setSearchAction(searchAction);
+		view.setAddAction(addAction);
+		view.setEditAction(editAction);
+		view.setDeleteAction(deleteAction);
+		view.setSchedaAction(schedaAction);
+		view.setHistoryRecordAction(historyAction);
+
+		view.setSelectAllAction(selectAllAction);
+		view.setSelectNoneAction(selectNoneAction);
+		view.setInvertSelectedAction(invertSelectedAction);
+		view.setNextPageAction(nextPageAction);
+		view.setPrevPageAction(prevPageAction);
+		view.setSelectedRowListener(new OverviewSelectionListener());
+		view.overview.addMouseListener(new OverviewMouseListener());
+		view.refreshButton.setAction(refreshAction);
+		view.occurrencesRefresh.setAction(refreshAction);
+
+		view.overview.addKeyListener(new OverviewKeyListener());
+
+		view.addWindowListener(new AppWindowListener());
+		view
+				.setRecordsPerPageListener(new RecordsPerPagePropertyChangeListener());
+
+		view.setLoginAction(loginAction);
+
+		constructDialogs();
+
+		// This is here in order to skip login procedure and connect to the
+		// database automatically
+		// For developement purposes only - so that we don't have to go through
+		// login each time we run Plantlore
+		// view.initOverview();
+
+		setDatabaseDependentCommandsEnabled(false);
+	}
+
+	private void constructDialogs() {
+		// --- Add ---
+		addModel = new AddEdit(model.getDatabase(), false);
+		addView = new AddEditView(view, true, addModel, false);
+		addView.setTitle(L10n.getString("AddEdit.AddDialogTitle"));
+		addCtrl = new AddEditCtrl(addModel, addView, false);
+
+		// --- Edit ---
+		editModel = new AddEdit(model.getDatabase(), true);
+		editView = new AddEditView(view, true, editModel, true);
+		editView.setTitle(L10n.getString("AddEdit.EditDialogTitle"));
+		editCtrl = new AddEditCtrl(editModel, editView, true);
+
+		// --- Search ---
+		searchModel = new Search(model.getDatabase());
+		StatusBarManager sbm = view.getSBM();
+		searchModel.setColumns(model.getTableModel().getColumns());
+		searchView = new SearchView(view, true, searchModel);
+		searchView.setTitle(L10n.getString("Search.DialogTitle"));
+		searchCtrl = new SearchCtrl(searchModel, searchView);
+		searchModel.addObserver(new SearchBridge());
+
+		// --- Detail ---
+		detailModel = new Detail(model);
+		detailView = new DetailView(detailModel, view, true);
+		detailCtrl = new DetailCtrl(detailModel, detailView);
+	}
+
+	private void setDatabaseDependentCommandsEnabled(boolean enabled) {
+		settingsAction.setEnabled(enabled);
+		printAction.setEnabled(enabled);
+		exportAction.setEnabled(enabled);
+		importAction.setEnabled(enabled);
+		tableImportAction.setEnabled(enabled);
+
+		dataAuthorsAction.setEnabled(enabled);
+		dataPublicationsAction.setEnabled(enabled);
+		dataMetadataAction.setEnabled(enabled);
+		dataHistoryAction.setEnabled(enabled);
+		dataWholeHistoryAction.setEnabled(enabled);
+		dataUserAction.setEnabled(enabled);
+
+		historyAction.setEnabled(enabled);
+		schedaAction.setEnabled(enabled);
+		searchAction.setEnabled(enabled);
+		addAction.setEnabled(enabled);
+		editAction.setEnabled(enabled);
+		deleteAction.setEnabled(enabled);
+
+		selectAllAction.setEnabled(enabled);
+		selectNoneAction.setEnabled(enabled);
+		invertSelectedAction.setEnabled(enabled);
+		nextPageAction.setEnabled(enabled);
+		prevPageAction.setEnabled(enabled);
+		view.recordsPerPage.setEnabled(enabled);
+		refreshAction.setEnabled(enabled);
+	}
+
+	/**
+	 * Handles click to menu item Settings.
+	 * 
+	 */
+	class SettingsAction extends AbstractAction {
+		public SettingsAction() {
+			putValue(NAME, L10n.getString("Settings"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("SettingsTooltip"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("Settings"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			logger.info("Settings selected");
+			// If the dialog is already constructed then use it. Otherwise
+			// construct it first.
+			if (settingsModel == null) {
+				settingsModel = new Settings();
+				settingsModel.setSelectedColumns(model.getTableModel()
+						.getColumns());
+				settingsModel.addObserver(new SettingsBridge());
+				settingsView = new SettingsView(view, true, settingsModel);
+				settingsCtrl = new SettingsCtrl(settingsModel, settingsView);
+			}
+			// settingsView.loadValues();
+			settingsView.setVisible(true);
+		}
+	}
+
+	/**
+	 * Assumes that user doesn't work with the Search dialog at time of the
+	 * update.
+	 * 
+	 */
+	class SettingsBridge implements Observer {
+		public void update(Observable o, Object arg) {
+			if (arg instanceof String) {
+				String s = (String) arg;
+				if (s.equals("COLUMNS")) {
+					logger
+							.debug("User changed columns in settings. Propagating the change to overview and config.");
+					ArrayList<Column> columns = settingsModel
+							.getSelectedColumns();
+					model.getTableSorter().setColumns(columns);
+					model.getMainConfig().setColumns(columns);
+
+					searchModel.setColumns(columns);
+					searchModel.clear();
+					searchModel.constructQuery();
+				}
+			}
+		}
+	}
+
+	class PrintAction extends AbstractAction {
+		public PrintAction() {
+			putValue(NAME, L10n.getString("Print"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("PrintTooltip"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("Print"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (printModel == null) {
+				printModel = new Print();
+				printView = new PrintView(view, true, printModel);
+				printCtrl = new PrintCtrl(printModel, printView);
+			}
+			Selection sel = model.getTableModel().getSelection();
+			if (sel.values().size() < 1) {
+				JOptionPane.showMessageDialog(view,
+						"Please check at least one record.");
+				return;
+			}
+			printModel.setSource(model.getDatabase(), sel);
+			printView.setVisible(true);
+		}
+	}
+
+	/**
+	 * Handles the exit command.
+	 * 
+	 * Maybe settings should be stored first?
+	 */
+	class ExitListener implements ActionListener {
+		public void actionPerformed(ActionEvent actionEvent) {
+			try {
+				model.savePreferences();
+			} catch (IOException ex) {
+				JOptionPane.showMessageDialog(view,
+						"Problem while saving configuration: "
+								+ ex.getMessage());
+			}
+			// Destroy the DBLayer
+			// model.getDatabase().destroy(); --- takhle se to nesmi delat, musi
+			// ji znicit factory, ktera ji vyrobila
+			System.exit(0);
+		}
+	}
+
+	class HelpContentsAction extends AbstractAction {
+		public HelpContentsAction() {
+			putValue(NAME, L10n.getString("helpContents"));
+			putValue(SHORT_DESCRIPTION, "Help contents");
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("helpContents"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			System.out.println("Help contents selected");
+		}
+	}
+
+	class HelpAboutAction extends AbstractAction {
+		public HelpAboutAction() {
+			putValue(NAME, L10n.getString("helpAbout"));
+			putValue(SHORT_DESCRIPTION, "Help about tooltip");
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("helpAbout"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			System.out.println("Help about selected");
+		}
+	}
+
+	class ImportAction extends AbstractAction {
+		public ImportAction() {
+			putValue(NAME, L10n.getString("dataImport"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("dataImportTooltip"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("dataImport"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (importModel == null) {
+				try {
+					importModel = new ImportMng(model.getDatabase());
+					importProgressView = new ImportProgressView(importModel);
+					importProgressCtrl = new ImportProgressCtrl(importModel,
+							importProgressView);
+
+					importCtrl = new ImportMngCtrl(importModel, view,
+							importProgressView);
+
+					importDecisionView = new DecisionView(importModel);
+					importDecisionCtrl = new DecisionCtrl(importModel,
+							importDecisionView);
+				} catch (ImportException e) {
+					logger.error("Import MVC cannot be created. "
+							+ e.getMessage());
+					return;
+				}
+			}
+
+			if (importModel.isImportInProgress())
+				importProgressView.setVisible(true);
+			else
+				importCtrl.setVisible(true);
+
+		}
+	}
+
+	class TableImportAction extends AbstractAction {
+		public TableImportAction() {
+			putValue(NAME, L10n.getString("Overview.TableImport"));
+			putValue(SHORT_DESCRIPTION, L10n
+					.getString("Overview.TableImportTT"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.TableImport"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (tableImportModel == null) {
+				try {
+					tableImportModel = new TableImportMng(model.getDatabase());
+					tableImportCtrl = new TableImportMngCtrl(tableImportModel,
+							view);
+				} catch (ImportException e) {
+					logger.error("Import MVC cannot be created. "
+							+ e.getMessage());
+					return;
+				}
+			}
+
+			tableImportCtrl.setVisible(true);
+		}
+	}
+
+	class ExportAction extends AbstractAction {
+		public ExportAction() {
+			putValue(NAME, L10n.getString("dataExport"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("dataExportTooltip"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("dataExport"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			// Create a new dialog if it already doesn't exist.
+			if (exportModel == null) {
+				try {
+					exportModel = new ExportMng(model.getDatabase());
+					exportProgressView = new ExportProgressView(null);
+					exportProgressCtrl = new ExportProgressCtrl(null,
+							exportProgressView);
+					exportCtrl = new ExportMngCtrlA(exportModel, view,
+							exportProgressView, exportProgressCtrl);
+				} catch (ExportException e) {
+					logger.error("Export MVC cannot be created. "
+							+ e.getMessage());
+					return;
+				}
+			}
+			// Display the progress view if an export is already running.
+			if (exportModel.isAnExportInProgress())
+				exportProgressView.setVisible(true);
+			// Display the Export dialog.
+			else {
+				try {
+					/*
+					 * ==============================================================
+					 * Right after the startup the searchModel may not be
+					 * initialized! (if Export is called prior to Search...)
+					 * 
+					 * FIXME: Solve this with Jakub.
+					 * ==============================================================
+					 */
+					SelectQuery query;
+					if (searchModel == null) {
+						System.out.println(">>>>>>>> CREATING A FAKE QUERY");
+						query = model.getDatabase().createQuery(
+								Occurrence.class); // fake the query
+					} else {
+						Object[] queryParam = searchModel
+								.constructExportQuery();
+						query = (SelectQuery) queryParam[0];
+						if ((Boolean) queryParam[1]) { // use projections
+							exportModel.useProjections(true);
+							exportModel.setRootTable((Class) queryParam[2]);
+						}
+					}
+					exportModel.setSelectQuery(query);
+					exportModel.setSelection(model.getTableModel()
+							.getSelection());
+				} catch (DBLayerException e) {
+					JOptionPane.showMessageDialog(view, "DBLayer Exception: "
+							+ e);
+					return;
+				} catch (RemoteException e) {
+					JOptionPane.showMessageDialog(view, "Remote Exception: "
+							+ e);
+					return;
+				}
+				exportCtrl.setVisible(true);
+			}
+		}
+	}
+
+	class AddAction extends AbstractAction {
+		public AddAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.Add"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/Add24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.AddTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_A,
+					ActionEvent.CTRL_MASK));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Add"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			try {
+				if (model.getDatabase().getUserRights().getAdd() != 1) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("AddEdit.InsufficientAddRights"), L10n
+							.getString("AddEdit.InsufficientRightsTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				}
+			} catch (RemoteException ex) {
+				JOptionPane.showMessageDialog(view, L10n
+						.getString("Error.RemoteException")
+						+ "\n" + ex.getMessage(), L10n
+						.getString("Error.RemoteExceptionTitle"),
+						JOptionPane.WARNING_MESSAGE);
+				logger.error(ex);
+			}
+			addModel.clear();
+			addView.setVisible(true);
+		}
+	}
+
+	class EditAction extends AbstractAction {
+		public EditAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.Edit"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/Edit24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.EditTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E,
+					ActionEvent.CTRL_MASK));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Edit"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			Object[] row = model.getSelectedRow();
+
+			try {
+				if (!model.isEditAllowed(model.getSelectedOccurrence())) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("AddEdit.InsufficientEditRights"), L10n
+							.getString("AddEdit.InsufficientRightsTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				}
+				editModel.setRecord((Integer) row[row.length - 1]);
+			} catch (DBLayerException ex) {
+				JOptionPane.showMessageDialog(view, L10n
+						.getString("Error.DBLayerException")
+						+ "\n" + ex.getErrorInfo(), L10n
+						.getString("Error.DBLayerExceptionTitle"),
+						JOptionPane.WARNING_MESSAGE);
+				logger.error(ex + ": " + ex.getErrorInfo());
+			} catch (RemoteException ex) {
+				JOptionPane.showMessageDialog(view, L10n
+						.getString("Error.RemoteException")
+						+ "\n" + ex.getMessage(), L10n
+						.getString("Error.RemoteExceptionTitle"),
+						JOptionPane.WARNING_MESSAGE);
+				logger.error(ex);
+			}
+			editView.loadComponentData();
+			editView.setVisible(true);
+		}
+	}
+
+	class DeleteAction extends AbstractAction {
+		public DeleteAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.Delete"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/Delete24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.DeleteTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(
+					KeyEvent.VK_DELETE, 0));
+
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Delete"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			Selection selection = model.getTableModel().getSelection();
+			Object[] arg = { selection.values().size() };
+
+			if (arg[0].equals(0)) {
+				JOptionPane.showMessageDialog(view, L10n
+						.getString("Message.CheckAnOccurrence"), L10n
+						.getString("Message.CheckAnOccurrenceTitle"),
+						JOptionPane.INFORMATION_MESSAGE);
+				return;
+			}
+
+			try {
+				for (Integer occId : selection.values())
+					if (!model.isEditAllowed(occId)) {
+						JOptionPane.showMessageDialog(view, L10n
+								.getString("Delete.InsufficientRights"), L10n
+								.getString("Delete.InsufficientRightsTitle"),
+								JOptionPane.INFORMATION_MESSAGE);
+						return;
+					}
+			} catch (RemoteException ex) {
+				logger.error("Remote problem: " + ex);
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "RemoteException: " + ex);
+			} catch (DBLayerException ex) {
+				logger.error("Database problem: " + ex);
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "DBLayerException: " + ex);
+			}
+
+			int choice = JOptionPane.showConfirmDialog(view, L10n
+					.getFormattedString("Message.DeleteRecords", arg), L10n
+					.getString("Message.DeleteRecordsTitle"),
+					JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
+
+			switch (choice) {
+			case JOptionPane.CANCEL_OPTION:
+				return;
+			case JOptionPane.OK_OPTION:
+				logger.info("Deleting " + arg[0] + " records.");
+
+				Task task = model.deleteSelected();
+
+				ProgressBar progressBar = new ProgressBar(task, view, true) {
+					public void exceptionHandler(Exception ex) {
+						if (ex instanceof DBLayerException) {
+							DBLayerException e = (DBLayerException) ex;
+							JOptionPane.showMessageDialog(view, L10n
+									.getString("Error.DBLayerException")
+									+ "\n" + e.getErrorInfo(), L10n
+									.getString("Error.DBLayerExceptionTitle"),
+									JOptionPane.WARNING_MESSAGE);
+							logger.error(e + ": " + e.getErrorInfo());
+							getTask().stop();
+							return;
+						}
+						if (ex instanceof RemoteException) {
+							RemoteException e = (RemoteException) ex;
+							JOptionPane.showMessageDialog(view, L10n
+									.getString("Error.RemoteException")
+									+ "\n" + e.getMessage(), L10n
+									.getString("Error.RemoteExceptionTitle"),
+									JOptionPane.WARNING_MESSAGE);
+							logger.error(e);
+							getTask().stop();
+							return;
+						}
+						JOptionPane
+								.showMessageDialog(
+										view,
+										L10n
+												.getString("Delete.Message.UnknownException")
+												+ "\n" + ex.getMessage(),
+										L10n
+												.getString("Delete.Message.UnkownExceptionTitle"),
+										JOptionPane.WARNING_MESSAGE);
+						logger.error(ex);
+					}
+
+					public void afterStopped(Object value) {
+						refreshOverview(false); // false -> do not create task,
+												// refresh the overview directly
+												// in this thread
+					}
+				};
+				progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+
+				task.start();
+				break;
+			}// switch
+		}
+	}
+
+	class SelectAllAction extends AbstractAction {
+		public SelectAllAction() {
+			putValue(NAME, L10n.getString("Overview.SelectAll"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SelectAllTT"));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.SelectAll"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (model.getResultsCount() > 0)
+				model.selectAll();
+		}
+	}
+
+	class SelectNoneAction extends AbstractAction {
+		public SelectNoneAction() {
+			putValue(NAME, L10n.getString("Overview.SelectNone"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SelectNoneTT"));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.SelectNone"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (model.getResultsCount() > 0)
+				model.selectNone();
+		}
+	}
+
+	class InvertSelectedAction extends AbstractAction {
+		public InvertSelectedAction() {
+			putValue(NAME, L10n.getString("Overview.InvertSelected"));
+			putValue(SHORT_DESCRIPTION, L10n
+					.getString("Overview.InvertSelectedTT"));
+			// putValue(MNEMONIC_KEY,
+			// L10n.getMnemonic("Overview.InvertSelected"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			if (model.getResultsCount() > 0)
+				model.invertSelected();
+		}
+	}
+
+	class SearchAction extends AbstractAction {
+		public SearchAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.Search"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/Search24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SearchTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S,
+					ActionEvent.CTRL_MASK));
+
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Search"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			searchModel.clear();
+			searchView.setVisible(true);
+		}
+	}
+
+	class SearchBridge implements Observer {
+		public void update(Observable o, Object arg) {
+			if (arg != null && arg instanceof Integer) {
+				logger
+						.debug("Fetching new result id from Search model. Storing it to AppCore model.");
+				try {
+					model.setResultId(searchModel.getNewResultId(), searchModel
+							.getNewSelectQuery());
+				} catch (RemoteException ex) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.RemoteException")
+							+ "\n" + ex.getMessage(), L10n
+							.getString("Error.RemoteExceptionTitle"),
+							JOptionPane.WARNING_MESSAGE);
+					logger.error(ex);
+				} catch (DBLayerException ex) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.DBLayerException")
+							+ "\n" + ex.getErrorInfo(), L10n
+							.getString("Error.DBLayerExceptionTitle"),
+							JOptionPane.WARNING_MESSAGE);
+					logger.error(ex + ": " + ex.getErrorInfo());
+				}
+				// model.setExportQuery(searchModel.getExportQuery(), false,
+				// Occurrence.class);
+			}
+		}
+
+	}
+
+	class SchedaAction extends AbstractAction {
+		public SchedaAction() {
+			putValue(NAME, L10n.getString("Overview.Scheda"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.SchedaTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_X,
+					ActionEvent.CTRL_MASK));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Scheda"));
+			putValue(
+					SMALL_ICON,
+					Resource
+							.createIcon("/toolbarButtonGraphics/general/ComposeMail24.gif"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			try {
+				if (model.getTableModel().getSelection().values().size() < 1) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Message.CheckAnOccurrence"), L10n
+							.getString("Message.CheckAnOccurrenceTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				}
+
+				final JasperReport schedaReport;
+				InputStream schedaIs = this
+						.getClass()
+						.getClassLoader()
+						.getResourceAsStream(
+								"net/sf/plantlore/client/resources/SchedaA6.jasper");
+
+				try {
+					ObjectInputStream schedaOis = new ObjectInputStream(
+							schedaIs);
+					schedaReport = (JasperReport) schedaOis.readObject();
+				} catch (FileNotFoundException ex) {
+					logger.error("Problem loading jasper report resource: "
+							+ ex);
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.InternalProblem")
+							+ "\n" + ex.getMessage(), L10n
+							.getString("Error.InternalProblemTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				} catch (IOException ex) {
+					logger.error("Problem loading jasper report resource: "
+							+ ex);
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.InternalProblem")
+							+ ex.getMessage(), L10n
+							.getString("Error.InternalProblemTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				} catch (ClassNotFoundException ex) {
+					logger.error("Problem loading jasper report resource: "
+							+ ex);
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.InternalProblem")
+							+ ex.getMessage(), L10n
+							.getString("Error.InternalProblemTitle"),
+							JOptionPane.INFORMATION_MESSAGE);
+					return;
+				}
+
+				prefs = Preferences.userNodeForPackage(AppCoreCtrl.class);
+				String h1 = prefs.get("HEADER_ONE",
+						"Set the first header in settings, please.");
+				String h2 = prefs.get("HEADER_TWO",
+						"Set the second header in settings, please.");
+				final HashMap params = new HashMap();
+				params.put("HEADER_ONE", h1);
+				params.put("HEADER_TWO", h2);
+
+				Task task = new Task() {
+					JasperPrint jasperPrint;
+
+					public Object task() throws JRException {
+						jasperPrint = JasperFillManager.fillReport(
+								schedaReport, params,
+								new JasperDataSource(model.getDatabase(), model
+										.getTableModel().getSelection()));
+						fireStopped(jasperPrint);
+						return jasperPrint;
+					}
+				};
+
+				ProgressBar pb = new ProgressBar(task, view, true) {
+					public void exceptionHandler(final Exception ex) {
+						logger
+								.error("Error while filling jasper report in SchedaAction: "
+										+ ex);
+						ex.printStackTrace();
+						SwingUtilities.invokeLater(new Runnable() {
+							public void run() {
+								JOptionPane
+										.showMessageDialog(
+												view.getParent(),
+												L10n
+														.getString("Print.Message.BrokenReport")
+														+ "\n"
+														+ ex.getMessage(),
+												L10n
+														.getString("Print.Message.BrokenReport"),
+												JOptionPane.WARNING_MESSAGE);
+							}
+						});
+						getTask().stop();
+					}
+
+					public void afterStopped(final Object value) {
+						SwingUtilities.invokeLater(new Runnable() {
+							public void run() {
+								new SchedaView(view, true, (JasperPrint) value)
+										.setVisible(true);
+							}
+						});
+					}
+				};
+				pb.setTitle(L10n.getString("Scheda.ProgressTitle"));
+
+				task.start();
+			} catch (Exception ex) { // Unreachable CATCH block
+				logger.error("Broken report: " + ex);
+				JOptionPane.showMessageDialog(view, L10n
+						.getString("Print.Message.BrokenReport")
+						+ "\n" + ex.getMessage(), L10n
+						.getString("Print.Message.BrokenReport"),
+						JOptionPane.WARNING_MESSAGE);
+				ex.printStackTrace();
+			}
+		}
+	}
+
+	class PreviousPageAction extends AbstractAction {
+		public PreviousPageAction() {
+			putValue(NAME, L10n.getString("Overview.PrevPage"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.PrevPageTT"));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.PrevPage"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			try {
+				model.prevPage();
+			} catch (RemoteException ex) {
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "RemoteException: " + ex);
+			} catch (DBLayerException ex) {
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "DBLayerException: " + ex);
+			}
+		}
+	}
+
+	class NextPageAction extends AbstractAction {
+		public NextPageAction() {
+			putValue(NAME, L10n.getString("Overview.NextPage"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.NextPageTT"));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.NextPage"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			try {
+				model.nextPage();
+			} catch (RemoteException ex) {
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "RemoteException: " + ex);
+			} catch (DBLayerException ex) {
+				ex.printStackTrace();
+				JOptionPane.showMessageDialog(view, "DBLayerException: " + ex);
+			}
+		}
+	}
+
+	class AppWindowListener extends WindowAdapter {
+		public void windowClosing(WindowEvent e) {
+			try {
+				model.savePreferences();
+			} catch (IOException ex) {
+				JOptionPane.showMessageDialog(view,
+						"Problem while saving configuration: "
+								+ ex.getMessage());
+			}
+		}
+	}
+
+	class DataAuthorsAction extends AbstractAction {
+		public DataAuthorsAction() {
+			putValue(NAME, L10n.getString("Overview.MenuDataAuthors"));
+			putValue(SHORT_DESCRIPTION, L10n
+					.getString("Overview.MenuDataAuthorsTT"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuDataAuthors"));
+		}
+
+		public void actionPerformed(ActionEvent e) {
+			AuthorManager authModel = new AuthorManager(model.getDatabase());
+			AuthorManagerView authView = new AuthorManagerView(authModel, view,
+					true);
+			AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel,
+					authView);
+			authView.setVisible(true);
+		}
+
+	}
+
+	class DataPublicationsAction extends AbstractAction {
+		public DataPublicationsAction() {
+			putValue(NAME, L10n.getString("Overview.MenuDataPublications"));
+			putValue(SHORT_DESCRIPTION, L10n
+					.getString("Overview.MenuDataPublicationsTT"));
+			putValue(MNEMONIC_KEY, L10n
+					.getMnemonic("Overview.MenuDataPublications"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			publicationManagerModel = new PublicationManager(model
+					.getDatabase());
+			publicationManagerView = new PublicationManagerView(
+					publicationManagerModel, view, true);
+			publicationManagerCtrl = new PublicationManagerCtrl(
+					publicationManagerModel, publicationManagerView);
+			publicationManagerView.setVisible(true);
+		}
+	}
+
+	class DataUserAction extends AbstractAction {
+		public DataUserAction() {
+			putValue(NAME, L10n.getString("userManager"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			System.out.println("UserManager");
+
+			userManagerModel = new UserManager(model.getDatabase());
+			userManagerView = new UserManagerView(userManagerModel, view, true);
+			userManagerCtrl = new UserManagerCtrl(userManagerModel,
+					userManagerView);
+			userManagerView.setVisible(true);
+		}
+	}
+
+	class DataHistoryAction extends AbstractAction {
+		public DataHistoryAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.History"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/History24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.HistoryTT"));
+			// putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S,
+			// ActionEvent.CTRL_MASK));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.History"));
+		}
+
+		public void actionPerformed(ActionEvent e) {
+			System.out.println("Undo selected");
+			// toto volani historie nebude v menu, ale jako tlacitko pro vybrany
+			// zaznam
+			// o vybranem zaznamu predame informace, ktere chceme o nem v
+			// historii zobrazit
+			// jmeno rosliny, jmeno autora a lokaci a idOccurrences
+
+			historyModel = new History(model.getDatabase(), model
+					.getSelectedOccurrence());
+			historyView = new HistoryView(historyModel, view, true);
+			historyCtrl = new HistoryCtrl(historyModel, historyView);
+			historyModel.addObserver(managerBridge);
+			historyView.setVisible(true);
+		}
+
+	}
+
+	class DataWholeHistoryAction extends AbstractAction {
+		public DataWholeHistoryAction() {
+			putValue(NAME, L10n.getString("wholeHistory"));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			System.out.println("Whole history - Undo selected");
+
+			wholeHistoryModel = new History(model.getDatabase());
+			wholeHistoryView = new WholeHistoryView(wholeHistoryModel, view,
+					true);
+			wholeHistoryCtrl = new WholeHistoryCtrl(wholeHistoryModel,
+					wholeHistoryView);
+			wholeHistoryModel.addObserver(managerBridge);
+			wholeHistoryView.setVisible(true);
+		}
+	}
+
+	/*
+	 * 
+	 */
+	class DataMetadataAction extends AbstractAction {
+		public DataMetadataAction() {
+			putValue(NAME, L10n.getString("metadataManager"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_M,
+					ActionEvent.CTRL_MASK));
+		}
+
+		public void actionPerformed(ActionEvent actionEvent) {
+			System.out.println("Metadata Manager");
+
+			metadataManagerModel = new MetadataManager(model.getDatabase());
+			metadataManagerView = new MetadataManagerView(metadataManagerModel,
+					view, true);
+			metadataManagerCtrl = new MetadataManagerCtrl(metadataManagerModel,
+					metadataManagerView);
+			metadataManagerModel.addObserver(managerBridge);
+			metadataManagerView.setVisible(true);
+		}
+	}
+
+	class RecordsPerPagePropertyChangeListener implements
+			PropertyChangeListener {
+		public void propertyChange(PropertyChangeEvent e) {
+			JFormattedTextField tf = (JFormattedTextField) e.getSource();
+			if (e != null && e.getPropertyName().equals("value")) {
+				int i = ((Number) tf.getValue()).intValue();
+				if (i > MAX_RECORDS_PER_PAGE) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Overview.Warning.MaxRecordsPerPage")
+							+ " " + MAX_RECORDS_PER_PAGE);
+					Object obj = e.getOldValue();
+					if (obj != null)
+						tf.setValue(obj);
+					else
+						// either multiple properties changed or there was no
+						// previous value - the value should better be at least
+						// 1 anyway...
+						tf.setValue(prefs.getInt("recordsPerPage", 30));
+					return;
+				}
+
+				if (i < 1) {
+					Object obj = e.getOldValue();
+					if (obj != null)
+						tf.setValue(obj);
+					else
+						// either multiple properties changed or there was no
+						// previous value - the value should better be at least
+						// 1 anyway...
+						tf.setValue(1);
+				} else {
+					model.setRecordsPerPage(i);
+				}
+			}
+		}
+	}
+
+	class OverviewSelectionListener implements ListSelectionListener {
+		public void valueChanged(ListSelectionEvent e) {
+			// Ignore extra messages.
+			if (e.getValueIsAdjusting())
+				return;
+
+			ListSelectionModel lsm = (ListSelectionModel) e.getSource();
+			if (lsm.isSelectionEmpty()) {
+				// no rows are selected
+			} else {
+				int selectedRow = lsm.getMinSelectionIndex();
+				model.setSelectedRow(selectedRow);
+				// selectedRow is selected
+			}
+		}
+	}
+
+	class OverviewMouseListener implements MouseListener {
+		public void mouseClicked(MouseEvent e) {
+			if (e.getClickCount() == 2) {
+				JOptionPane.showMessageDialog(view, "Double click! On row #"
+						+ model.getSelectedRowNumber());
+			}
+			System.out.println("Click count = " + e.getClickCount());
+		}
+
+		public void mousePressed(MouseEvent e) {
+		}
+
+		public void mouseReleased(MouseEvent e) {
+		}
+
+		public void mouseEntered(MouseEvent e) {
+		}
+
+		public void mouseExited(MouseEvent e) {
+		}
+
+	}
+
+	class OverviewKeyListener implements KeyListener {
+		public void keyTyped(KeyEvent e) {
+			System.out.println("Typed key: char=" + e.getKeyChar() + " code="
+					+ e.getKeyCode() + " text=" + e.getKeyText(e.getKeyChar())
+					+ " modif=" + e.getKeyModifiersText(e.getModifiers()));
+			if (e.getKeyText(e.getKeyChar()).equals("Space"))
+				model.invertSelectedOnCurrentRow();
+			if (e.getKeyText(e.getKeyChar()).equals("Enter")) {
+				try {
+					int resultNumber = model.getSelectedResultNumber();
+					if (resultNumber != model.getResultsCount())
+						model.selectAndShow(resultNumber - 1);// After Enter
+																// the
+																// hyperactive
+																// JTable moves
+																// selection to
+																// next row, so
+																// we need to
+																// correct that
+					detailModel.load(model.getSelectedResultNumber());
+					detailView.setVisible(true);
+				} catch (RemoteException ex) {
+					JOptionPane.showMessageDialog(view, "RemoteException: "
+							+ ex);
+					ex.printStackTrace();
+				} catch (DBLayerException ex) {
+					JOptionPane.showMessageDialog(view, "DBLayerException: "
+							+ ex);
+					ex.printStackTrace();
+				}
+			}
+		}
+
+		public void keyPressed(KeyEvent e) {
+
+		}
+
+		public void keyReleased(KeyEvent e) {
+		}
+
+	}
+
+	class LoginAction extends AbstractAction {
+		public LoginAction() {
+			putValue(NAME, L10n.getString("Overview.MenuFileLogin"));
+			putValue(SHORT_DESCRIPTION, L10n
+					.getString("Overview.MenuFileLoginTT"));
+			putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuFileLogin"));
+		}
+
+		public void actionPerformed(ActionEvent arg0) {
+			// Reuse the existing dialogs, hide'em when they're no longer
+			// needed.
+			if (loginModel == null) {
+				loginModel = new Login(new RMIDBLayerFactory(), model
+						.getMainConfig());
+				loginModel.addObserver(new DatabaseChange());
+				loginView = new LoginView(view, loginModel);
+				loginCtrl = new LoginCtrl(loginModel, loginView);
+			}
+			loginCtrl.setVisible(true);
+		}
+	}
+
+	// Update all information about the database layer and inform everyone who
+	// has to be informed
+	class DatabaseChange implements Observer {
+		/**
+		 * Fetches combobox items from AppCore and stores them to dialog models.
+		 * 
+		 */
+		private void fillDialogModels() {
+			logger.debug("Filling Add model.");
+			addModel.setAuthors(model.getAuthors());
+			addModel.setAuthorRoles(model.getAuthorRoles());
+			addModel.setPlants(model.getPlants());
+			addModel.setVillages(model.getVillages());
+			addModel.setPhytNames(model.getPhytNames());
+			addModel.setPhytCodes(model.getPhytCodes());
+			addModel.setCountries(model.getCountries());
+			addModel.setSources(model.getSources());
+			addModel.setPublications(model.getPublications());
+			addModel.setProjects(model.getProjects());
+			addModel.setTerritories(model.getTerritories());
+
+			logger.debug("Filling Edit model.");
+			editModel.setAuthors(model.getAuthors());
+			editModel.setAuthorRoles(model.getAuthorRoles());
+			editModel.setPlants(model.getPlants());
+			editModel.setVillages(model.getVillages());
+			editModel.setPhytNames(model.getPhytNames());
+			editModel.setPhytCodes(model.getPhytCodes());
+			editModel.setCountries(model.getCountries());
+			editModel.setSources(model.getSources());
+			editModel.setPublications(model.getPublications());
+			editModel.setProjects(model.getProjects());
+			editModel.setTerritories(model.getTerritories());
+
+			logger.debug("Filling Search model.");
+			searchModel.setAuthors(model.getAuthors());
+			searchModel.setAuthorRoles(model.getAuthorRoles());
+			searchModel.setPlants(model.getPlants());
+			searchModel.setVillages(model.getVillages());
+			searchModel.setPhytNames(model.getPhytNames());
+			searchModel.setPhytCodes(model.getPhytCodes());
+			searchModel.setCountries(model.getCountries());
+			searchModel.setSources(model.getSources());
+			searchModel.setPublications(model.getPublications());
+			searchModel.setProjects(model.getProjects());
+			searchModel.setTerritories(model.getTerritories());
+		}
+
+		public void update(Observable targer, Object parameter) {
+			if (parameter != null && parameter instanceof DBLayer) {
+				loginAction.setEnabled(false);
+				view.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
+
+				System.out.println("[!] DBLayer retrieval.");
+				DBLayer dblayer = loginModel.getDBLayer();
+
+				// FIXME: neni potreba zresetovat stav treba loginModelu, pokdu
+				// neco takhle selze? pripadne stav jinyho objektu?
+				try {
+					model.setDatabase(dblayer);
+				} catch (RemoteException ex) {
+					JOptionPane.showMessageDialog(view, "Remote problem",
+							"Some remote problem occurred:\n" + ex,
+							JOptionPane.WARNING_MESSAGE);
+					return;
+				} catch (DBLayerException ex) {
+					JOptionPane.showMessageDialog(view, "Database problem",
+							"Some database problem occurred:\n" + ex,
+							JOptionPane.WARNING_MESSAGE);
+					return;
+				}
+				// distribute database to dialogs
+				addModel.setDatabase(dblayer);
+				editModel.setDatabase(dblayer);
+				searchModel.setDatabase(dblayer);
+				detailModel.setDatabase(dblayer);
+
+				model.setAccessRights(loginModel.getAccessRights());
+				model.login();
+
+				view.getSBM().display(L10n.getString("Message.FillingDialogs"));
+				fillDialogModels();
+
+				view.getSBM().display(
+						L10n.getString("Message.LoadingOverviewData"));
+				searchModel.clear();
+				searchModel.constructQuery();
+				view.getSBM().displayDefaultText();
+
+				view.initOverview();
+				view.setCursor(Cursor.getDefaultCursor());
+				setDatabaseDependentCommandsEnabled(true);
+			}
+		}
+	}
+
+	private Task refreshOverview(boolean createTask) {
+		if (createTask) {
+			Task task = new Task() {
+				public Object task() {
+					searchModel.clear();
+					searchModel.constructQuery();
+					fireStopped(null);
+					return null;
+				}
+			};
+
+			return task;
+		} else {
+			searchModel.clear();
+			searchModel.constructQuery();
+			return null;
+		}
+	}
+
+	class RefreshAction extends AbstractAction {
+		public RefreshAction() {
+			if (showButtonText)
+				putValue(NAME, L10n.getString("Overview.Refresh"));
+			putValue(SMALL_ICON, Resource
+					.createIcon("/toolbarButtonGraphics/general/Refresh24.gif"));
+			putValue(SHORT_DESCRIPTION, L10n.getString("Overview.RefreshTT"));
+			putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_R,
+					ActionEvent.CTRL_MASK));
+			// putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.Refresh"));
+		}
+
+		public void actionPerformed(ActionEvent e) {
+			// e can be null !!! - we call actionPerformed(null) in DeleteAction
+			Task task = refreshOverview(true);
+			ProgressBar progressBar = new ProgressBar(task, view, true) {
+				public void exceptionHandler(Exception ex) {
+					// FIXME
+					ex.printStackTrace();
+					getTask().stop();
+				}
+			};
+			progressBar.setTitle(L10n
+					.getString("Overview.Refresh.ProgressTitle"));
+
+			task.start();
+		}
+
+	}
+
+	/**
+	 * Propagates changes made in managers to the rest of the application.
+	 * 
+	 */
+	class ManagerBridge implements Observer {
+		public void update(Observable o, Object arg) {
+			if (arg instanceof PlantloreConstants.Table[]) {
+				PlantloreConstants.Table[] tables = (PlantloreConstants.Table[]) arg;
+				try {
+					for (PlantloreConstants.Table table : tables) {
+						logger.debug("ManagerBridge received message that "
+								+ table + " has been updated.");
+						switch (table) {
+						case AUTHOR:
+							model.loadAuthors();
+							addModel.setAuthors(model.getAuthors());
+							editModel.setAuthors(model.getAuthors());
+							searchModel.setAuthors(model.getAuthors());
+							break;
+						case AUTHOROCCURRENCE:
+							model.loadAuthorRoles();
+							addModel.setAuthorRoles(model.getAuthorRoles());
+							editModel.setAuthorRoles(model.getAuthorRoles());
+							searchModel.setAuthorRoles(model.getAuthorRoles());
+							break;
+						case METADATA:
+							model.loadProjects();
+							addModel.setProjects(model.getProjects());
+							editModel.setProjects(model.getProjects());
+							searchModel.setProjects(model.getProjects());
+							break;
+						case OCCURRENCE:
+							refreshAction.actionPerformed(null);
+							break;
+						case PHYTOCHORION:
+							model.loadPhytCodes();
+							model.loadPhytNames();
+							addModel.setPhytCodes(model.getPhytCodes());
+							addModel.setPhytNames(model.getPhytNames());
+							editModel.setPhytCodes(model.getPhytCodes());
+							editModel.setPhytNames(model.getPhytNames());
+							searchModel.setPhytCodes(model.getPhytCodes());
+							searchModel.setPhytNames(model.getPhytNames());
+							break;
+						case PLANT:
+							model.loadPlants();
+							addModel.setPlants(model.getPlants());
+							editModel.setPlants(model.getPlants());
+							searchModel.setPlants(model.getPlants());
+							break;
+						case PUBLICATION:
+							model.loadPublications();
+							addModel.setPublications(model.getPublications());
+							editModel.setPublications(model.getPublications());
+							searchModel
+									.setPublications(model.getPublications());
+							break;
+						case RIGHT: // ???
+							logger
+									.warn("Reaction to changes in RIGHTS table is NOT IMPLEMENTED.");
+							break;
+						case TERRITORY:
+							model.loadTerritories();
+							addModel.setTerritories(model.getTerritories());
+							editModel.setTerritories(model.getTerritories());
+							searchModel.setTerritories(model.getTerritories());
+							break;
+						case USER: // ???
+							logger
+									.warn("Reaction to changes in USERS table is NOT IMPLEMENTED.");
+							break;
+						case VILLAGE:
+							model.loadVillages();
+							addModel.setVillages(model.getVillages());
+							editModel.setVillages(model.getVillages());
+							searchModel.setVillages(model.getVillages());
+							break;
+						}// switch table
+					}// for
+				} catch (DBLayerException ex) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.DBLayerException")
+							+ "\n" + ex.getErrorInfo(), L10n
+							.getString("Error.DBLayerExceptionTitle"),
+							JOptionPane.WARNING_MESSAGE);
+					logger.error(ex + ": " + ex.getErrorInfo());
+				} catch (RemoteException ex) {
+					JOptionPane.showMessageDialog(view, L10n
+							.getString("Error.RemoteException")
+							+ "\n" + ex.getMessage(), L10n
+							.getString("Error.RemoteExceptionTitle"),
+							JOptionPane.WARNING_MESSAGE);
+					logger.error(ex);
+				}
+			}// if arg instanceof Table[]
+		}// update()
+	}// class ManagerBridge
+
+}

Modified: trunk/src/net/sf/plantlore/client/AppCoreView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-05 19:46:25 UTC (rev 452)
+++ trunk/src/net/sf/plantlore/client/AppCoreView.java	2006-06-05 19:57:02 UTC (rev 453)
@@ -595,6 +595,13 @@
     public void setImportAction(AbstractAction a) {
         dataImport.setAction(a);
     }
+    
+    /** Sets an action to the Data->TableImport menu item and to the Import toolbar button.
+    *
+    */
+   public void setTableImportAction(AbstractAction a) {
+       dataImportTable.setAction(a);
+   }
 
     /** Sets an action to the Data->export menu item and to the Export toolbar button.
      *



From kovo at berlios.de  Mon Jun  5 22:10:48 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Mon, 5 Jun 2006 22:10:48 +0200
Subject: [Plantlore-dev] r454 - in trunk/src/net/sf/plantlore: middleware server
Message-ID: <200606052010.k55KAmJ8011570@sheep.berlios.de>

Author: kovo
Date: 2006-06-05 22:10:47 +0200 (Mon, 05 Jun 2006)
New Revision: 454

Modified:
   trunk/src/net/sf/plantlore/middleware/DBLayer.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Add executeInsertInTransactionHistory() method to DBLayer. This method executes INSERT query using long running transaction without saving history records.

Modified: trunk/src/net/sf/plantlore/middleware/DBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-05 19:57:02 UTC (rev 453)
+++ trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-06-05 20:10:47 UTC (rev 454)
@@ -144,6 +144,17 @@
      */
     public SelectQuery createQuery(Class classname) throws DBLayerException, RemoteException;
 
+    /**
+     *  Create new subquery (SQL "subselect"). To work with this query, use methods of the SelectQuery
+     *  interface.
+     *
+     *  @param classname classname of the holder object we want to use for the select.
+     *  @param slias alias used for the holder specified in the first argument
+     *  @return new instance of subquery
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */
     public SelectQuery createSubQuery(Class classname, String alias) throws DBLayerException, RemoteException;
     
     /**
@@ -185,18 +196,103 @@
      */    
     public Right getUserRights() throws RemoteException;
 
+    /**
+     *  Begin long running transaction. in the current implementation, there can be only one long
+     *  running transaction at a time.
+     *
+     *  @return true if transaction was started, false if there already is a long running transaction
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */    
     public boolean beginTransaction() throws DBLayerException, RemoteException;
-            
+
+    /**
+     *  Commit long running transaction. In the current implementation, there can be only one long
+     *  running transaction at a time.
+     *
+     *  @return true if commit was successful, false if there is no long running transaction
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */     
     public boolean commitTransaction() throws DBLayerException, RemoteException;
             
+    /**
+     *  Rollback long running transaction. In the current implementation, there can be only one 
+     *  long running transaction is possible. All the DB changes made by *InHistory() methods will
+     *  be rolled back.
+     *
+     *  @return true if rollback was successful, false if the long transaction is not in progress
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case server connection failed
+     */
     public boolean rollbackTransaction() throws DBLayerException, RemoteException;    
-
+    
+    /**
+     *  Execute DB insert using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges, saves history and updates
+     *  the holder with the author (CCREATEDWHO) and time of creation (CREATEDWHEN).
+     *
+     *  @param data holder object with the record we want to insert
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the insert
+     *  @throws RemoteException in case server connection failed
+     */    
     public int executeInsertInTransaction(Object data) throws DBLayerException, RemoteException;
             
+    /**
+     *  Execute DB insert using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges, DOES NOT save history and 
+     *  updates the holder with the author (CCREATEDWHO) and time of creation (CREATEDWHEN).
+     *
+     *  @param data holder object with the record we want to insert
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the insert
+     *  @throws RemoteException in case server connection failed
+     */    
+    public int executeInsertInTransactionHistory(Object data) throws DBLayerException, RemoteException;
+    
+    /**
+     *  Execute DB update using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and saves history
+     *
+     *  @param data holder object with the record we want to update
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the update
+     *  @throws RemoteException in case network connection failed
+     */
     public void executeUpdateInTransaction(Object data) throws DBLayerException, RemoteException;
     
+    /**
+     *  Execute DB delete using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges and saves history
+     *
+     *  @param data holder object with the record we want to delete
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the delete
+     *  @throws RemoteException in case network connection failed
+     */
     public void executeDeleteInTransaction(Object data) throws DBLayerException, RemoteException;
                         
+    /**
+     * This method is intended for final cleanup. <b>Do not call this method
+     * yourself! The proper way for you to get rid of a DBLayer is to call
+     * DBLayer.destroy() method!</b> <br/> Terminate all processes running in
+     * this DBLayer, disconnect from the database and destroy all objects
+     * created by this DBLayer. <br/> <b>After this the DBLayer will not be
+     * capable of carrying out its duties.</b> <br/> This method is supposed to
+     * be used by the DBLayerFactory exclusively.
+     */
     public void shutdown() throws RemoteException;
     
     public void destroy() throws RemoteException;

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-05 19:57:02 UTC (rev 453)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-05 20:10:47 UTC (rev 454)
@@ -962,7 +962,7 @@
      *
      *  @param data holder object with the record we want to insert
      *  @throws DBLayerException in case we are not connected to the database or an error occurred
-     *                           while executing the update
+     *                           while executing the insert
      *  @throws RemoteException in case server connection failed
      */    
     public int executeInsertInTransaction(Object data) throws DBLayerException, RemoteException {
@@ -1022,6 +1022,74 @@
         // Return new record identifier
         return recordId;        
     }
+
+    /**
+     *  Execute DB insert using a long running transaction. For this method to work, it is neccessary
+     *  to begin long running transaction using beginTransaction() method of this class.
+     *
+     *  This method checks whether the user has appropriate priviliges, DOES NOT save history and 
+     *  updates the holder with the author (CCREATEDWHO) and time of creation (CREATEDWHEN).
+     *
+     *  @param data holder object with the record we want to insert
+     *  @throws DBLayerException in case we are not connected to the database or an error occurred
+     *                           while executing the insert
+     *  @throws RemoteException in case server connection failed
+     */    
+    public int executeInsertInTransactionHistory(Object data) throws DBLayerException, RemoteException {
+        int recordId;
+        
+        // Check whether we are connected to the database
+        if (sessionFactory == null) {
+            logger.warn("SessionFactory not avilable. Not connected to the database.");
+            DBLayerException ex = new DBLayerException("SessionFactory not available. Not connected to the database.");
+            ex.setError(ex.ERROR_CONNECT, null);
+            throw ex;
+        }
+        if (data instanceof Occurrence) {
+            Occurrence occ = (Occurrence)data;
+            occ.setCreatedWhen(new java.util.Date());
+            occ.setUpdatedWhen(new java.util.Date());
+            occ.setCreatedWho(this.plantloreUser);
+            occ.setUpdatedWho(this.plantloreUser);
+            data = occ;
+        }
+        if (data instanceof Publication) {
+            Publication pub = (Publication)data;
+            pub.setCreatedWho(this.plantloreUser);
+            data = pub;
+        }
+        if (data instanceof Author) {
+            Author aut = (Author)data;
+            aut.setCreatedWho(this.plantloreUser);
+            data = aut;
+        }        
+        // Check whether we have rights for this operation
+        checkRights(data, INSERT);
+        
+        if (data instanceof Occurrence) {
+            Occurrence occ = (Occurrence)data;
+            occ.setCreatedWhen(new java.util.Date());
+            occ.setUpdatedWhen(new java.util.Date());
+            occ.setCreatedWho(this.plantloreUser);
+            occ.setUpdatedWho(this.plantloreUser);
+            data = occ;
+        }
+        if (data instanceof Publication) {
+            Publication pub = (Publication)data;
+            pub.setCreatedWho(this.plantloreUser);
+            data = pub;
+        }
+        if (data instanceof Author) {
+            Author aut = (Author)data;
+            aut.setCreatedWho(this.plantloreUser);
+            data = aut;
+        }
+
+        // Save item into the database
+        recordId = (Integer)this.txSession.save(data);            
+        // Return new record identifier
+        return recordId;        
+    }    
     
     /**
      *  Execute DB update using a long running transaction. For this method to work, it is neccessary
@@ -1099,7 +1167,6 @@
         if (data instanceof Author) {
             if ((type == DELETE) || (type == UPDATE)) {
                 // Only data of the user and those listed in CEDITGROUP
-                System.out.println("UPDATE or DELETE of AUTHOR");
                 sess = this.sessionFactory.openSession();
                 ScrollableResults sc = sess.createCriteria(Author.class)
                     .add(Restrictions.eq(Author.ID, ((Author)data).getId()))
@@ -1120,7 +1187,6 @@
                 // Check for administrator rights
                 if (this.plantloreUser.getRight().getAdministrator() == 1) {
                     equal = true;
-                    System.out.println("USER IS ADMIN");                    
                 }                
                 // Check for direct ownership first. We have to compare IDs since equals doesn't work
                 // for User object
@@ -1914,17 +1980,17 @@
     
     
     /**
-	 * This method is intended for final cleanup. <b>Do not call this method
-	 * yourself! The proper way for you to get rid of a DBLayer is to call
-	 * DBLayer.destroy() method!</b> <br/> Terminate all processes running in
-	 * this DBLayer, disconnect from the database and destroy all objects
-	 * created by this DBLayer. <br/> <b>After this the DBLayer will not be
-	 * capable of carrying out its duties.</b> <br/> This method is supposed to
-	 * be used by the DBLayerFactory exclusively.
-	 * 
-	 * FIXME Think of a better mechanism that will hide it from users yet keep
-	 * it accessible to the DBLF.
-	 */
+     * This method is intended for final cleanup. <b>Do not call this method
+     * yourself! The proper way for you to get rid of a DBLayer is to call
+     * DBLayer.destroy() method!</b> <br/> Terminate all processes running in
+     * this DBLayer, disconnect from the database and destroy all objects
+     * created by this DBLayer. <br/> <b>After this the DBLayer will not be
+     * capable of carrying out its duties.</b> <br/> This method is supposed to
+     * be used by the DBLayerFactory exclusively.
+     *
+     * FIXME Think of a better mechanism that will hide it from users yet keep
+     * it accessible to the DBLF.
+     */
     public void shutdown() /* throws RemoteException */ {
     	
     	if(undertaker != null) 



From krater at berlios.de  Mon Jun  5 22:56:31 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 22:56:31 +0200
Subject: [Plantlore-dev] r455 - trunk/src/net/sf/plantlore/l10n
Message-ID: <200606052056.k55KuVII031284@sheep.berlios.de>

Author: krater
Date: 2006-06-05 22:56:31 +0200 (Mon, 05 Jun 2006)
New Revision: 455

Modified:
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
Login, Import, Export, Server: Properties added (czech language).

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-05 20:10:47 UTC (rev 454)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-05 20:56:31 UTC (rev 455)
@@ -463,7 +463,7 @@
 Import.RecordsUpdated = updated.
 Import.RecordsRejected = rejected.
 Import.RecordsProcessed = processed.
-Import.Abort = Abort
+Import.Abort=Abort
 Import.Hide = Hide
 Import.Skip = Skip
 Import.Update = Update

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-05 20:10:47 UTC (rev 454)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-05 20:56:31 UTC (rev 455)
@@ -290,8 +290,8 @@
 warningEmptySelection = Nen\ufffd vybr\u75a3 ?\u7586n\ufffd z\u75d9nam.\n Zvolte nejprve n?jak\ufffd z\u75d9nam a zkuste to znovu. 
 warningEmptySelectionTitle = Nic nen\ufffd vybr\u75a3o
 
-warningNoUsername = Nen\ufffd zad\u75a3o ?\u7586n\ufffd u?ivatelsk\ufffd m\u99edo.\n Vyberte nejprve n?jak\ufffd jm\u99edo ze seznamu nebo zadejte nov\ufffd a zkuste to znovu. 
-warningNoUsernameTitle = Nen\ufffd vybr\u75a3o u?. jm\u99edo
+warningNoUsername = Nen\u00ED vybr\u00E1no \u017E\u00E1dn\u00E9 jm\u00E9no ze seznamu.
+warningNoUsernameTitle = Nen\u00ED vybr\u00E1no u\u017E. jm\u00E9no.
 
 # LIST OF ERRORS AND EXCEPTIONS
 errorDBLayerException = P?ipojen\ufffd k datab\u75d9i se nezda?ilo nebo selhalo.\n Ujist?te se, ?e jste zadali spr\u75b1n\ufffd p?ihla?ovac\ufffd \u68c8aje (spr\u75b1n\ufffd u?iv. jm\u99edo i heslo)\n a zkuste to znovu. 
@@ -520,13 +520,13 @@
 
 Continue=
 
-Common.Cancel=&Zru\u0161
+Common.Cancel=&Storno
 
 Close=
 
 Settings.Czech=\u010cesk\u00fd
 
-Settings.English=Anlgick\u00fd
+Settings.English=Anglick\u00FD
 
 Settings.Default=V\u00fdchoz\u00ed
 
@@ -550,7 +550,7 @@
 
 Settings.HeaderTwo=Druh\u00fd nadpis\: 
 
-Common.Help=&Pomoc
+Common.Help=N\u00E1&pov\u011Bda
 
 Settings.LanguagesTab=Jazyky
 
@@ -841,3 +841,553 @@
 Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
 
 Delete.InsufficientRightsTitle=Insufficient rights
+
+Languages=Jazyky
+
+Login.SelectDB=Volba datab\u00E1ze
+
+Login.AddRecord=P\u0159idat
+
+Login.AddRecordTT=P\u0159id\u00E1v\u00E1n\u00ED nov\u00FDch z\u00E1znam\u016F.
+
+Login.EditRecord=Editovat
+
+Login.EditRecordTT=Editace vybran\u00E9ho z\u00E1znamu.
+
+Login.RemoveRecord=Odstranit
+
+Login.RemoveRecordTT=Vymaz\u00E1n\u00ED ozna\u010Den\u00E9ho z\u00E1znamu.
+
+Login.Alias=Alias
+
+Login.AliasTT=\u0158et\u011Bzec pro snadn\u00E9 zapamatov\u00E1n\u00ED datab\u00E1ze.
+
+Login.HostName=Host
+
+Login.HostNameTT=Jm\u00E9no po\u010D\u00EDta\u010De, na kter\u00E9m b\u011B\u017E\u00ED server, k n\u011Bmu\u017E se chcete p\u0159ipojit.
+
+Login.Database=Datab\u00E1ze
+
+Login.DatabaseIdentifier=Identifik\u00E1tor DB
+
+Login.DatabaseIdentifierTT=Jm\u00E9no datab\u00E1ze na DB serveru.
+
+Login.DatabasePort=Port DB
+
+Login.DatabasePortTT=Port, na kter\u00E9m je datab\u00E1ze p\u0159ipojena.
+
+Login.Port=Port
+
+Login.PortTT=Port, na kter\u00E9m naslouch\u00E1 server Plantlore.
+
+Login.Parameter=Parametr
+
+Login.ParameterTT=Dodate\u010Dn\u00FD parametr pro p\u0159ipojen\u00ED k datab\u00E1zi (nap\u0159. k\u00F3dov\u00E1n\u00ED znak\u016F).
+
+Login.MasterUser=U\u017Eivatel
+
+Login.MasterUserTT=U\u017Eivatel s administr\u00E1torsk\u00FDmi pr\u00E1vy k datab\u00E1zi.
+
+Login.MasterPassword=Heslo
+
+Login.MasterPasswordTT=Heslo u\u017Eivatele s administr\u00E1torsk\u00FDmi pr\u00E1vy.
+
+Login.Next=Pokra\u010Duj
+
+Login.NextTT=Pokra\u010Dov\u00E1n\u00ED k dal\u0161\u00EDmu kroku.
+
+Login.DatabaseTT=Datab\u00E1zov\u00FD stroj, kter\u00FD skladuje data.
+
+Login.Discard=Storno
+
+Login.DiscardTT=Zru\u0161en\u00ED operace bez ulo\u017Een\u00ED.
+
+Login.AddTitle=P\u0159id\u00E1n\u00ED z\u00E1znamu
+
+Login.Add=P\u0159idat
+
+Login.AddTT=Vlo\u017E\u00ED nov\u00FD z\u00E1znam do seznamu datab\u00E1z\u00ED.
+
+Login.EditTitle=Editace z\u00E1znamu
+
+Login.Change=Zm\u011Bnit
+
+Login.ChangeTT=Ulo\u017E\u00ED proveden\u00E9 zm\u011Bny z\u00E1znamu.
+
+Login.Authentication=Autentifikace
+
+Login.UserName=U\u017E. jm\u00E9no
+
+Login.Password=Heslo
+
+Login.Authorize=P\u0159ihl\u00E1sit
+
+Login.AuthorizeTT=P\u0159ihl\u00E1\u0161en\u00ED k datab\u00E1zi se zadan\u00FDmi \u00FAdaji.
+
+Login.ConnectingTo=Prob\u00EDh\u00E1 p\u0159ipojov\u00E1n\u00ED k 
+
+Login.SelectAutomatically=Vyber automaticky
+
+Login.Connecting=Prob\u00EDh\u00E1 p\u0159ipojov\u00E1n\u00ED k serveru...
+
+Login.Connected=P\u0159ipojen\u00ED k serveru prob\u011Bhlo \u00FAsp\u011B\u0161n\u011B.
+
+Login.InitializingDBLayer=Inicializace p\u0159ipojen\u00ED k datab\u00E1zi...
+
+Login.DBLayerInitialized=P\u0159ipojen\u00ED k datab\u00E1zi prob\u011Bhlo \u00FAsp\u011B\u0161n\u011B.
+
+Login.Failed=P\u0159ipojen\u00ED se nezda\u0159ilo\!
+
+Checklist.Title=\u0160krt\u00E1k
+
+Checklist.Submit=Vlo\u017Eit
+
+Checklist.SubmitTT=Vlo\u017E\u00ED vybran\u00E9 rostlinky do dialogu.
+
+Checklist.Load=Nahr\u00E1t
+
+Checklist.LoadTT=Na\u010Dte ulo\u017Een\u00FD \u0161krt\u00E1k ze souboru.
+
+Checklist.Save=Vytvo\u0159it
+
+Checklist.SaveTT=Vytvo\u0159\u00ED nov\u00FD \u0161krt\u00E1k z ozna\u010Den\u00FDch z\u00E1znam\u016F.
+
+Checklist.Clear=Odzna\u010Dit v\u0161e
+
+Checklist.ClearTT=Odzna\u010D\u00ED v\u0161echny vybran\u00E9 z\u00E1znamy.
+
+Checklist.Restore=Obnovit
+
+Checklist.RestoreTT=Obnov\u00ED seznam v\u0161ech rostlin.
+
+Import.Title=Import
+
+Import.Failed=Import se nezda\u0159il\!
+
+Import.Initializing=Inicializace...
+
+Import.Aborted=Import stornov\u00E1n.
+
+Import.Completed=Import prob\u011Bhl \u00FAsp\u011B\u0161n\u011B.
+
+Import.RememberDecision=P\u0159\u00ED\u0161t\u011B se neptat
+
+Import.RememberDecisionTT=Zapamatuj si moje rozhodnut\u00ED a od p\u0159\u00ED\u0161t\u011B jej pou\u017Eij.
+
+Import.RecordsInserted=vlo\u017Eeno.
+
+Import.RecordsDeleted=smaz\u00E1no.
+
+Import.RecordsUpdated=aktualizov\u00E1no.
+
+Import.RecordsRejected=zam\u00EDtnuto.
+
+Import.RecordsProcessed=zpracov\u00E1no.
+
+Import.Abort=Zru\u0161it
+
+Import.Hide=Skr\u00FDt
+
+Import.Skip=P\u0159esko\u010Dit
+
+Import.Update=Aktualizovat
+
+Import.Insert=Vlo\u017Eit nov\u00FD
+
+Import.Replace=Nahradit
+
+Import.Progress=dokon\u010Deno.
+
+Import.CompletelyCorruptedRecord=Z\u00E1znam \u010D. {0} je po\u0161kozen (nelze jej rozparsovat).
+
+Import.PartialyCorruptedRecord=Z\u00E1znam \u010D. {0} (UID \= {1}\:{2}) je po\u0161kozen.
+
+Import.IncompleteRecord=Z\u00E1znam \u010D. {0} je ne\u00FApln\u00FD - n\u011Bkter\u00E9 povinn\u00E9 \u00FAdaje sch\u00E1zej\u00ED.
+
+Import.DuplicateRecord=Z\u00E1znam \u010D. {0} (UID \= {1}\:{2}) je v datab\u00E1zi n\u011Bkolikr\u00E1t\!\nNen\u00ED z\u0159ejm\u00E9, kter\u00FD z nich by se m\u011Bl aktualizovat\!
+
+Import.ProblematicRecord=Z\u00E1znam \u010D. {0} (UID \= {1}\:{2}) nelze zpracovat;
+
+Import.NoAuthorsLeft=Z\u00E1znam \u010D. {0} by nem\u011Bl \u017E\u00E1dn\u00E9 autory - aktualizaci nelze prov\u00E9st.
+
+Import.UnknownReason=D\u016Fvod nen\u00ED zn\u00E1m.
+
+Export.Title=Export
+
+Export.Initializing=Inicializace...
+
+Export.Aborted=Zru\u0161eno u\u017Eivatelem.
+
+Export.Completed=Dokon\u010Deno\!
+
+Export.Failed=Export se nezda\u0159il\!
+
+Export.Abort=Storno
+
+Export.Hide=Skr\u00FDt
+
+Export.SelectColumns=V\u00FDb\u011Br sloupe\u010Dk\u016F
+
+Export.RecordsExported=exportov\u00E1no.
+
+Export.Progress=exportov\u00E1no.
+
+Format.PlantloreNative=Nativn\u00ED form\u00E1t Plantlore (*.xml)
+
+Format.XML=XML (*.xml)
+
+Format.CSV=CSV - soubor odd\u011Blen\u00FD \u010D\u00E1rkami (*.txt, *.csv)
+
+Format.ABCD=ABCD Schema (*.xml)
+
+Format.DC=DarwinCore (*.xml)
+
+Format.StdOut=Standardn\u00ED v\u00FDstup
+
+XTree.Plantlore=Plantlore
+
+Author=Autor
+
+Author.wholeName=Jm\u00E9no a p\u0159\u00EDjmen\u00ED
+
+Author.organization=Organizace
+
+Author.role=Role
+
+Author.address=Adresa
+
+Author.phoneNumber=Telefon
+
+Author.email=Email
+
+Author.url=Web
+
+Author.note=Pozn\u00E1mka
+
+Author.deleted=Smaz\u00E1n
+
+AuthorOccurrence=Autor-N\u00E1lez
+
+AuthorOccurrence.role=Role
+
+AuthorOccurrence.note=Pozn\u00E1mka
+
+AuthorOccurrence.author=Autor
+
+AuthorOccurrence.occurrence=N\u00E1lez
+
+AuthorOccurrence.deleted=Smaz\u00E1n
+
+Habitat=Lokalita
+
+Habitat.territory=\u00DAzem\u00ED
+
+Habitat.phytochorion=Fytochorion
+
+Habitat.nearestVillage=Nejbl. v\u011Bt\u0161\u00ED s\u00EDdlo
+
+Habitat.quadrant=Kvadrant
+
+Habitat.description=Popis
+
+Habitat.country=Zem\u011B
+
+Habitat.altitude=Nadm. v\u00FD\u0161ka
+
+Habitat.latitude=Zem\u011Bpis. \u0161\u00ED\u0159ka
+
+Habitat.longitude=Zem\u011Bpis. d\u00E9lka
+
+Habitat.note=Pozn\u00E1mka
+
+Habitat.deleted=Smaz\u00E1n
+
+Metadata=Metadata
+
+Metadata.dataSetTitle=Kolekce
+
+Metadata.dataSetDetails=Detaily
+
+Metadata.sourceInstitutionId=Instituce
+
+Metadata.sourceId=Zdroj
+
+Metadata.ownerOrganizationAbbrev=Organizace
+
+Metadata.dateCreate=Zalo\u017Een
+
+Metadata.dateModified=Aktualizov\u00E1n
+
+Metadata.biotopeText=Biotop
+
+Metadata.deleted=Smaz\u00E1n
+
+Occurrence=N\u00E1lez
+
+Occurrence.unitIdDb=Unik\u00E1tn\u00ED id. datab\u00E1ze
+
+Occurrence.unitValue=Unik\u00E1tn\u00ED id. n\u00E1lezu
+
+Occurrence.habitat=Lokalita
+
+Occurrence.plant=Rostlina
+
+Occurrence.yearCollected=Rok
+
+Occurrence.monthCollected=M\u011Bs\u00EDc
+
+Occurrence.dayCollected=Den
+
+Occurrence.timeCollected=\u010Cas
+
+Occurrence.isoDateTimeBegin=Datum v ISO form\u00E1tu
+
+Occurrence.dataSource=Zdroj
+
+Occurrence.publication=Publikace
+
+Occurrence.herbarium=Herbarium
+
+Occurrence.createdWhen=Vytvo\u0159eno
+
+Occurrence.createdWho=Vytvo\u0159eno (k\u00FDm)
+
+Occurrence.updatedWhen=Naposledy zm\u011Bn\u011Bno
+
+Occurrence.updatedWho=Naposledy zm\u011Bn\u011Bno (k\u00FDm)
+
+Occurrence.metadata=Medatada
+
+Occurrence.note=Pozn\u00E1mka
+
+Occurrence.deleted=Smaz\u00E1n
+
+Phytochorion=Fytochorion
+
+Phytochorion.name=Jm\u00E9no
+
+Phytochorion.code=K\u00F3d
+
+Plant=Rostlina
+
+Plant.surveyTaxId=Identifik\u00E1tor
+
+Plant.taxon=Taxon
+
+Plant.genus=Rod
+
+Plant.species=Druh
+
+Plant.scientificNameAuthor=Pojmenov\u00E1n
+
+Plant.czechName=\u010Cesk\u00E9 jm\u00E9no
+
+Plant.synonyms=Synonyma
+
+Plant.note=Pozn\u00E1mka
+
+Publication=Publikace
+
+Publication.collectionName=Kolekce
+
+Publication.collectionYearPublication=Rok
+
+Publication.journalName=\u017Durn\u00E1l
+
+Publication.journalAuthorName=Autor
+
+Publication.referenceCitation=Reference
+
+Publication.referenceDetail=Detail
+
+Publication.url=Web
+
+Publication.createdWho=Vytvo\u0159eno (k\u00FDm)
+
+Publication.note=Pozn\u00E1mka
+
+Publication.deleted=Smaz\u00E1n
+
+Territory=\u00DAzem\u00ED
+
+Territory.name=Jm\u00E9no
+
+Village=S\u00EDdlo
+
+Village.name=Jm\u00E9no
+
+Record.Property=Atribut
+
+Record.Value=Hodnota
+
+Record.InDatabase=V datab\u00E1zi
+
+Record.FromFile=Ze souboru
+
+Warning.EmptySelection=Nen\u00ED ozna\u010Den \u017E\u00E1dn\u00FD z\u00E1znam\!
+
+Warning.EmptySelectionTitle=Pr\u00E1zdn\u00FD v\u00FDb\u011Br...
+
+Server.Login=P\u0159ihl\u00E1\u0161en\u00ED
+
+Server.Host=Host
+
+Server.Next=P\u0159ipojit
+
+Server.NextTT=P\u0159ipojen\u00ED k existuj\u00EDc\u00EDmu serveru.
+
+Server.Create=Vytvo\u0159it
+
+Server.CreateTT=Vytvo\u0159en\u00ED a spu\u0161t\u011Bn\u00ED nov\u00E9ho serveru.
+
+Server.ConnectionsTotal=Celkov\u00FD po\u010Det p\u0159ipojen\u00ED
+
+Server.ConnectionsPerIP=P\u0159ipojen\u00ED z jedn\u00E9 IP
+
+Server.Timeout=Timeout
+
+Server.Manage=Spr\u00E1va serveru
+
+Server.ServerSettings=Nastaven\u00ED serveru
+
+Server.Password=Heslo
+
+Server.PasswordTT=Heslo, kter\u00E9 bude vy\u017Eadov\u00E1no pro p\u0159\u00EDstup k nastaven\u00EDm serveru.
+
+Server.Port=Port
+
+Server.PortTT=Port, na kter\u00E9m m\u00E1 b\u00FDt server p\u0159\u00EDstun\u00FD.
+
+Server.DatabaseSettings=Nastaven\u00ED datab\u00E1ze
+
+Server.DatabaseUser=U\u017Eivatel
+
+Server.DatabaseUserTT=U\u017Eivatel datab\u00E1zov\u00E9ho stroje s administr\u00E1torsk\u00FDmi pr\u00E1vy.
+
+Server.DatabasePassword=Heslo
+
+Server.DatabasePasswordTT=Heslo u\u017Eivatele s admin. pr\u00E1vy.
+
+Server.DatabaseParameter=Parametr
+
+Server.DatabaseParameterTT=Dodate\u010Dn\u00FD parametr pro p\u0159ipojen\u00ED k datab\u00E1zi (nap\u0159. k\u00F3dov\u00E1n\u00ED znak\u016F).
+
+Server.DatabaseType=Typ datab\u00E1ze
+
+Server.DatabaseTypeTT=Datab\u00E1zov\u00FD stroj, kter\u00FD skladuje data.
+
+Server.DatabasePort=Port
+
+Server.DatabasePortTT=Port, na kter\u00E9m je p\u0159ipojena datab\u00E1ze.
+
+Server.Hide=Skr\u00FDt
+
+Server.HideTT=Opustit p\u0159ehled.
+
+Server.Refresh=Obnovit
+
+Server.RefreshTT=Obnov\u00ED seznam aktu\u00E1ln\u011B p\u0159ihl\u00E1\u0161en\u00FDch u\u017Eivatel\u016F.
+
+Server.KickUser=Vyhodit
+
+Server.KickUserTT=Odpoj\u00ED vybran\u00E9ho u\u017Eivatele od serveru.
+
+Server.Terminate=Zastavit
+
+Server.TerminateTT=Ukon\u010D\u00ED server Plantlore a odpoj\u00ED v\u0161echny jeho u\u017Eivatele.
+
+Server.ListOfUsersTT=Seznam aktu\u00E1ln\u011B p\u0159ihl\u00E1\u0161en\u00FDch u\u017Eivatel\u016F.
+
+Server.SettingsLoaded=Nastaven\u00ED na\u010Dteno.
+
+Server.SettingsNotLoaded=Nastaven\u00ED se nepovedlo na\u010D\u00EDst.
+
+Server.SettingsSaved=Nastaven\u00ED ulo\u017Eeno.
+
+Server.SettingsNotSaved=Nastaven\u00ED se nepoda\u0159ilo ulo\u017Eit.
+
+Server.Info.CreatingNewServer=Prob\u00EDh\u00E1 vytv\u00E1\u0159en\u00ED nov\u00E9ho serveru...
+
+Server.Info.StartingNewServer=Prob\u00EDh\u00E1 spou\u0161t\u011Bn\u00ED serveru...
+
+Server.Info.ServerUpAndRunning=Server spu\u0161t\u011Bn.
+
+Server.Info.ConnectingToServer=Prob\u00EDh\u00E1 p\u0159ipojov\u00E1n\u00ED k serveru...
+
+Server.Info.ClientsObtained=Seznam p\u0159ipojen\u00FDch klient\u016F obnoven.
+
+Server.Info.ClientKicked=Klient {0} byl odpojen.
+
+Server.Info.Terminated=Server byl ukon\u010Den (klienti byli odpojeni).
+
+Question.AbortExport=Export bude zru\u0161en.
+
+Question.AbortImport=Import bude zru\u0161en.
+
+Question.SharedRecord=Z\u00E1znam {0} je sd\u00EDlen. Aktualizace m\u016F\u017Ee ovlivnit v\u00EDce jin\u00FDch z\u00E1znam\u016F.
+
+Question.NewerRecord=Z\u00E1znam v datab\u00E1zi je nov\u011Bj\u0161\u00ED ne\u017E v souboru.
+
+Error.InvalidDBLayer=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00E1 DBLayer.
+
+Error.InvalidBuilder=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD Builder.
+
+Error.InvalidResultset=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD identifik\u00E1tor v\u00FDsledku.
+
+Error.InvalidSelection=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD seznam vybran\u00FDch z\u00E1znam\u016F.
+
+Error.TooManyTasks=Prob\u00EDh\u00E1 p\u0159\u00EDli\u0161 mnoho export\u016F najednou.
+
+Error.InvalidQuery=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD dotaz.
+
+Error.InvalidFilter=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD form\u00E1t souboru.
+
+Error.InvalidChecklist=Neplatn\u00FD nebo po\u0161kozen\u00FD \u0161krt\u00E1k.
+
+Error.InvalidParser=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD Parser.
+
+Error.InvalidUser=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD u\u017Eivatel.
+
+Error.InvalidRootTable=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00E1 root tabulka.
+
+Error.InvalidRecord=Vnit\u0159n\u00ED chyba aplikace\: Neplatn\u00FD z\u00E1znam.
+
+Error.Missing=Chyb\u011Bj\u00EDc\u00ED \u00FAdaje.
+
+Error.MissingFileName=Jm\u00E9no souboru nebylo specifikov\u00E1no.
+
+Error.MissingUserName=Jm\u00E9no u\u017Eivatele nebylo zad\u00E1no.
+
+Error.MissingCompulsoryFieldTitle=Chyb\u011Bj\u00EDc\u00ED povinn\u00E9 \u00FAdaje.
+
+Error.MissingCompulsoryField=je povinn\u00E1 polo\u017Eka. Pros\u00EDm vypl\u0148te ji.
+
+Error.WriterNotCreated=Nelze vytvo\u0159it v\u00FDstupn\u00ED soubor.
+
+Error.NothingSelected=Nic nen\u00ED vybr\u00E1no.
+
+Error.NoColumnsSelected=Nejsou vybr\u00E1ny \u017E\u00E1dn\u00E9 sloupe\u010Dky.
+
+Error.ExportFailed=Export se nezda\u0159il.
+
+Error.ImportFailed=Import se nezda\u0159il.
+
+Error.LoginFailed=P\u0159ihl\u00E1\u0161en\u00ED se nezda\u0159ilo.
+
+Error.TransactionRaceConditions=Nelze spustit dal\u0161\u00ED transakci - pr\u00E1v\u011B prob\u00EDh\u00E1 jin\u00E1 transakce.
+
+Error.RecordNotFound=Z\u00E1znam nenalezen.
+
+Error.FKIsNull=N\u011Bkter\u00E9 povinn\u00E9 polo\u017Eky nejsou vypln\u011Bny.
+
+Error.ReaderNotCreated=Nepoda\u0159ilo se p\u0159e\u010D\u00EDst vstupn\u00ED soubor.
+
+Error.FileFormatCorrupted=Form\u00E1t souboru je ne\u010Diteln\u00FD.
+
+Error.ThreadFailed=Vnit\u0159n\u00ED chyba aplikace\: Nelze spustit nov\u00E9 vl\u00E1kno.
+
+Error.IncorrectXMLFile=Nekorektn\u00ED XML soubor.
+
+Error.DuplicateLogin=U\u017E. jm\u00E9no ji\u017E existuje. Vyberte si pros\u00EDm jin\u00E9.
+
+Error.DuplicateLoginTitle=Neplatn\u00E1 data.

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-05 20:10:47 UTC (rev 454)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-05 20:56:31 UTC (rev 455)
@@ -909,3 +909,7 @@
 Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
 
 Delete.InsufficientRightsTitle=Insufficient rights
+
+Overview.MenuHistory=&History
+
+Login.SelectDB=Select Database



From krater at berlios.de  Mon Jun  5 22:58:47 2006
From: krater at berlios.de (krater at berlios.de)
Date: Mon, 5 Jun 2006 22:58:47 +0200
Subject: [Plantlore-dev] r456 - trunk/src/net/sf/plantlore/client/imports
Message-ID: <200606052058.k55KwleJ031612@sheep.berlios.de>

Author: krater
Date: 2006-06-05 22:58:47 +0200 (Mon, 05 Jun 2006)
New Revision: 456

Modified:
   trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
Log:
History-friendly import.

Modified: trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java
===================================================================
--- trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-05 20:56:31 UTC (rev 455)
+++ trunk/src/net/sf/plantlore/client/imports/DefaultDirector.java	2006-06-05 20:58:47 UTC (rev 456)
@@ -509,7 +509,7 @@
 									if( occInDB != null )
 										db.executeInsertInTransaction( ao );
 									else
-										/*db.executeInsertInTransactionHistory( ao )*/;
+										db.executeInsertInTransactionHistory( ao );
 									
 									numberOfUndeadAuthors++;
 								}



From admin at berlios.de  Tue Jun  6 00:20:51 2006
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 6 Jun 2006 00:20:51 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7768] Searching should be case insensitive where applicable
Message-ID: <200606052220.k55MKpc1015546@unicorn.berlios.de>

Bug #7768, was updated on 2006-Jun-06 00:20
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: RFE
Priority: 3
Submitted by: tkovarik
Assigned to : fraktalek
Summary: Searching should be case insensitive where applicable

Details: When searching occurrences, searching based on Place description, Place note and Occurrence note should be case insensitive, because user doesn't have to remember exact string.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7768&group_id=5975


From fraktalek at berlios.de  Tue Jun  6 00:26:45 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Tue, 6 Jun 2006 00:26:45 +0200
Subject: [Plantlore-dev] r457 - in trunk/src/net/sf/plantlore: client common l10n
Message-ID: <200606052226.k55MQjrU007201@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-06 00:26:44 +0200 (Tue, 06 Jun 2006)
New Revision: 457

Modified:
   trunk/src/net/sf/plantlore/client/AppCore.java
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/OverviewTableModel.java
   trunk/src/net/sf/plantlore/client/Settings.java
   trunk/src/net/sf/plantlore/client/SettingsCtrl.java
   trunk/src/net/sf/plantlore/client/SettingsView.form
   trunk/src/net/sf/plantlore/client/SettingsView.java
   trunk/src/net/sf/plantlore/client/TableSorter.java
   trunk/src/net/sf/plantlore/common/PlantloreConstants.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
Implemented dynamic records per page setting + apropriate option in Settings (very inefficient implementation unfortunately :( )
+fixed a possible future bug in overviewTableModel




Modified: trunk/src/net/sf/plantlore/client/AppCore.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/AppCore.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -58,6 +58,7 @@
     private TableSorter tableSorter;
     private Logger logger;
     private ArrayList<Column> columns;
+    private boolean loggedIn = false;
     
     private SelectQuery exportQuery = null;
     private boolean usingProjections = false;
@@ -78,6 +79,7 @@
     private Pair<String, Integer>[] publications = null;
     private Pair<String, Integer>[] projects = null;
     
+    protected boolean dynamicPageLoading;
     
     /** Creates a new instance of AppCore */
     public AppCore(MainConfig mainConfig)
@@ -85,6 +87,8 @@
         logger = Logger.getLogger(this.getClass().getPackage().getName());        
         prefs = Preferences.userNodeForPackage(this.getClass());
         
+        dynamicPageLoading  = prefs.getBoolean(PlantloreConstants.PREF_DYNAMIC_PAGE_SIZE,false);
+        
         this.mainConfig = mainConfig;
         ArrayList<Column> columns = mainConfig.getColumns();
         if (columns.size() < 1) {
@@ -205,7 +209,7 @@
             return 0;
     }
 
-    public void setRecordsPerPage(int recordsPerPage) {        
+    public void setRecordsPerPage(int recordsPerPage) throws RemoteException, DBLayerException {        
         if (tableSorter != null)
         {
             logger.info("Setting records per page to "+recordsPerPage);
@@ -642,9 +646,14 @@
     public void login() {
         assert database != null;
         
+        loggedIn = true;
         tableSorter.setDatabase(database);
     }
 
+    public boolean loggedIn() {
+        return loggedIn;
+    }
+    
     public Pair<String, Integer>[] getPlants() {
         return plants;
     }

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -13,6 +13,8 @@
 import java.awt.HeadlessException;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
+import java.awt.event.ComponentEvent;
+import java.awt.event.ComponentListener;
 import java.awt.event.FocusListener;
 import java.awt.event.KeyEvent;
 import java.awt.event.KeyListener;
@@ -330,7 +332,8 @@
 		view.occurrencesRefresh.setAction(refreshAction);
 
 		view.overview.addKeyListener(new OverviewKeyListener());
-
+                view.overviewScrollPane.addComponentListener(new OverviewResizeListener());
+                
 		view.addWindowListener(new AppWindowListener());
 		view
 				.setRecordsPerPageListener(new RecordsPerPagePropertyChangeListener());
@@ -455,6 +458,9 @@
 					searchModel.clear();
 					searchModel.constructQuery();
 				}
+                                if (s.equals("DYNAMIC_PAGE_LOADING")) {
+                                    model.dynamicPageLoading = prefs.getBoolean(PlantloreConstants.PREF_DYNAMIC_PAGE_SIZE,false);
+                                }                                
 			}
 		}
 	}
@@ -1273,8 +1279,15 @@
 						// 1 anyway...
 						tf.setValue(1);
 				} else {
-					model.setRecordsPerPage(i);
-				}
+                                    try {
+                                       model.setRecordsPerPage(i);                    
+                                    } catch (RemoteException ex) {  
+                                        JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+                                        ex.printStackTrace();
+                                    } catch (DBLayerException ex) {
+                                        JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+                                        ex.printStackTrace();
+                                    }				}
 			}
 		}
 	}
@@ -1298,12 +1311,20 @@
 
 	class OverviewMouseListener implements MouseListener {
 		public void mouseClicked(MouseEvent e) {
-			if (e.getClickCount() == 2) {
-				JOptionPane.showMessageDialog(view, "Double click! On row #"
-						+ model.getSelectedRowNumber());
-			}
-			System.out.println("Click count = " + e.getClickCount());
-		}
+                    try {
+                        int resultNumber = model.getSelectedResultNumber();
+                        if (resultNumber != model.getResultsCount())
+                            model.selectAndShow(resultNumber);
+                        detailModel.load(model.getSelectedResultNumber());
+                        detailView.setVisible(true);
+                    } catch (RemoteException ex) {  
+                        JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+                        ex.printStackTrace();
+                    } catch (DBLayerException ex) {
+                        JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+                        ex.printStackTrace();
+                    }
+                }
 
 		public void mousePressed(MouseEvent e) {
 		}
@@ -1321,9 +1342,6 @@
 
 	class OverviewKeyListener implements KeyListener {
 		public void keyTyped(KeyEvent e) {
-			System.out.println("Typed key: char=" + e.getKeyChar() + " code="
-					+ e.getKeyCode() + " text=" + e.getKeyText(e.getKeyChar())
-					+ " modif=" + e.getKeyModifiersText(e.getModifiers()));
 			if (e.getKeyText(e.getKeyChar()).equals("Space"))
 				model.invertSelectedOnCurrentRow();
 			if (e.getKeyText(e.getKeyChar()).equals("Enter")) {
@@ -1625,5 +1643,37 @@
 			}// if arg instanceof Table[]
 		}// update()
 	}// class ManagerBridge
+        
+    class OverviewResizeListener implements ComponentListener {
+        private final static int sub = 20; //height of the header row perhaps
+        
+        public void componentResized(ComponentEvent e) {
+            if (!model.loggedIn() || !model.dynamicPageLoading)
+                return;
+            Component c = e.getComponent();
+            int tableHeight = c.getSize().height - sub; //height of the row part of JTable ( --> without header)
+            int rowHeight = view.overview.getRowHeight();
+            int newRecordsCount = tableHeight / rowHeight;
+            try {
+                model.setRecordsPerPage(newRecordsCount);
+                view.recordsPerPage.setValue(newRecordsCount);
+            } catch (RemoteException ex) {  
+                JOptionPane.showMessageDialog(view,"RemoteException: "+ex);
+                ex.printStackTrace();
+            } catch (DBLayerException ex) {
+                JOptionPane.showMessageDialog(view,"DBLayerException: "+ex);
+                ex.printStackTrace();
+            }
+        }
 
+        public void componentMoved(ComponentEvent e) {
+        }
+
+        public void componentShown(ComponentEvent e) {
+        }
+
+        public void componentHidden(ComponentEvent e) {
+        }        
+    }        
+
 }

Modified: trunk/src/net/sf/plantlore/client/OverviewTableModel.java
===================================================================
--- trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/OverviewTableModel.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -225,7 +225,13 @@
         return pageSize;
     }
     
-    public void setPageSize(int pageSize) {
+    public void setPageSize(int pageSize) throws DBLayerException, RemoteException {
+        if (pageSize <= 0) {
+            data = null;
+            this.pageSize = 0;
+            fireTableDataChanged();
+            return;
+        }
         this.pageSize = pageSize;
         if (from + pageSize > resultsCount)
             from = resultsCount - pageSize;
@@ -233,14 +239,7 @@
             from = 0;
         
         currentPage = from / pageSize + 1;
-        //FIXME: 
-        try {
-            loadData();
-        } catch (RemoteException ex) {
-            ex.printStackTrace();
-        } catch (DBLayerException ex) {
-            ex.printStackTrace();
-        }
+        loadData();
         fireTableDataChanged();
     }
     
@@ -340,8 +339,9 @@
     }
     
     public Integer getResultNumber(int row) {
-        if (data != null)
-            return ((Integer)data[row][numberColumnIndex])-1; //displayed numbers are indexed from 1
+        if (data != null) 
+//            return ((Integer)data[row][numberColumnIndex])-1; //displayed numbers are indexed from 1
+            return from + row; //we do not depend on data array which is crucial because the Number column doesn't have to be between the displayed/projected columns
         else
             return -1;        
     }

Modified: trunk/src/net/sf/plantlore/client/Settings.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Settings.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/Settings.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -10,6 +10,7 @@
 import java.util.ArrayList;
 import java.util.Observable;
 import java.util.prefs.Preferences;
+import net.sf.plantlore.common.PlantloreConstants;
 import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.Logger;
 
@@ -35,6 +36,8 @@
     private String headerOne;
     private String headerTwo;
     
+    private boolean dynamicPageLoading;
+    
     /** Creates a new instance of Settings */
     public Settings()
     {
@@ -47,6 +50,8 @@
         prefs = Preferences.userNodeForPackage(AppCoreCtrl.class);
         headerOne = prefs.get("HEADER_ONE","Set header one in settings.");
         headerTwo = prefs.get("HEADER_TWO","Set header two in settings.");
+        
+        dynamicPageLoading = prefs.getBoolean(PlantloreConstants.PREF_DYNAMIC_PAGE_SIZE,false);
     }
     
     /** Returns currently set language in this model.
@@ -97,8 +102,13 @@
         if (headerTwo != null)
             prefs.put("HEADER_TWO",headerTwo);
         
+        prefs.putBoolean(PlantloreConstants.PREF_DYNAMIC_PAGE_SIZE,dynamicPageLoading);
+        
         setChanged();
         notifyObservers("COLUMNS");        
+        
+        setChanged();
+        notifyObservers("DYNAMIC_PAGE_LOADING");
     }//store()
     
     public void setSelectedColumns(ArrayList<Column> columns) {
@@ -140,6 +150,14 @@
         this.headerTwo = headerTwo;
         logger.debug("Header two set to: "+headerTwo);
     }
+
+    public boolean isDynamicPageLoading() {
+        return dynamicPageLoading;
+    }
+
+    public void setDynamicPageLoading(boolean dynamicPageLoading) {
+        this.dynamicPageLoading = dynamicPageLoading;
+    }
     
     
     

Modified: trunk/src/net/sf/plantlore/client/SettingsCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/SettingsCtrl.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/SettingsCtrl.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -55,6 +55,8 @@
         
         view.headerOneField.addFocusListener(new SchedaFieldListener());
         view.headerTwoField.addFocusListener(new SchedaFieldListener());
+        
+        view.dynamicPageCheckBox.addActionListener(new ButtonListener());
     }
     
     /** Handles clicks on languages radio buttons.
@@ -167,6 +169,11 @@
                 
                 return;
             }
+            
+            if (s.equals("DYNAMIC_PAGE_LOADING")) {
+                boolean dynamic = view.dynamicPageCheckBox.isSelected();
+                model.setDynamicPageLoading(dynamic);
+            }
         }
     }//ButtonListener
     

Modified: trunk/src/net/sf/plantlore/client/SettingsView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/SettingsView.form	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/SettingsView.form	2006-06-05 22:26:44 UTC (rev 457)
@@ -27,7 +27,7 @@
               <Component id="okButton" linkSize="1" min="-2" max="-2" attributes="0"/>
               <EmptySpace max="-2" attributes="0"/>
           </Group>
-          <Component id="jTabbedPane1" alignment="0" max="32767" attributes="0"/>
+          <Component id="jTabbedPane1" alignment="0" pref="622" max="32767" attributes="0"/>
       </Group>
     </DimensionLayout>
     <DimensionLayout dim="1">
@@ -76,7 +76,7 @@
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="145" max="32767" attributes="0"/>
+                      <EmptySpace pref="144" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -116,7 +116,7 @@
                           <Component id="czechRadioButton" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="defaultRadioButton" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="48" max="32767" attributes="0"/>
+                          <EmptySpace pref="49" max="32767" attributes="0"/>
                       </Group>
                   </Group>
                 </DimensionLayout>
@@ -416,7 +416,7 @@
                   <Group type="102" alignment="0" attributes="0">
                       <EmptySpace max="-2" attributes="0"/>
                       <Component id="jPanel6" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="160" max="32767" attributes="0"/>
+                      <EmptySpace pref="159" max="32767" attributes="0"/>
                   </Group>
               </Group>
             </DimensionLayout>
@@ -464,7 +464,7 @@
                               <Component id="headerTwoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="headerTwoField" alignment="3" min="-2" max="-2" attributes="0"/>
                           </Group>
-                          <EmptySpace pref="44" max="32767" attributes="0"/>
+                          <EmptySpace pref="45" max="32767" attributes="0"/>
                       </Group>
                   </Group>
                 </DimensionLayout>
@@ -502,6 +502,91 @@
             </Container>
           </SubComponents>
         </Container>
+        <Container class="javax.swing.JPanel" name="jPanel7">
+          <Constraints>
+            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
+              <JTabbedPaneConstraints tabName="General">
+                <Property name="tabTitle" type="java.lang.String" editor="org.netbeans.modules.i18n.form.FormI18nStringEditor">
+                  <ResourceString bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Settings.GeneralTab" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                </Property>
+              </JTabbedPaneConstraints>
+            </Constraint>
+          </Constraints>
+
+          <Layout>
+            <DimensionLayout dim="0">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jPanel8" max="32767" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+            <DimensionLayout dim="1">
+              <Group type="103" groupAlignment="0" attributes="0">
+                  <Group type="102" alignment="0" attributes="0">
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="jPanel8" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="159" max="32767" attributes="0"/>
+                  </Group>
+              </Group>
+            </DimensionLayout>
+          </Layout>
+          <SubComponents>
+            <Container class="javax.swing.JPanel" name="jPanel8">
+              <Properties>
+                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
+                    <TitledBorder title="Overview">
+                      <ResourceString PropertyName="titleX" bundle="net/sf/plantlore/l10n/Plantlore.properties" key="Settings.General.OverviewPanel" replaceFormat="L10n.getString(&quot;{key}&quot;)"/>
+                    </TitledBorder>
+                  </Border>
+                </Property>
+              </Properties>
+
+              <Layout>
+                <DimensionLayout dim="0">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Group type="102" alignment="0" attributes="0">
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="dynamicPageCheckBox" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace pref="481" max="32767" attributes="0"/>
+                      </Group>
+                  </Group>
+                </DimensionLayout>
+                <DimensionLayout dim="1">
+                  <Group type="103" groupAlignment="0" attributes="0">
+                      <Group type="102" alignment="0" attributes="0">
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="dynamicPageCheckBox" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace pref="73" max="32767" attributes="0"/>
+                      </Group>
+                  </Group>
+                </DimensionLayout>
+              </Layout>
+              <SubComponents>
+                <Component class="javax.swing.JCheckBox" name="dynamicPageCheckBox">
+                  <Properties>
+                    <Property name="text" type="java.lang.String" value="jCheckBox1"/>
+                    <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+                      <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
+                        <EmptyBorder bottom="0" left="0" right="0" top="0"/>
+                      </Border>
+                    </Property>
+                    <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                      <Insets value="[0, 0, 0, 0]"/>
+                    </Property>
+                  </Properties>
+                  <AuxValues>
+                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="dynamicPageCheckBox.setActionCommand(&quot;DYNAMIC_PAGE_LOADING&quot;);"/>
+                    <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+                  </AuxValues>
+                </Component>
+              </SubComponents>
+            </Container>
+          </SubComponents>
+        </Container>
       </SubComponents>
     </Container>
     <Component class="javax.swing.JButton" name="cancelButton">

Modified: trunk/src/net/sf/plantlore/client/SettingsView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/SettingsView.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/SettingsView.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -68,6 +68,9 @@
         //--- SCHEDA TAB
         headerOneField.setText(model.getHeaderOne());
         headerTwoField.setText(model.getHeaderTwo());
+        
+        //--- GENERAL TAB
+        dynamicPageCheckBox.setSelected(model.isDynamicPageLoading());
     }
     
     
@@ -96,6 +99,8 @@
         
         headerOneLabel.setText(L10n.getString("Settings.HeaderOne"));
         headerTwoLabel.setText(L10n.getString("Settings.HeaderTwo"));
+        
+        dynamicPageCheckBox.setText(L10n.getString("Settings.General.DynamicPageLoading"));
     }
     
     /** This method is called from within the constructor to
@@ -130,6 +135,9 @@
         headerOneLabel = new javax.swing.JLabel();
         headerTwoLabel = new javax.swing.JLabel();
         headerTwoField = new javax.swing.JTextField();
+        jPanel7 = new javax.swing.JPanel();
+        jPanel8 = new javax.swing.JPanel();
+        dynamicPageCheckBox = new javax.swing.JCheckBox();
         cancelButton = new javax.swing.JButton();
         okButton = new javax.swing.JButton();
         helpButton = new javax.swing.JButton();
@@ -174,7 +182,7 @@
                 .add(czechRadioButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(defaultRadioButton)
-                .addContainerGap(48, Short.MAX_VALUE))
+                .addContainerGap(49, Short.MAX_VALUE))
         );
 
         org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
@@ -191,7 +199,7 @@
             .add(jPanel1Layout.createSequentialGroup()
                 .addContainerGap()
                 .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(145, Short.MAX_VALUE))
+                .addContainerGap(144, Short.MAX_VALUE))
         );
         jTabbedPane1.addTab(L10n.getString("Settings.LanguagesTab"), jPanel1);
 
@@ -333,7 +341,7 @@
                 .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(headerTwoLabel)
                     .add(headerTwoField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
-                .addContainerGap(44, Short.MAX_VALUE))
+                .addContainerGap(45, Short.MAX_VALUE))
         );
 
         org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
@@ -350,10 +358,51 @@
             .add(jPanel5Layout.createSequentialGroup()
                 .addContainerGap()
                 .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(160, Short.MAX_VALUE))
+                .addContainerGap(159, Short.MAX_VALUE))
         );
         jTabbedPane1.addTab(L10n.getString("Settings.SchedaTab"), jPanel5);
 
+        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(L10n.getString("Settings.General.OverviewPanel")));
+        dynamicPageCheckBox.setText("jCheckBox1");
+        dynamicPageCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
+        dynamicPageCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
+        dynamicPageCheckBox.setActionCommand("DYNAMIC_PAGE_LOADING");
+
+        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
+        jPanel8.setLayout(jPanel8Layout);
+        jPanel8Layout.setHorizontalGroup(
+            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel8Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(dynamicPageCheckBox)
+                .addContainerGap(481, Short.MAX_VALUE))
+        );
+        jPanel8Layout.setVerticalGroup(
+            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel8Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(dynamicPageCheckBox)
+                .addContainerGap(73, Short.MAX_VALUE))
+        );
+
+        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
+        jPanel7.setLayout(jPanel7Layout);
+        jPanel7Layout.setHorizontalGroup(
+            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel7Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .addContainerGap())
+        );
+        jPanel7Layout.setVerticalGroup(
+            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+            .add(jPanel7Layout.createSequentialGroup()
+                .addContainerGap()
+                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                .addContainerGap(159, Short.MAX_VALUE))
+        );
+        jTabbedPane1.addTab(L10n.getString("Settings.GeneralTab"), jPanel7);
+
         cancelButton.setText("Cancel");
         cancelButton.setActionCommand("CANCEL");
 
@@ -375,7 +424,7 @@
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(okButton)
                 .addContainerGap())
-            .add(jTabbedPane1)
+            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
         );
 
         layout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
@@ -420,6 +469,7 @@
     protected javax.swing.JRadioButton czechRadioButton;
     protected javax.swing.JRadioButton defaultRadioButton;
     protected javax.swing.JButton downButton;
+    protected javax.swing.JCheckBox dynamicPageCheckBox;
     protected javax.swing.JRadioButton englishRadioButton;
     protected javax.swing.JTextField headerOneField;
     protected javax.swing.JLabel headerOneLabel;
@@ -432,6 +482,8 @@
     private javax.swing.JPanel jPanel4;
     private javax.swing.JPanel jPanel5;
     private javax.swing.JPanel jPanel6;
+    private javax.swing.JPanel jPanel7;
+    private javax.swing.JPanel jPanel8;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JScrollPane jScrollPane2;
     private javax.swing.JTabbedPane jTabbedPane1;

Modified: trunk/src/net/sf/plantlore/client/TableSorter.java
===================================================================
--- trunk/src/net/sf/plantlore/client/TableSorter.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/client/TableSorter.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -503,7 +503,7 @@
         return tableModel.getPageSize();
     }
     
-    public void setPageSize(int size) {
+    public void setPageSize(int size) throws RemoteException, DBLayerException {
         tableModel.setPageSize(size);
     }
     

Modified: trunk/src/net/sf/plantlore/common/PlantloreConstants.java
===================================================================
--- trunk/src/net/sf/plantlore/common/PlantloreConstants.java	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/common/PlantloreConstants.java	2006-06-05 22:26:44 UTC (rev 457)
@@ -101,6 +101,10 @@
     public static final int UPDATE                = 2;
     public static final int DELETE                = 3;
     
+    /** Constants used for Preferences keys */
+    public static final String PREF_DYNAMIC_PAGE_SIZE = "Overview.dynamicPageSize";
+    
+    
     /** Creates a new instance of PlantloreConstants */
     public PlantloreConstants() {
     }

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-06-05 22:26:44 UTC (rev 457)
@@ -1289,3 +1289,9 @@
 Delete.InsufficientRights=You don't have sufficient rights to delete all the checked records.
 
 Delete.InsufficientRightsTitle=Insufficient rights
+
+Settings.GeneralTab=General
+
+Settings.General.OverviewPanel=Overview
+
+Settings.General.DynamicPageLoading=Determine number of records per page dynamically

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-06-05 22:26:44 UTC (rev 457)
@@ -842,6 +842,12 @@
 
 Delete.InsufficientRightsTitle=Insufficient rights
 
+Settings.GeneralTab=Obecn\u00E9
+
+Settings.General.OverviewPanel=P\u0159ehled
+
+Settings.General.DynamicPageLoading=Ur\u010Di po\u010Det z\u00E1znam\u016F na str\u00E1nku dynamicky
+
 Languages=Jazyky
 
 Login.SelectDB=Volba datab\u00E1ze

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-05 20:58:47 UTC (rev 456)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-06-05 22:26:44 UTC (rev 457)
@@ -910,6 +910,12 @@
 
 Delete.InsufficientRightsTitle=Insufficient rights
 
+Settings.GeneralTab=General
+
+Settings.General.OverviewPanel=Overview
+
+Settings.General.DynamicPageLoading=Determine number of records per page dynamically
+
 Overview.MenuHistory=&History
 
 Login.SelectDB=Select Database



From admin at berlios.de  Tue Jun  6 00:34:59 2006
From: admin at berlios.de (admin at berlios.de)
Date: Tue, 6 Jun 2006 00:34:59 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7675] Improve GUI - load as much rows as it is possible to display
Message-ID: <200606052234.k55MYxS1016262@unicorn.berlios.de>

Bug #7675, was updated on 2006-May-30 21:47
Here is a current snapshot of the bug.

Project: Plantlore
Category: General
Status: Open
Resolution: None
Bug Group: RFE
Priority: 7
Submitted by: fraktalek
Assigned to : none
Summary: Improve GUI - load as much rows as it is possible to display

Details: Improve GUI so that tables are load as much data as they can display at one time. Also react to changes of the dialog or frame.



Follow-Ups:

Date: 2006-Jun-06 00:34
By: fraktalek

Comment:
Implemented (inefficiently) for overview in revision 457.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7675&group_id=5975


From kovo at berlios.de  Tue Jun  6 01:33:59 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Tue, 6 Jun 2006 01:33:59 +0200
Subject: [Plantlore-dev] r458 - in trunk/src/net/sf/plantlore: client client/publications common server
Message-ID: <200606052333.k55NXxBW028158@sheep.berlios.de>

Author: kovo
Date: 2006-06-06 01:33:50 +0200 (Tue, 06 Jun 2006)
New Revision: 458

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/Search.java
   trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java
   trunk/src/net/sf/plantlore/client/publications/AddPublicationView.form
   trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java
   trunk/src/net/sf/plantlore/client/publications/PublicationManager.java
   trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java
   trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.form
   trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java
   trunk/src/net/sf/plantlore/common/ProgressBar.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
HibernateDBLayer - Fix bug in checkRights() - EDITALL privilege was not taken into account.
Publications - Major update. New progressbars are used (Bug #7662), rights are validated before user executes insert, update or delete, AppCore is notified when publications change (so that cache can be reloaded). ReferenceCitation item removed (Bug #7672)
Search - Fixed bug in the main search query - occurrences with deleted publications are no longer loaded.
ProgressBar - added new constructor using JDialog instead of JFrame

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1136,6 +1136,7 @@
 					true);
 			AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel,
 					authView);
+                        authModel.addObserver(managerBridge);
 			authView.setVisible(true);
 		}
 
@@ -1157,6 +1158,7 @@
 					publicationManagerModel, view, true);
 			publicationManagerCtrl = new PublicationManagerCtrl(
 					publicationManagerModel, publicationManagerView);
+                        publicationManagerModel.addObserver(managerBridge);
 			publicationManagerView.setVisible(true);
 		}
 	}

Modified: trunk/src/net/sf/plantlore/client/Search.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Search.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/Search.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -548,7 +548,7 @@
     	exportQuery.createAlias(habitatAlias+Habitat.NEARESTVILLAGE, Record.alias(Village.class));
     	exportQuery.createAlias(habitatAlias+Habitat.PHYTOCHORION, Record.alias(Phytochorion.class));
     	exportQuery.addOrder(PlantloreConstants.DIRECT_ASC, Occurrence.YEARCOLLECTED);
-    	
+        exportQuery.addRestriction(PlantloreConstants.RESTR_EQ, Record.alias(Publication.class)+"."+Occurrence.DELETED, null, 0, null);    	
     	for( Restriction restriction : restrictions ) {
     		if(restriction.type == RESTR_BETWEEN)
     			exportQuery.addRestriction(restriction.type, restriction.column, null, null, (Collection)restriction.arg);
@@ -595,7 +595,7 @@
                 sq.addRestriction(PlantloreConstants.SUBQUERY_LEALL, AuthorOccurrence.AUTHOR, null, subQuery, null);                
                 sq.addOrder(PlantloreConstants.DIRECT_DESC, "occ."+Occurrence.YEARCOLLECTED); //setridit podle roku
                 sq.addRestriction(PlantloreConstants.RESTR_EQ, "occ."+Occurrence.DELETED, null, 0, null);
-                
+                sq.addRestriction(PlantloreConstants.RESTR_EQ, "publication."+Occurrence.DELETED, null, 0, null);
                 for (Column column : columns) {
                     switch (column.type) {
                         case AUTHOR:

Modified: trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/AddPublicationCtrl.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -13,9 +13,15 @@
 import java.awt.event.FocusListener;
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
+import java.rmi.RemoteException;
+import javax.swing.JOptionPane;
 import net.sf.plantlore.common.PlantloreHelp;
 import javax.swing.Timer;
+import net.sf.plantlore.common.ProgressBar;
 import net.sf.plantlore.common.ProgressDialog;
+import net.sf.plantlore.common.Task;
+import net.sf.plantlore.common.exception.DBLayerException;
+import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.Logger;
 
 /**
@@ -54,26 +60,9 @@
         view.publicationYearAddPropertyChangeListener(new PublicationYearFieldPropertyChangeListener());
         view.journalNameAddPropertyChangeListener(new JournalNameFieldPropertyChangeListener());
         view.journalAuthorAddPropertyChangeListener(new JournalAuthorFieldPropertyChangeListener());
-        view.referenceCitationAddPropertyChangeListener(new ReferenceCitationFieldPropertyChangeListener());
         view.referenceDetailAddPropertyChangeListener(new ReferenceDetailFieldPropertyChangeListener());
         view.urlAddPropertyChangeListener(new UrlFieldPropertyChangeListener());
         view.noteAddFocusListener(new NoteAreaFocusListener());                
-        // Create a timer to check for the end of long running task
-        timer = new Timer(100, new ActionListener() {
-            public void actionPerformed(ActionEvent evt) {
-                if (model.isOperationDone() == true) {
-                    timer.stop();
-                    // Close progress bar dialog
-                    progress.close();
-                    view.setDialogEnabled(true);                    
-                    if (model.processErrors() == false) {    
-                        if (model.isResultAvailable()) {   
-                            model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());                        
-                        }
-                    }
-                }
-            }
-        });        
     }
     
     /**
@@ -94,20 +83,69 @@
     class SavePublicationButtonListener implements ActionListener {
         public void actionPerformed(ActionEvent e) {            
             // Check whether all the required fields are present
-            if (view.checkNonEmpty(PublicationManager.FIELD_REFERENCE_CITATION)) {
-                if (model.getEditPublication() == null) {
+            if (view.checkCompulsory()) {
+                if (model.getEditPublication() == null) {                    
                     // Save new publication
-                    model.savePublication();                
-                } else {
+                    Task task = model.savePublication();                
+                    ProgressBar progressBar = new ProgressBar(task, view, true) {
+                        public void exceptionHandler(Exception ex) {
+                            if (ex instanceof DBLayerException) {
+                                DBLayerException e = (DBLayerException)ex;
+                                JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                                logger.error(e+": "+e.getErrorInfo());
+                                getTask().stop();
+                                return;
+                            }
+                            if (ex instanceof RemoteException) {
+                                RemoteException e = (RemoteException)ex;
+                                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                                logger.error(e);
+                                getTask().stop();
+                                return;
+                            }
+                            JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                            logger.error(ex);                            
+                        }              
+                        
+                        public void afterStopped(Object value) {
+                            model.searchPublication(false);
+                            model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());
+                            model.reloadCache();
+                        }
+                    };
+                    progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+                    task.start();
+                } else {                    
                     // Edit existing publication
-                    model.editPublication();
+                    Task task = model.editPublication();
+                    ProgressBar progressBar = new ProgressBar(task, view, true) {
+                        public void exceptionHandler(Exception ex) {
+                            if (ex instanceof DBLayerException) {
+                                DBLayerException e = (DBLayerException)ex;
+                                JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                                logger.error(e+": "+e.getErrorInfo());
+                                getTask().stop();
+                                return;
+                            }
+                            if (ex instanceof RemoteException) {
+                                RemoteException e = (RemoteException)ex;
+                                JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                                logger.error(e);
+                                getTask().stop();
+                                return;
+                            }
+                            JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                            logger.error(ex);                            
+                        }                                      
+                        public void afterStopped(Object value) {
+                            model.searchPublication(false);
+                            model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());
+                            model.reloadCache();                            
+                        }
+                    };
+                    progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+                    task.start();                    
                 }
-                // Disable the dialog while saving author
-                view.setDialogEnabled(false);                                
-                timer.start();                
-                // Display dialog with progress bar
-                progress = new ProgressDialog(view.getDialog(), true);
-                progress.show();
                 // Close the add dialog when save finished
                 view.close();
             }
@@ -128,7 +166,9 @@
      */
     class PublicationYearFieldPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
-            model.setPublicationYear(view.getPublicationYear());
+            if (view.getPublicationYear() != null) {
+                model.setPublicationYear(view.getPublicationYear());
+            }
         }        
     }    
     
@@ -151,15 +191,6 @@
     }    
     
     /**
-     *  PropertyChangeListener class for updating <b>reference citation</b> field in the model with data from the form.
-     */
-    class ReferenceCitationFieldPropertyChangeListener implements PropertyChangeListener {
-        public void propertyChange(PropertyChangeEvent e) {
-            model.setReferenceCitation(view.getReferenceCitation());
-        }        
-    }        
-    
-    /**
      *  PropertyChangeListener class for updating <b>reference detail</b> field in the model with data from the form.
      */
     class ReferenceDetailFieldPropertyChangeListener implements PropertyChangeListener {

Modified: trunk/src/net/sf/plantlore/client/publications/AddPublicationView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/AddPublicationView.form	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/AddPublicationView.form	2006-06-05 23:33:50 UTC (rev 458)
@@ -22,39 +22,44 @@
           <Group type="102" attributes="0">
               <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="helpBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="37" max="32767" attributes="1"/>
-                      <Component id="closeBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace min="-2" max="-2" attributes="0"/>
-                      <Component id="saveBtn" min="-2" pref="104" max="-2" attributes="0"/>
-                  </Group>
-                  <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
-                  <Group type="102" alignment="0" attributes="0">
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Group type="103" alignment="0" groupAlignment="1" max="-2" attributes="0">
-                              <Component id="jLabel5" alignment="1" max="32767" attributes="1"/>
-                              <Component id="jLabel7" alignment="1" max="32767" attributes="1"/>
-                              <Component id="jLabel6" alignment="1" max="32767" attributes="1"/>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
+                          <Group type="102" alignment="0" attributes="0">
+                              <Component id="jLabel2" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace pref="10" max="32767" attributes="1"/>
                           </Group>
-                          <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel2" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="jLabel1" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Group type="102" alignment="0" attributes="0">
+                              <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
+                              <EmptySpace pref="10" max="32767" attributes="1"/>
+                          </Group>
+                          <Component id="jLabel10" alignment="0" min="-2" max="-2" attributes="0"/>
+                          <Component id="jLabel7" alignment="0" pref="76" max="32767" attributes="1"/>
+                          <Group type="102" alignment="0" max="-2" attributes="0">
+                              <Component id="jLabel3" min="-2" max="-2" attributes="1"/>
+                              <EmptySpace min="10" pref="10" max="10" attributes="0"/>
+                          </Group>
+                          <Component id="jLabel5" alignment="0" pref="76" max="32767" attributes="1"/>
                           <Component id="jLabel8" alignment="0" min="-2" max="-2" attributes="1"/>
-                          <Component id="jLabel10" alignment="0" min="-2" max="-2" attributes="0"/>
                       </Group>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Component id="urlField" alignment="0" pref="279" max="32767" attributes="0"/>
-                          <Component id="collectionNameField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="publicationYearField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="journalNameField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="journalAuthorField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="referenceCitationField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="referenceDetailField" alignment="1" pref="279" max="32767" attributes="0"/>
-                          <Component id="jScrollPane2" alignment="1" pref="279" max="32767" attributes="0"/>
+                      <EmptySpace min="-2" max="-2" attributes="0"/>
+                      <Group type="103" groupAlignment="1" attributes="0">
+                          <Component id="jScrollPane2" pref="290" max="32767" attributes="0"/>
+                          <Component id="journalAuthorField" alignment="0" pref="290" max="32767" attributes="0"/>
+                          <Component id="collectionNameField" alignment="1" pref="290" max="32767" attributes="0"/>
+                          <Component id="publicationYearField" alignment="1" pref="290" max="32767" attributes="0"/>
+                          <Component id="journalNameField" alignment="1" pref="290" max="32767" attributes="0"/>
+                          <Component id="urlField" alignment="0" pref="290" max="32767" attributes="0"/>
+                          <Component id="referenceDetailField" alignment="0" pref="290" max="32767" attributes="0"/>
                       </Group>
                   </Group>
+                  <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
+                  <Group type="102" alignment="1" attributes="0">
+                      <Component id="helpBtn" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="58" max="32767" attributes="0"/>
+                      <Component id="closeBtn" min="-2" pref="101" max="-2" attributes="0"/>
+                      <EmptySpace max="-2" attributes="0"/>
+                      <Component id="saveBtn" min="-2" pref="104" max="-2" attributes="0"/>
+                  </Group>
               </Group>
               <EmptySpace min="-2" max="-2" attributes="0"/>
           </Group>
@@ -62,7 +67,7 @@
     </DimensionLayout>
     <DimensionLayout dim="1">
       <Group type="103" groupAlignment="0" attributes="0">
-          <Group type="102" alignment="0" max="-2" attributes="0">
+          <Group type="102" alignment="0" attributes="0">
               <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="jLabel1" alignment="3" min="-2" max="-2" attributes="0"/>
@@ -78,38 +83,38 @@
                   <Component id="jLabel3" alignment="3" min="-2" max="-2" attributes="0"/>
                   <Component id="journalNameField" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="journalAuthorField" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                   <Component id="jLabel5" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="journalAuthorField" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace min="-2" pref="7" max="-2" attributes="0"/>
-              <Group type="103" groupAlignment="3" attributes="0">
-                  <Component id="jLabel6" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="referenceCitationField" alignment="3" min="-2" max="-2" attributes="0"/>
-              </Group>
               <EmptySpace min="-2" max="-2" attributes="0"/>
-              <Group type="103" groupAlignment="3" attributes="0">
+              <Group type="103" groupAlignment="3" max="-2" attributes="0">
+                  <Component id="referenceDetailField" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                   <Component id="jLabel7" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="referenceDetailField" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="urlField" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                   <Component id="jLabel10" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="urlField" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
+              <EmptySpace min="-2" max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jLabel8" min="-2" max="-2" attributes="0"/>
-                  <Component id="jScrollPane2" min="-2" max="-2" attributes="0"/>
+                  <Group type="102" attributes="0">
+                      <Component id="jLabel8" min="-2" max="-2" attributes="0"/>
+                      <EmptySpace pref="60" max="32767" attributes="0"/>
+                      <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
+                  </Group>
+                  <Group type="102" alignment="0" attributes="0">
+                      <Component id="jScrollPane2" pref="72" max="32767" attributes="0"/>
+                      <EmptySpace min="16" pref="16" max="16" attributes="0"/>
+                  </Group>
               </Group>
-              <EmptySpace max="-2" attributes="0"/>
-              <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
-              <EmptySpace min="-2" pref="7" max="-2" attributes="0"/>
-              <Group type="103" groupAlignment="3" max="-2" attributes="0">
+              <EmptySpace min="-2" max="-2" attributes="0"/>
+              <Group type="103" groupAlignment="3" attributes="0">
+                  <Component id="closeBtn" alignment="3" min="-2" max="-2" attributes="0"/>
+                  <Component id="saveBtn" alignment="3" min="-2" max="-2" attributes="0"/>
                   <Component id="helpBtn" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="saveBtn" alignment="3" min="-2" max="-2" attributes="0"/>
-                  <Component id="closeBtn" alignment="3" min="-2" max="-2" attributes="0"/>
               </Group>
               <EmptySpace min="-2" max="-2" attributes="0"/>
           </Group>
@@ -145,13 +150,6 @@
         </Property>
       </Properties>
     </Component>
-    <Component class="javax.swing.JLabel" name="jLabel6">
-      <Properties>
-        <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
-          <Connection code="L10n.getString(&quot;addPublicationReferenceCitationLbl&quot;)" type="code"/>
-        </Property>
-      </Properties>
-    </Component>
     <Component class="javax.swing.JLabel" name="jLabel7">
       <Properties>
         <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
@@ -180,7 +178,7 @@
     </Component>
     <Component class="javax.swing.JFormattedTextField" name="publicationYearField">
       <AuxValues>
-        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="publicationYearField.setValue(0);"/>
+        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="publicationYearField.setValue(0);&#xa;publicationYearField.setValue(null);"/>
       </AuxValues>
     </Component>
     <Component class="javax.swing.JFormattedTextField" name="journalNameField">
@@ -188,21 +186,11 @@
         <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="journalNameField.setValue(&quot;&quot;);"/>
       </AuxValues>
     </Component>
-    <Component class="javax.swing.JFormattedTextField" name="journalAuthorField">
+    <Component class="javax.swing.JFormattedTextField" name="urlField">
       <AuxValues>
-        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="journalAuthorField.setValue(&quot;&quot;);"/>
+        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="urlField.setValue(&quot;&quot;);"/>
       </AuxValues>
     </Component>
-    <Component class="javax.swing.JFormattedTextField" name="referenceCitationField">
-      <AuxValues>
-        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="referenceCitationField.setValue(&quot;&quot;);"/>
-      </AuxValues>
-    </Component>
-    <Component class="javax.swing.JFormattedTextField" name="referenceDetailField">
-      <AuxValues>
-        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="referenceDetailField.setValue(&quot;&quot;);"/>
-      </AuxValues>
-    </Component>
     <Container class="javax.swing.JScrollPane" name="jScrollPane2">
       <AuxValues>
         <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
@@ -226,6 +214,9 @@
         <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
           <Connection code="L10n.getString(&quot;Common.Help&quot;)" type="code"/>
         </Property>
+        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+          <Dimension value="[150, 23]"/>
+        </Property>
       </Properties>
     </Component>
     <Component class="javax.swing.JButton" name="closeBtn">
@@ -233,6 +224,9 @@
         <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
           <Connection code="L10n.getString(&quot;Common.Close&quot;)" type="code"/>
         </Property>
+        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+          <Dimension value="[150, 23]"/>
+        </Property>
       </Properties>
     </Component>
     <Component class="javax.swing.JButton" name="saveBtn">
@@ -240,6 +234,9 @@
         <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
           <Connection code="L10n.getString(&quot;Publication.Add.SaveButton&quot;)" type="code"/>
         </Property>
+        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+          <Dimension value="[150, 23]"/>
+        </Property>
       </Properties>
     </Component>
     <Component class="javax.swing.JLabel" name="jLabel10">
@@ -249,10 +246,15 @@
         </Property>
       </Properties>
     </Component>
-    <Component class="javax.swing.JFormattedTextField" name="urlField">
+    <Component class="javax.swing.JFormattedTextField" name="referenceDetailField">
       <AuxValues>
-        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="urlField.setValue(&quot;&quot;);"/>
+        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="referenceDetailField.setValue(&quot;&quot;);"/>
       </AuxValues>
     </Component>
+    <Component class="javax.swing.JFormattedTextField" name="journalAuthorField">
+      <AuxValues>
+        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="journalAuthorField.setValue(&quot;&quot;);"/>
+      </AuxValues>
+    </Component>
   </SubComponents>
 </Form>

Modified: trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/AddPublicationView.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1,8 +1,3 @@
-/*
- * AddPublicationView.java
- *
- * Created on 30. duben 2006, 17:46
- */
 
 package net.sf.plantlore.client.publications;
 
@@ -21,7 +16,7 @@
  * Dialog used for adding / editing publications.
  *
  * @author  Tomas Kovarik
- * @version 1.0 BETA, May 1, 2006
+ * @version 1.0, June 4, 2006
  */
 public class AddPublicationView extends javax.swing.JDialog implements Observer {
     /** Model of the Publication manager MVC */
@@ -39,6 +34,9 @@
         this.model = publModel;
         this.model.addObserver(this);         
         initComponents();
+        // Set default button of the dialog
+        getRootPane().setDefaultButton(this.saveBtn);        
+        // Initialize help
         PlantloreHelp.addKeyHelp(PlantloreHelp.PUBLICATION_ADD, this.getRootPane());
         PlantloreHelp.addButtonHelp(PlantloreHelp.PUBLICATION_ADD, this.helpBtn);        
         // Center the dialog on the screen
@@ -56,23 +54,21 @@
         jLabel2 = new javax.swing.JLabel();
         jLabel3 = new javax.swing.JLabel();
         jLabel5 = new javax.swing.JLabel();
-        jLabel6 = new javax.swing.JLabel();
         jLabel7 = new javax.swing.JLabel();
         jLabel8 = new javax.swing.JLabel();
         jLabel9 = new javax.swing.JLabel();
         collectionNameField = new javax.swing.JFormattedTextField();
         publicationYearField = new javax.swing.JFormattedTextField();
         journalNameField = new javax.swing.JFormattedTextField();
-        journalAuthorField = new javax.swing.JFormattedTextField();
-        referenceCitationField = new javax.swing.JFormattedTextField();
-        referenceDetailField = new javax.swing.JFormattedTextField();
+        urlField = new javax.swing.JFormattedTextField();
         jScrollPane2 = new javax.swing.JScrollPane();
         noteArea = new javax.swing.JTextArea();
         helpBtn = new javax.swing.JButton();
         closeBtn = new javax.swing.JButton();
         saveBtn = new javax.swing.JButton();
         jLabel10 = new javax.swing.JLabel();
-        urlField = new javax.swing.JFormattedTextField();
+        referenceDetailField = new javax.swing.JFormattedTextField();
+        journalAuthorField = new javax.swing.JFormattedTextField();
 
         setTitle(L10n.getString("addPublicationTitle"));
         jLabel1.setText(L10n.getString("addPublicationCollectionNameLbl"));
@@ -83,8 +79,6 @@
 
         jLabel5.setText(L10n.getString("addPublicationJournalAuthorNameLbl"));
 
-        jLabel6.setText(L10n.getString("addPublicationReferenceCitationLbl"));
-
         jLabel7.setText(L10n.getString("addPublicationReferenceDetailLbl"));
 
         jLabel8.setText(L10n.getString("addPublicationNoteLbl"));
@@ -94,30 +88,32 @@
         collectionNameField.setValue("");
 
         publicationYearField.setValue(0);
+        publicationYearField.setValue(null);
 
         journalNameField.setValue("");
 
-        journalAuthorField.setValue("");
+        urlField.setValue("");
 
-        referenceCitationField.setValue("");
-
-        referenceDetailField.setValue("");
-
         noteArea.setColumns(20);
         noteArea.setRows(5);
         TransferFocus.patch(noteArea);
         jScrollPane2.setViewportView(noteArea);
 
         helpBtn.setText(L10n.getString("Common.Help"));
+        helpBtn.setMinimumSize(new java.awt.Dimension(150, 23));
 
         closeBtn.setText(L10n.getString("Common.Close"));
+        closeBtn.setMinimumSize(new java.awt.Dimension(150, 23));
 
         saveBtn.setText(L10n.getString("Publication.Add.SaveButton"));
+        saveBtn.setMinimumSize(new java.awt.Dimension(150, 23));
 
         jLabel10.setText(L10n.getString("addPublicationUrlLbl"));
 
-        urlField.setValue("");
+        referenceDetailField.setValue("");
 
+        journalAuthorField.setValue("");
+
         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
@@ -125,34 +121,37 @@
             .add(layout.createSequentialGroup()
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(layout.createSequentialGroup()
-                        .add(helpBtn)
-                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 37, Short.MAX_VALUE)
-                        .add(closeBtn)
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
+                            .add(layout.createSequentialGroup()
+                                .add(jLabel2)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE))
+                            .add(layout.createSequentialGroup()
+                                .add(jLabel1)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE))
+                            .add(jLabel10)
+                            .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
+                            .add(layout.createSequentialGroup()
+                                .add(jLabel3)
+                                .add(10, 10, 10))
+                            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
+                            .add(jLabel8))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(saveBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
+                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(org.jdesktop.layout.GroupLayout.LEADING, journalAuthorField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(collectionNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(publicationYearField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(journalNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(org.jdesktop.layout.GroupLayout.LEADING, urlField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
+                            .add(org.jdesktop.layout.GroupLayout.LEADING, referenceDetailField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)))
                     .add(jLabel9)
-                    .add(layout.createSequentialGroup()
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
-                                .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                                .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                                .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-                            .add(jLabel3)
-                            .add(jLabel2)
-                            .add(jLabel1)
-                            .add(jLabel8)
-                            .add(jLabel10))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
+                        .add(helpBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 58, Short.MAX_VALUE)
+                        .add(closeBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(urlField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, collectionNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, publicationYearField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, journalNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, journalAuthorField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, referenceCitationField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, referenceDetailField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
-                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))))
+                        .add(saveBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                 .addContainerGap())
         );
         layout.setVerticalGroup(
@@ -172,83 +171,48 @@
                     .add(journalNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
-                    .add(jLabel5)
-                    .add(journalAuthorField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
-                .add(7, 7, 7)
-                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
-                    .add(jLabel6)
-                    .add(referenceCitationField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(journalAuthorField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel5))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
-                    .add(jLabel7)
-                    .add(referenceDetailField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE, false)
+                    .add(referenceDetailField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel7))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
-                    .add(jLabel10)
-                    .add(urlField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(urlField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(jLabel10))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jLabel8)
-                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
+                    .add(layout.createSequentialGroup()
+                        .add(jLabel8)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 60, Short.MAX_VALUE)
+                        .add(jLabel9))
+                    .add(layout.createSequentialGroup()
+                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
+                        .add(16, 16, 16)))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                .add(jLabel9)
-                .add(7, 7, 7)
-                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE, false)
-                    .add(helpBtn)
-                    .add(saveBtn)
-                    .add(closeBtn))
+                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(closeBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(saveBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                    .add(helpBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .addContainerGap())
         );
         pack();
     }// </editor-fold>//GEN-END:initComponents
     
     /**
-     *  Check whether given compulsory field is blank. If it is, display appropriate message and give this field focus.
+     *  Check whether compulsory items are present. At least one of the following items must be
+     *  provided: collectionName, collectionYearPublication, journalAuthorName, journalName
      *
-     *  @param field string identifier of the field. possible values are: <i>name, surname, organization, role, address, phone, email, url, note</i>
-     *  @return true if the field is non-empty, false otherwise
+     *  @return true if one of the collectionName, collectionYearPublication, journalAuthorName, journalName is non-empty, false otherwise
      */
-    public boolean checkNonEmpty(int field) {
-        if ((field == PublicationManager.FIELD_COLLECTION_NAME) && (collectionNameField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Name of the author is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
+    public boolean checkCompulsory() {
+        if (((Integer)publicationYearField.getValue() == null) && (((String)collectionNameField.getValue()).length() == 0) &&
+            (((String)journalNameField.getValue()).length() == 0) && (((String)journalAuthorField.getValue()).length() == 0)) {
+            JOptionPane.showMessageDialog(this, "At least one of the following fields must be filled in: Journal author, Year of publication, Journal name, Collection name", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
             collectionNameField.requestFocus();
             return false;
         }
-        if ((field == PublicationManager.FIELD_COLLECTION_YEAR) && (publicationYearField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Publication year is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            publicationYearField.requestFocus();
-            return false;            
-        }
-        if ((field == PublicationManager.FIELD_JOURNAL_NAME) && (journalNameField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Journal name is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            journalNameField.requestFocus();
-            return false;                        
-        }
-        if ((field == PublicationManager.FIELD_JOURNAL_AUTHOR) && (journalAuthorField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Name of the author of the journal is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            journalAuthorField.requestFocus();
-            return false;                        
-        }
-        if ((field == PublicationManager.FIELD_REFERENCE_CITATION) && (referenceCitationField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Reference citation is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            referenceCitationField.requestFocus();
-            return false;                        
-        }
-        if ((field == PublicationManager.FIELD_REFERENCE_DETAIL) && (referenceDetailField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Reference detail is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            referenceDetailField.requestFocus();
-            return false;                        
-        }
-        if ((field == PublicationManager.FIELD_URL) && (urlField.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "URL is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            urlField.requestFocus();
-            return false;                        
-        }
-        if ((field == PublicationManager.FIELD_NOTE) && (noteArea.getText().length() == 0)) {
-            JOptionPane.showMessageDialog(this, "Note is a compulsory field. Please fill it in.", "Missing compulsory field", JOptionPane.ERROR_MESSAGE);
-            noteArea.requestFocus();
-            return false;                        
-        }        
         return true;
     }
     
@@ -270,7 +234,10 @@
     }
     
     /**
-     *  Update contents of the fields on the form according to the data in the model. This method is called when model notifies its observers.
+     *  Update contents of the fields on the form according to the data in the model. This method is 
+     *  called when model notifies its observers.
+     *  @param o    observable which notified observers
+     *  @param arg  argument sent with notification
      */
     public void update(Observable o, Object arg) {
         // Load form fields with data from the model
@@ -278,7 +245,6 @@
         this.publicationYearField.setValue(model.getPublicationYear());
         this.journalNameField.setValue(model.getJournalName());
         this.journalAuthorField.setValue(model.getJournalAuthor());
-        this.referenceCitationField.setValue(model.getReferenceCitation());
         this.referenceDetailField.setValue(model.getReferenceDetail());
         this.urlField.setValue(model.getUrl());
         this.noteArea.setText(model.getNote());
@@ -339,16 +305,8 @@
     void journalAuthorAddPropertyChangeListener(PropertyChangeListener pcl) {
         journalAuthorField.addPropertyChangeListener(pcl);
     }    
-
+   
     /**
-     *  Add PropertyChangeListener for the <b>reference citation</b> field
-     *  @param pcl PropertyChangeListener for the <b>reference citation</b> field
-     */
-    void referenceCitationAddPropertyChangeListener(PropertyChangeListener pcl) {
-        referenceCitationField.addPropertyChangeListener(pcl);
-    }
-    
-    /**
      *  Add PropertyChangeListener for the <b>reference detail</b> field
      *  @param pcl PropertyChangeListener for the <b>reference detail</b> field
      */
@@ -410,16 +368,8 @@
     public String getJournalAuthor() {
         return (String)journalAuthorField.getValue();
     }    
-    
+       
     /**
-     *  Get the reference citation.
-     *  @return reference citation
-     */    
-    public String getReferenceCitation() {
-        return (String)referenceCitationField.getValue();        
-    }    
-    
-    /**
      *  Get the reference detail.
      *  @return reference detail
      */    
@@ -452,7 +402,6 @@
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel5;
-    private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JLabel jLabel8;
     private javax.swing.JLabel jLabel9;
@@ -461,7 +410,6 @@
     private javax.swing.JFormattedTextField journalNameField;
     private javax.swing.JTextArea noteArea;
     private javax.swing.JFormattedTextField publicationYearField;
-    private javax.swing.JFormattedTextField referenceCitationField;
     private javax.swing.JFormattedTextField referenceDetailField;
     private javax.swing.JButton saveBtn;
     private javax.swing.JFormattedTextField urlField;

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManager.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManager.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManager.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1,9 +1,3 @@
-/*
- * PublicationManager.java
- *
- * Created on 15. leden 2006, 2:04
- *
- */
 
 package net.sf.plantlore.client.publications;
 
@@ -11,10 +5,12 @@
 import java.util.ArrayList;
 import java.util.Observable;
 import net.sf.plantlore.common.PlantloreConstants;
+import net.sf.plantlore.common.Task;
 import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.common.record.AuthorOccurrence;
 import net.sf.plantlore.common.record.Occurrence;
 import net.sf.plantlore.common.record.Publication;
+import net.sf.plantlore.common.record.User;
 import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.middleware.DBLayer;
 import net.sf.plantlore.middleware.SelectQuery;
@@ -23,40 +19,63 @@
 import org.apache.log4j.Logger;
 
 /**
- * Publication manager model. Contains bussines logic and data fields of the PublicationManager. 
- * Implements operations including add publication, edit publication, delete publication, search 
+ * Publication manager model. Contains bussines logic and data fields of the PublicationManager.
+ * Implements operations including add publication, edit publication, delete publication, search
  * publications.
- * 
+ *
  * @author Tomas Kovarik
- * @version 1.0 BETA, May 1, 2006
- * 
+ * @version 1.0, June 4, 2006
+ *
  * TODO:    Proper exception handling
  *          Clean API (get rid of unused or unnecessary methods)
  *          Improve thread management
  */
 public class PublicationManager extends Observable {
+    /* VARIOUS VARIABLES */
     /** Instance of a logger */
     private Logger logger;
     /** Exception with details about an error */
     private String error = null;
     /** Instance of a database management object */
     private DBLayer database;
+    /** Flag telling whether a long running operation has already finished */
+    private boolean done;
+    /** Result of the search query */
+    private int resultId = 0;
+    /** Actual number of rows to display */
+    private int displayRows = DEFAULT_DISPLAY_ROWS;
+    /** Data (results of a search query) displayed in the table */
+    private ArrayList data;
+    /** Index of the first record shown in the table */
+    private int currentFirstRow;
+    /** Index of currently selected publication in the table */
+    private int publicationIndex;
+    /** Field to be used for sorting search query results */
+    private int sortField = SORT_COLLECTION_NAME;
+    /** Direction of sorting. 0 = ASC, 1 = DESC. Default is ASC */
+    private int sortDirection = 0;
+    /** Publication we want to edit */
+    private Publication editPublication;
+    /** Enum used for notifying AppCore to reload cahced publications */
+    private PlantloreConstants.Table[] editTypeArray = new PlantloreConstants.Table[]{PlantloreConstants.Table.PUBLICATION};
+    
+    /* PUBLICATION PROPERTIES */
     /** Name of the collection */
     private String collectionName;
     /** Year of publication */
-    private int publicationYear;
+    private Integer publicationYear;
     /** Name of the journal */
     private String journalName;
     /** Name of the author of the journal */
     private String journalAuthor;
-    /** Reference citation */
-    private String referenceCitation;
     /** Reference detail */
     private String referenceDetail;
     /** URL of the author */
     private String url;
     /** Note of the author */
     private String note;
+    
+    /* CRITERIA FOR PUBLICATION SEARCH */
     /** Collection name field used for searching */
     private String searchCollectionName;
     /** Journal name field used for searching */
@@ -65,26 +84,10 @@
     private String searchReferenceCitation;
     /** Reference detail field used for searching */
     private String searchReferenceDetail;
-    /** Flag telling whether a long running operation has already finished */
-    private boolean done;
-    /** Result of the search query */
-    private int resultId = 0;
+    
+    /* CONSTANTS */
     /** Constant with default number of rows to display */
     private static final int DEFAULT_DISPLAY_ROWS = 10;
-    /** Actual number of rows to display */
-    private int displayRows = DEFAULT_DISPLAY_ROWS;
-    /** Data (results of a search query) displayed in the table */
-    private ArrayList data;
-    /** Index of the first record shown in the table */
-    private int currentFirstRow;
-    /** Index of currently selected publication in the table */
-    private int publicationIndex;
-    /** Field to be used for sorting search query results */
-    private int sortField = SORT_COLLECTION_NAME;
-    /** Direction of sorting. 0 = ASC, 1 = DESC. Default is ASC */
-    private int sortDirection = 0;
-    /** Publication we want to edit */
-    private Publication editPublication;
     /** Constants used for identification of fields for sorting */
     public static final int SORT_COLLECTION_NAME = 1;
     public static final int SORT_PUBLICATION_YEAR = 2;
@@ -92,25 +95,20 @@
     public static final int SORT_JOURNAL_AUTHOR = 4;
     public static final int SORT_REFERENCE_CITATION = 5;
     public static final int SORT_REFERENCE_DETAIL = 6;
-    
-    public static final int FIELD_COLLECTION_NAME = 1;
-    public static final int FIELD_COLLECTION_YEAR = 2;
-    public static final int FIELD_JOURNAL_NAME = 3;
-    public static final int FIELD_JOURNAL_AUTHOR = 4;
-    public static final int FIELD_REFERENCE_CITATION = 5;
-    public static final int FIELD_REFERENCE_DETAIL = 6;    
-    public static final int FIELD_URL = 7;    
-    public static final int FIELD_NOTE = 8;    
-    
+    /** Constants with error descriptions */
     public static final String ERROR_SEARCH = L10n.getString("publicationSearchFailed");
     public static final String ERROR_SAVE = L10n.getString("publicationSaveFailed");
-    public static final String ERROR_UPDATE = L10n.getString("publicationUpdateFailed");    
+    public static final String ERROR_UPDATE = L10n.getString("publicationUpdateFailed");
     public static final String ERROR_DELETE = L10n.getString("publicationDeleteFailed");
     public static final String ERROR_PROCESS = L10n.getString("publicationProcessResultsFailed");
+
+    public static final int ADD = 1;
+    public static final int EDIT = 2;
+    public static final int DELETE = 3;
     
     /**
      * Creates a new instance of PublicationManager.
-     * 
+     *
      * @param database Instance of a database management object
      */
     public PublicationManager(DBLayer database) {
@@ -119,218 +117,334 @@
     }
     
     /**
-     *  Save new publication to the database. Information about the publication are stored in data fields of this class.
-     *  Operation is executed in a separate thread using <code>SwingWorker</code>. Error is set in case of an exception.
+     *  Save new publication to the database. Information about the publication are stored in the
+     *  data fields of this class. Operation is executed in a separate thread using Task class.
+     *
+     *  @return instance of the Task with the long running operation (saving data)
      */
-    public void savePublication() {
-        final SwingWorker worker = new SwingWorker() {
-            public Object construct() {
-                // The operation is not finished yet
-                done = false;
+    public Task savePublication() {
+        // Create Task
+        final Task task = new Task() {
+            public Object task() throws Exception {
+                boolean first = true;
+                // Construct Reference citation
+                StringBuffer refCitation = new StringBuffer();
+                if ((journalAuthor != null) && (!journalAuthor.equals(""))) {
+                    first = false;
+                    refCitation.append(journalAuthor);
+                }
+                if (publicationYear != null) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(publicationYear);
+                }
+                if ((journalName != null) && (!journalName.equals(""))) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(journalName);
+                }
+                if ((collectionName != null) && (!collectionName.equals(""))) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(collectionName);
+                }
                 // Create Publication object for publication we want to add
                 Publication publication = new Publication();
                 publication.setCollectionName(collectionName);
                 publication.setCollectionYearPublication(publicationYear);
                 publication.setJournalName(journalName);
                 publication.setJournalAuthorName(journalAuthor);
-                publication.setReferenceCitation(referenceCitation);
+                publication.setReferenceCitation(refCitation.toString());
                 publication.setReferenceDetail(referenceDetail);
                 publication.setUrl(url);
                 publication.setNote(note);
                 int rowId = -1;
-                try {
-                    // Execute query
-                    rowId = database.executeInsert(publication);
-                } catch (DBLayerException e) {
-                    // Log and set an error
-                    logger.error("Saving publication failed. Unable to execute insert query");
-                    setError(ERROR_SAVE);
-                    // Set operation state to finished
-                    done = true;
-                    return null;
-                } catch(RemoteException e) {
-                    System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-                }
+                // Clear variables with publication properties
+                clearDataHolders();
+                // Execute query
+                rowId = database.executeInsert(publication);
                 logger.info("Publication "+collectionName+" saved successfuly.");
-                if (isResultAvailable()) {
-                    searchPublication();
-                }
-                done = true;
+                // Stop the Task
+                fireStopped(null);               
                 return rowId;
             }
-        };
-        worker.start();
+        };        
+        return task;
     }
     
     /**
-     *  Delete a publication from the database. To-be-deleted publication is identified by the ID and is
-     *  retrieved based on the value of <code>publicationIndex</code> field. Error is set in case of an exception.
+     *  Delete a publication from the database. To-be-deleted publication is identified by the ID 
+     *  and is retrieved based on the value of <code>publicationIndex</code> field. The operation
+     *  is executed in a separate thread using the Task class.
+     *
+     *  In fact we are not deleting the publication, we just set the delete flag and update the record.
+     *
+     *  @return instance of the Task with the long running operation (deleting data)
      */
-    public void deletePublication() {
-        final SwingWorker worker = new SwingWorker() {
-            public Object construct() {
-                // Operation not finished yet
-                done = false;
-                try {
-                    // Execute query                    
-                    Publication pub = (Publication)data.get(getPublicationIndex());
-                    pub.setDeleted(1);
-                    database.executeUpdate(pub);
-                } catch (DBLayerException e) {
-                    // Log and set an error
-                    logger.error("Deleting publication failed. Unable to execute delete query.");
-                    setError(ERROR_DELETE);
-                    // Set operation state to finished
-                    done = true;
-                    return false;
-                } catch(RemoteException e) {
-                    System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-                }
+    public Task deletePublication() {
+        // Create new Task
+        final Task task = new Task() {
+            public Object task() throws Exception {
+                Publication pub = (Publication)data.get(getPublicationIndex());
+                // Set deleted flag of the publication
+                pub.setDeleted(1);
+                // Execute DB query                
+                database.executeUpdate(pub);
                 logger.info("Publication "+collectionName+" deleted succesfully");
-                // Execute publication search - required in order to display up-to-date data in the table of publications
-                searchPublication();
-                // Set operation state to finished
-                done = true;
+                // Stop the Task
+                fireStopped(null);
                 return true;
             }
         };
-        worker.start();
+        return task;
     }
-
+    
     /**
-     *  Update publication in the database. To-be-updated publication is stored in <code>editPublication</code> field. Operation 
-     *  is executed in a separate thread using <code>SwingWorker</code>. Error is set in case of an exception.
-     */    
-    public void editPublication() {
-        final SwingWorker worker = new SwingWorker() {
-            public Object construct() {
-                // The operation is not finished yet
-                done = false;
+     *  Update publication in the database. To-be-updated publication is stored in 
+     *  <code>editPublication</code> field. Operation is executed in a separate thread using 
+     *  the Task class.
+     *
+     *  @return instance of the Task with the long running operation (updating data)
+     */
+    public Task editPublication() {
+        // Create the Task
+        final Task task = new Task() {
+            public Object task() throws Exception {
+                boolean first = true;
+                // Construct Refernce citation
+                StringBuffer refCitation = new StringBuffer();
+                if ((journalAuthor != null) && (!journalAuthor.equals(""))) {
+                    first = false;
+                    refCitation.append(journalAuthor);
+                }
+                if (publicationYear != null) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(publicationYear);
+                }
+                if ((journalName != null) && (!journalName.equals(""))) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(journalName);
+                }
+                if ((collectionName != null) && (!collectionName.equals(""))) {
+                    if (first == false) {
+                        refCitation.append(", ");
+                    }
+                    refCitation.append(collectionName);
+                }
                 // Update to-be-updated publication based on user input
                 Publication publication = getEditPublication();
                 publication.setCollectionName(collectionName);
                 publication.setCollectionYearPublication(publicationYear);
                 publication.setJournalName(journalName);
                 publication.setJournalAuthorName(journalAuthor);
-                publication.setReferenceCitation(referenceCitation);
+                publication.setReferenceCitation(refCitation.toString());
                 publication.setReferenceDetail(referenceDetail);
                 publication.setUrl(url);
                 publication.setNote(note);
-                try {
-                    // Execute query
-                    database.executeUpdate(publication);
-                } catch (DBLayerException e) {
-                    // Log and set an error
-                    logger.error("Update publication failed. Unable to execute update query");
-                    setError(ERROR_UPDATE);
-                    // Set operation state to finished
-                    done = true;
-                    return false;
-                } catch(RemoteException e) {
-                    System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-                }
+                // Clear variables with publication properties
+                clearDataHolders();
+                // Execute query
+                database.executeUpdate(publication);
                 logger.info("Publication "+collectionName+" updated successfuly.");
-                if (isResultAvailable()) {
-                    searchPublication();
-                }
-                done = true;
+                // Stop the Task
+                fireStopped(null);
                 return true;
             }
         };
-        worker.start();        
+        return task;
     }
     
     /**
-     *  Search for publications in the database. Criteria for search are stored in data fields of this class.
-     *  Operation is executed in a separate thread using <code>SwingWorker</code>. Error is set in case of an exception
+     *  Search for publications in the database. Criteria for search are stored in data fields of 
+     *  this class. Operation might be executed in a separate thread using the Task class (depends
+     *  on the input parameters). the reason for this is that we are sometimes executing search from
+     *  another long running operation, teherefore we do not need a new thread.
+     *
+     *  @param createTask tells whether to execute search in a separate thread
+     *  @return instance of the Task with the long running operation (searching data)
      */
-    public void searchPublication() {
-        final SwingWorker worker = new SwingWorker() {
-            public Object construct() {
-                // Operation not finished yet
-                done = false;
-                SelectQuery query;
-                try {
-                    // Create new Select query                    
-                    query = database.createQuery(Publication.class);                    
-                    // Add given restrictions (WHERE clause)
-                    query.addRestriction(PlantloreConstants.RESTR_EQ, Publication.DELETED, null, 0, null);
-                    if ((searchCollectionName != null) && (searchCollectionName != ""))
-                        query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.COLLECTIONNAME, null, "%" + searchCollectionName + "%", null);
-                    if ((searchJournalName != null) && (searchJournalName != ""))
-                        query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.JOURNALNAME, null, "%" + searchJournalName + "%", null);
-                    if ((searchReferenceCitation != null) && (searchReferenceCitation != ""))
-                        query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.REFERENCECITATION, null, "%" + searchReferenceCitation + "%", null);
-                    if ((searchReferenceDetail != null) && (searchReferenceDetail != null))
-                        query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.REFERENCEDETAIL, null, "%" + searchReferenceDetail + "%", null);
-                    String field;
-                    // Add ORDER BY clause
-                    switch (sortField) {
-                        case 1: field = Publication.COLLECTIONNAME;
-                                break;
-                        case 2: field = Publication.COLLECTIONYEARPUBLICATION;
-                                break;
-                        case 3: field = Publication.JOURNALNAME;
-                                break;
-                        case 4: field = Publication.JOURNALAUTHORNAME;
-                                break;
-                        case 5: field = Publication.REFERENCECITATION;
-                                break;
-                        case 6: field = Publication.REFERENCEDETAIL;
-                                break;
-                        default:field = Publication.COLLECTIONNAME;
-                    }
-                    
-                    if (sortDirection == 0) {
-                        query.addOrder(PlantloreConstants.DIRECT_ASC, field);
-                    } else {
-                        query.addOrder(PlantloreConstants.DIRECT_DESC, field);
-                    }
-                    int resultId = 0;
-                    try {
-                        // Execute query
-                        resultId = database.executeQuery(query);
-                    } catch (DBLayerException e) {
-                        // Log and set an error
-                        logger.error("Searching publications failed. Unable to execute search query.");
-                        setError(ERROR_SEARCH);
-                    } finally {
-                        // Set operation state to finished
-                        done = true;
-                        logger.info("Publications successfuly retrieved from the database");
-                        // Save the results
-                        setResult(resultId);
-                    }
+    public Task searchPublication(boolean createTask) {
+        // Use the Task class to execute the search in a new thread
+        if (createTask) {
+            final Task task = new Task() {
+                public Object task() throws Exception {
+                    // Search the data
+                    int resultId = search();
+                    setResult(resultId);
+                    logger.info("Publications successfuly retrieved from the database");
+                    // Stop the Task
+                    fireStopped(null);
                     return resultId;
-                } catch (RemoteException e) {
-                    System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-                    return null;
-                } catch (DBLayerException e) {
-                    System.err.println("Kdykoliv se pracuje s DBLayer nebo SelectQuery, musite hendlovat RemoteException");
-                    return null;
                 }
+            };
+            return task;
+        } else {
+            // Do not use Task
+            try {
+                int resultId = search();
+                setResult(resultId);
+            } catch (DBLayerException ex1) {
+                // ???
+            } catch (RemoteException ex2) {
+                // ???
             }
-        };
-        worker.start();
+            logger.info("Publications successfuly retrieved from the database");
+            return null;
+        }
     }
     
     /**
-     * Checks whether an error is set. If yes, notifies observers to display it.
-     * Finally unsets the error flag.
+     *  Method to construct and execute the search query.
      *
-     * @return <code>true</code> if an error was set (and observers were notified), <code>false</code> otherwise
+     *  @return id identifying the search result
+     *  @throws DBLayerException in case search failed
+     *  @throws RemoteException in case network communication failed
      */
-    public boolean processErrors() {
-        if (this.error != null) {
-            setChanged();
-            notifyObservers();
-            this.error = null;
-            return true;
+    private Integer search() throws DBLayerException, RemoteException {
+        SelectQuery query;
+        // Create new Select query
+        query = database.createQuery(Publication.class);
+        // Add given restrictions (WHERE clause)
+        query.addRestriction(PlantloreConstants.RESTR_EQ, Publication.DELETED, null, 0, null);
+        if ((searchCollectionName != null) && (searchCollectionName != ""))
+            query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.COLLECTIONNAME, null, "%" + searchCollectionName + "%", null);
+        if ((searchJournalName != null) && (searchJournalName != ""))
+            query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.JOURNALNAME, null, "%" + searchJournalName + "%", null);
+        if ((searchReferenceCitation != null) && (searchReferenceCitation != ""))
+            query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.REFERENCECITATION, null, "%" + searchReferenceCitation + "%", null);
+        if ((searchReferenceDetail != null) && (searchReferenceDetail != null))
+            query.addRestriction(PlantloreConstants.RESTR_ILIKE, Publication.REFERENCEDETAIL, null, "%" + searchReferenceDetail + "%", null);
+        String field;
+        // Add ORDER BY clause
+        switch (sortField) {
+            case 1: field = Publication.COLLECTIONNAME;
+            break;
+            case 2: field = Publication.COLLECTIONYEARPUBLICATION;
+            break;
+            case 3: field = Publication.JOURNALNAME;
+            break;
+            case 4: field = Publication.JOURNALAUTHORNAME;
+            break;
+            case 5: field = Publication.REFERENCECITATION;
+            break;
+            case 6: field = Publication.REFERENCEDETAIL;
+            break;
+            default:field = Publication.COLLECTIONNAME;
         }
+        // Add the direction of searching
+        if (sortDirection == 0) {
+            query.addOrder(PlantloreConstants.DIRECT_ASC, field);
+        } else {
+            query.addOrder(PlantloreConstants.DIRECT_DESC, field);
+        }
+        int resultId = 0;
+        // Execute query
+        resultId = database.executeQuery(query);
+        return resultId;
+    }
+      
+    public void reloadCache() {
+        // Notify observers about the change in the list of publications. Used to reload cached publications
+        setChanged();
+        notifyObservers(editTypeArray);        
+    }
+    
+    public boolean hasRights(int operation) {
+        String[] group;
+        SelectQuery sq;
+        int result;
+        Object[] resData;
+        ArrayList groupList;
+        User groupUser;
+        try {
+            // Administrator can add, edit and delete any record
+            if (database.getUserRights().getAdministrator() == 1) {
+                return true;
+            }
+            if (operation == ADD) {
+                if (database.getUserRights().getAdd() == 1) {
+                    return true;
+                } else {
+                    return false;
+                }
+            } else { // EDIT AND DELETE - the same rights apply
+                // Check whether the user can edit all the records
+                if (database.getUserRights().getEditAll() == 1) {
+                    return true;
+                }
+                // Check whether the user can edit the record through some other user
+                group = database.getUserRights().getEditGroup().split(",");
+                // We will need Publication that will be edited
+                Publication selectedPubl = (Publication)data.get(this.getPublicationIndex());
+                // Check whether someone in the group is an owner of the publication
+                for (int i=0;i<group.length;i++) {
+                    if (selectedPubl.getCreatedWho().getId().toString().equals(group[i])) {
+                        return true;
+                    }
+                }
+                // No rights to edit the record
+                return false;
+            }
+        } catch (RemoteException e) {
+            logger.error("Remote exception caught");
+        }
         return false;
     }
     
     /**
+     *  Clear the variables with publication properties
+     */
+    private void clearDataHolders() {
+        this.collectionName = null;
+        this.journalAuthor = null;
+        this.journalName = null;
+        this.note = null;
+        this.publicationYear = null;
+        this.referenceDetail = null;
+        this.url = null;
+    }
+    
+    /**
+     *  Method used to check whether it is ok to delete the publication. If there is an occurrence
+     *  linked to this publication, publication cannot be deleted.
+     *
+     *  @param index index of the selected publication in the list of publications
+     *  @return true if publication can be deleted, false otherwise
+     */
+    public boolean checkDelete(int index) {
+        SelectQuery sq;
+        int resId;
+        
+        // Get the selected publication
+        Publication publ = (Publication)data.get(index);
+        // Find out whether we can delete this publication
+        try {
+            sq = database.createQuery(Occurrence.class);
+            sq.addRestriction(PlantloreConstants.RESTR_EQ, Occurrence.PUBLICATION, null, publ, null);
+            sq.addRestriction(PlantloreConstants.RESTR_EQ, Occurrence.DELETED, null, 0, null);
+            resId = database.executeQuery(sq);
+            if (database.getNumRows(resId)>0) {
+                database.closeQuery(sq);
+                return false;
+            }
+            database.closeQuery(sq);
+        } catch (RemoteException e1) {
+            System.out.println("Handle the Remote exception");
+        } catch (DBLayerException e2) {
+            logger.error("Loading occurrences failed. Cannot determine whether publication can be deleted");
+            setError(this.ERROR_DELETE);
+        }        
+        return true;
+    }
+    
+    /**
      * Process results of a search query. Retrieves results using the database
      * management object (DBLayer) and stores them in the data field of the
      * class. Notifies observers about the changes. Sets an error in case of an
@@ -341,8 +455,6 @@
      */
     public void processResults(int from, int count) {
         if (this.resultId != 0) {
-            logger.info("Processing "+count+" results from "+from);
-            logger.debug("Rows in the result: "+getResultRows());
             // Find out how many rows we can retrieve - it cannot be more than number of rows in the result
             int to = Math.min(getResultRows(), from+count-1);
             if (to == 0) {
@@ -388,8 +500,9 @@
     }
     
     /**
-     *  Load fields with information about selected publication (specified by the value of <code>publicationIndex</code> field).
-     *  Notify observers about this change. This is used to load a form when editing publications.
+     *  Load fields with information about selected publication (specified by the value of 
+     *  <code>publicationIndex</code> field). Notify observers about this change. This is used 
+     *  to load a form when editing publications.
      */
     public void loadPublication() {
         Publication selectedPubl = (Publication)data.get(this.getPublicationIndex());
@@ -397,7 +510,6 @@
         this.setPublicationYear(selectedPubl.getCollectionYearPublication());
         this.setJournalName(selectedPubl.getJournalName());
         this.setJournalAuthor(selectedPubl.getJournalAuthorName());
-        this.setReferenceCitation(selectedPubl.getReferenceCitation());
         this.setReferenceDetail(selectedPubl.getReferenceDetail());
         this.setUrl(selectedPubl.getUrl());
         this.setNote(selectedPubl.getNote());
@@ -483,7 +595,7 @@
     }
     
     /**
-     *  Get index of currently selected publication. The index is used to locate publication 
+     *  Get index of currently selected publication. The index is used to locate publication
      *  record in the data field.
      *
      *  @return index of currently selected publication
@@ -493,7 +605,7 @@
     }
     
     /**
-     *  Set index of currently selected publication. The index is used to locate publication 
+     *  Set index of currently selected publication. The index is used to locate publication
      *  record in the data field.
      *
      *  @param index index of currently selected publication
@@ -519,7 +631,7 @@
     }
     
     /**
-     *  Get index of the first row currently displayed in the list of publications. This is an index 
+     *  Get index of the first row currently displayed in the list of publications. This is an index
      *  in the results returned by a search query.
      *
      *  @return index of the first row currently displayed in the list of publications
@@ -556,7 +668,7 @@
         }
         return false;
     }
-
+    
     /**
      *  Set publication we are going to edit in the add/edit publication dialog
      *  @param editPublication   Publication we are going to edit
@@ -568,7 +680,7 @@
     /**
      *  Get publication we are editing in the add/edit publication dialog
      *  @param editPublication   Publication we are editing
-     */    
+     */
     public Publication getEditPublication() {
         return this.editPublication;
     }
@@ -620,7 +732,7 @@
     public void setSearchReferenceDetail(String referenceDetail) {
         this.searchReferenceDetail = referenceDetail;
     }
-        
+    
     /**
      *  Get collection name.
      *  @return collection name for the publication
@@ -641,7 +753,7 @@
      *  Get year of collection publication.
      *  @return year of collection publication
      */
-    public int getPublicationYear() {
+    public Integer getPublicationYear() {
         return publicationYear;
     }
     
@@ -649,7 +761,7 @@
      *  Set year of collection publication.
      *  @param publicationYear year of collection publication
      */
-    public void setPublicationYear(int publicationYear) {
+    public void setPublicationYear(Integer publicationYear) {
         this.publicationYear = publicationYear;
     }
     
@@ -686,22 +798,6 @@
     }
     
     /**
-     *  Get the reference citation.
-     *  @return reference citation
-     */
-    public String getReferenceCitation() {
-        return referenceCitation;
-    }
-    
-    /**
-     *  Set the reference citation.
-     *  @param referenceCitation reference citation
-     */
-    public void setReferenceCitation(String referenceCitation) {
-        this.referenceCitation = referenceCitation;
-    }
-    
-    /**
      *  Get the reference detail.
      *  @return reference detail
      */

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManagerCtrl.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1,9 +1,3 @@
-/*
- * PublicationManagerCtrl.java
- *
- * Created on 15. leden 2006, 2:04
- *
- */
 
 package net.sf.plantlore.client.publications;
 
@@ -13,15 +7,19 @@
 import java.awt.event.FocusListener;
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
+import java.rmi.RemoteException;
+import javax.swing.JOptionPane;
 import net.sf.plantlore.common.*;
 import javax.swing.Timer;
+import net.sf.plantlore.common.exception.DBLayerException;
+import net.sf.plantlore.l10n.L10n;
 import org.apache.log4j.Logger;
 
 /**
  * Controller for the main PublicationManager dialog (part of the PublicationManager MVC).
  * 
  * @author Tomas Kovarik
- * @version 1.0 BETA, May 1, 2006
+ * @version 1.0, June 4, 2006
  */
 public class PublicationManagerCtrl {
     /** Instance of a logger */
@@ -30,12 +28,6 @@
     PublicationManager model;
     /** View of the PublicationManager MVC  */
     PublicationManagerView view;
-         
-    private Timer timerSearch;          // Used for periodic checking of the state of other thread
-    private Timer timerDelete;          // Used for periodic checking of the state of other thread    
-    private ProgressDialog progress;    // Dialog showing progressbar
-    /** Frequency of the timer used for periodic checking of the state of other threads */
-    private final int TIMER_FREQUENCY = 100;
     
     /**
      * Creates a new instance of PublicationManagerCtrl 
@@ -65,61 +57,35 @@
         view.rowsAddPropertyChangeListener(new RowsPropertyChangeListener());
         view.sortAddFocusListener(new SortComboFocusListener());
         view.sortDirectionAddFocusListener(new SortDirectionRadioFocusListener());
-        // Create a timer for search operation
-        timerSearch = new Timer(TIMER_FREQUENCY, new ActionListener() {
-            public void actionPerformed(ActionEvent evt) {
-                // Check whether the other thread is still running
-                if (model.isOperationDone() == true) {
-                    timerSearch.stop();                    
-                    progress.close();               // Close dialog with progress bar
-                    view.setDialogEnabled(true);    // Enable view dialog                
-                    // Check for errors which might have occured. If none occured, tell model to process the result
-                    if (model.processErrors() == false) {
-                        if (model.getResultRows() == 0) {
-                            view.showSearchInfoMessage();
-                        }
-                        model.setCurrentFirstRow(1);                                                    
-                        // Display first n rows (n = model.getDisplayRows())                        
-                        model.processResults(1, model.getDisplayRows());                        
-                    }
+        // Display all publication when Publication manager is opened using the Task
+        Task task = model.searchPublication(true);
+        ProgressBar progressBar = new ProgressBar(task, view, true) {
+            public void exceptionHandler(Exception ex) {
+                if (ex instanceof DBLayerException) {
+                    DBLayerException e = (DBLayerException)ex;
+                    JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                    logger.error(e+": "+e.getErrorInfo());
+                    getTask().stop();
+                    return;
                 }
-            }
-        });                
-        // Create a timer for delete operation
-        timerDelete = new Timer(TIMER_FREQUENCY, new ActionListener() {
-            public void actionPerformed(ActionEvent evt) {
-                // Check whether the other thread is still running
-                if (model.isOperationDone() == true) {
-                    timerDelete.stop();                    
-                    progress.close();               // Close dialog with progress bar
-                    view.setDialogEnabled(true);    // Enable view dialog                
-                    // Check for errors which might have occured. If none occured, tell model to process the result
-                    if (model.processErrors() == false) {
-                        // Update curent first row so that it is not greater than number of rows in the result
-                        // (this happens in case the last record in the list has been deleted and it was set as 
-                        // the current first row)
-                        if (model.getCurrentFirstRow() > model.getResultRows()) {                           
-                            int row = model.getCurrentFirstRow()-model.getDisplayRows();
-                            if (row < 1) {
-                                model.setCurrentFirstRow(1);                                
-                            } else {
-                                model.setCurrentFirstRow(row);                                                                
-                            }
-                        }
-                        // Update table with publications - remove deleted author                        
-                        model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());
-                    }
+                if (ex instanceof RemoteException) {
+                    RemoteException e = (RemoteException)ex;
+                    JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                    logger.error(e);
+                    getTask().stop();
+                    return;
                 }
+                JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                logger.error(ex);                            
+            }              
+            // After Task is finished, display the results
+            public void afterStopped(Object value) {
+                model.setCurrentFirstRow(1);
+                model.processResults(1, model.getDisplayRows());
             }
-        });   
-        // Display all publications when Publication manager is opened
-        model.searchPublication();
-        // Disable current view and run timer
-        view.setDialogEnabled(false);                                
-        timerSearch.start();                
-        // Display dialog with progress bar
-        progress = new ProgressDialog(view.getDialog(), true);
-        progress.show();        
+        };
+        progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+        task.start();
     }
     
     /**
@@ -137,6 +103,11 @@
      */    
     class AddPublicationButtonListener implements ActionListener {
         public void actionPerformed(ActionEvent e) {
+            // Check whether we have rights for this operation
+            if (!model.hasRights(model.ADD)) {
+                view.showErrorMessage("You don't have sufficient rights for this operation");
+                return;
+            }            
             // Display dialog for adding / editing publications. This dialog shares model with
             // the rest of the PublicationManager.
             AddPublicationView addPublView = new AddPublicationView(model, view.getFrame(), true);
@@ -160,13 +131,17 @@
                 view.selectRowMsg();
                 return;
             }          
+            // Check whether we have rights for this operation
+            if (!model.hasRights(model.EDIT)) {
+                view.showErrorMessage("You don't have sufficient rights for this operation");
+                return;
+            }                        
             AddPublicationView addPublView = new AddPublicationView(model, view.getFrame(), false);
             AddPublicationCtrl addPublCtrl = new AddPublicationCtrl(model, addPublView);            
-            // Save author we are going to edit
+            // Save publication we are going to edit
             model.setEditPublication(model.getSelectedPublication(index));            
             model.setPublicationIndex(index);
-            model.loadPublication();
-            // addPublView.setSize(400,450);        
+            model.loadPublication();            
             addPublView.setLocationRelativeTo(null);
             logger.info("Add Publication dialog opened for editing author");
             addPublView.setVisible(true);            
@@ -184,20 +159,54 @@
             if (index == -1) {
                 view.selectRowMsg();
                 return;
+            }        
+            // Check whether we have rights for this operation
+            if (!model.hasRights(model.DELETE)) {
+                view.showErrorMessage("You don't have sufficient rights for this operation");
+                return;
             }           
+            // Check whether it is OK to delete the publication (it cannot be used in an occurrence)
+            if (model.checkDelete(index) == false) {
+                view.showErrorMessage("This publication cannot be deleted because it is used in an occurence");
+                return;
+            }
+            System.out.println("********* CHECK DELETE OK");
             // Confirm deletion
             if (!view.confirmDelete()) {
                 return;
             }
             // Call delete
             model.setPublicationIndex(index);
-            model.deletePublication();
-            // Disable current view and run timer
-            view.setDialogEnabled(false);                    
-            timerDelete.start();                
-            // Display dialog with progress bar
-            progress = new ProgressDialog(view.getDialog(), true);
-            progress.show();                                                
+            // Delete is executed in a separate thread using Task
+            Task task = model.deletePublication();
+            ProgressBar progressBar = new ProgressBar(task, view, true) {
+                public void exceptionHandler(Exception ex) {
+                    if (ex instanceof DBLayerException) {
+                        DBLayerException e = (DBLayerException)ex;
+                        JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                        logger.error(e+": "+e.getErrorInfo());
+                        getTask().stop();
+                        return;
+                    }
+                    if (ex instanceof RemoteException) {
+                        RemoteException e = (RemoteException)ex;
+                        JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                        logger.error(e);
+                        getTask().stop();
+                        return;
+                    }
+                    JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                    logger.error(ex);                            
+                }              
+                // Refresh the list of publications after a delete
+                public void afterStopped(Object value) {
+                    model.searchPublication(false);
+                    model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());
+                    model.reloadCache();
+                }
+            };
+            progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+            task.start();
         }
     }    
 
@@ -206,15 +215,34 @@
      */    
     class SearchPublicationButtonListener implements ActionListener {
         public void actionPerformed(ActionEvent e) {
-            // Check whether at least one search field is non-empty
-            // Run DB search
-            model.searchPublication();
-            // Disable current view and run timer
-            view.setDialogEnabled(false);                                
-            timerSearch.start();                
-            // Display dialog with progress bar
-            progress = new ProgressDialog(view.getDialog(), true);
-            progress.show();                                   
+            // Run DB search. The operation is executed in a separate thread
+            Task task = model.searchPublication(true);
+            ProgressBar progressBar = new ProgressBar(task, view, true) {
+                public void exceptionHandler(Exception ex) {
+                    if (ex instanceof DBLayerException) {
+                        DBLayerException e = (DBLayerException)ex;
+                        JOptionPane.showMessageDialog(view,L10n.getString("Error.DBLayerException")+"\n"+e.getErrorInfo(),L10n.getString("Error.DBLayerExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                        logger.error(e+": "+e.getErrorInfo());
+                        getTask().stop();
+                        return;
+                    }
+                    if (ex instanceof RemoteException) {
+                        RemoteException e = (RemoteException)ex;
+                        JOptionPane.showMessageDialog(view,L10n.getString("Error.RemoteException")+"\n"+e.getMessage(),L10n.getString("Error.RemoteExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                        logger.error(e);
+                        getTask().stop();
+                        return;
+                    }
+                    JOptionPane.showMessageDialog(view,L10n.getString("Delete.Message.UnknownException")+"\n"+ex.getMessage(),L10n.getString("Delete.Message.UnkownExceptionTitle"),JOptionPane.WARNING_MESSAGE);
+                    logger.error(ex);                            
+                }              
+                // Display the results of a search
+                public void afterStopped(Object value) {
+                    model.processResults(model.getCurrentFirstRow(), model.getDisplayRows());
+                }
+            };
+            progressBar.setTitle(L10n.getString("Delete.ProgressTitle"));
+            task.start();
         }
     }        
     
@@ -244,8 +272,8 @@
     }    
     
     /**
-     *  Focus listener for the <strong>sort combobox</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model.
+     *  Focus listener for the <strong>sort combobox</strong> at the search panel. After losing focus 
+     *  automaticaly stores value of the field to model.
      */
     class SortComboFocusListener implements FocusListener {
         public void focusLost(FocusEvent e) {
@@ -258,8 +286,8 @@
     }    
     
     /**
-     *  Focus listener for the <strong>sort combobox</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model.
+     *  Focus listener for the <strong>sort combobox</strong> at the search panel. After losing focus 
+     *  automaticaly stores value of the field to model.
      */
     class SortDirectionRadioFocusListener implements FocusListener {
         public void focusLost(FocusEvent e) {
@@ -272,8 +300,8 @@
     }                
     
     /**
-     *  PropertyChange listener for the <strong>collection name field</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model object.
+     *  PropertyChange listener for the <strong>collection name field</strong> at the search panel. After losing focus 
+     *  automaticaly stores value of the field to model object.
      */
     class CollectionNameFieldPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
@@ -282,8 +310,8 @@
     }
 
     /**
-     *  PropertyChange listener for the <strong>journal name field</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model object.
+     *  PropertyChange listener for the <strong>journal name field</strong> at the search panel. After 
+     *  losing focus automaticaly stores value of the field to model object.
      */    
     class JournalNameFieldPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
@@ -292,8 +320,8 @@
     }    
 
     /**
-     *  PropertyChange listener for the <strong>reference citation field</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model object.
+     *  PropertyChange listener for the <strong>reference citation field</strong> at the search panel. After 
+     *  losing focus automaticaly stores value of the field to model object.
      */    
     class ReferenceCitationFieldPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
@@ -302,8 +330,8 @@
     }    
 
     /**
-     *  PropertyChange listener for the <strong>reference detail field</strong> at the search panel. After losing focus automaticaly 
-     *  stores value of the field to model object.
+     *  PropertyChange listener for the <strong>reference detail field</strong> at the search panel. 
+     *  After losing focus automaticaly stores value of the field to model object.
      */        
     class ReferenceDetailFieldPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
@@ -312,8 +340,8 @@
     }        
     
     /**
-     *  PropertyChange listener for the <strong>rows field</strong> with the number of records to display. After losing focus 
-     *  automaticaly stores value of the field to model object.
+     *  PropertyChange listener for the <strong>rows field</strong> with the number of records to 
+     *  display. After losing focus automaticaly stores value of the field to model object.
      */        
     class RowsPropertyChangeListener implements PropertyChangeListener {
         public void propertyChange(PropertyChangeEvent e) {
@@ -329,7 +357,6 @@
             // If neccessary reload search results
             if ((oldValue != view.getDisplayRows()) && (model.getDisplayRows() <= model.getResultRows())) {
                 model.processResults(model.getCurrentFirstRow(), view.getDisplayRows());
-                logger.debug("Search results reloaded. First row: "+model.getCurrentFirstRow()+"; Display rows: "+view.getDisplayRows());
             }
         }        
     }            

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.form	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.form	2006-06-05 23:33:50 UTC (rev 458)
@@ -29,13 +29,13 @@
           <Group type="102" attributes="0">
               <EmptySpace max="-2" attributes="0"/>
               <Group type="103" groupAlignment="0" attributes="0">
+                  <Component id="jPanel7" alignment="0" max="32767" attributes="2"/>
                   <Group type="102" alignment="0" attributes="1">
                       <Component id="helpBtn" min="-2" max="-2" attributes="0"/>
                       <EmptySpace pref="585" max="32767" attributes="0"/>
                       <Component id="closeBtn" min="-2" max="-2" attributes="0"/>
                   </Group>
                   <Component id="jPanel8" alignment="0" max="32767" attributes="1"/>
-                  <Component id="jPanel7" alignment="0" max="32767" attributes="2"/>
               </Group>
               <EmptySpace max="-2" attributes="0"/>
           </Group>
@@ -44,10 +44,10 @@
     <DimensionLayout dim="1">
       <Group type="103" groupAlignment="0" attributes="0">
           <Group type="102" alignment="1" attributes="0">
-              <Component id="jPanel7" max="32767" attributes="0"/>
+              <Component id="jPanel7" min="-2" max="-2" attributes="0"/>
               <EmptySpace max="-2" attributes="0"/>
               <Component id="jPanel8" min="-2" max="-2" attributes="0"/>
-              <EmptySpace min="-2" pref="17" max="-2" attributes="0"/>
+              <EmptySpace max="32767" attributes="0"/>
               <Group type="103" groupAlignment="3" attributes="0">
                   <Component id="helpBtn" alignment="3" min="-2" max="-2" attributes="0"/>
                   <Component id="closeBtn" alignment="3" min="-2" max="-2" attributes="0"/>
@@ -72,41 +72,37 @@
       <Layout>
         <DimensionLayout dim="0">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Group type="102" alignment="0" attributes="0">
-                  <EmptySpace max="-2" attributes="0"/>
+              <Group type="102" attributes="0">
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" attributes="0">
                       <Component id="jScrollPane3" alignment="0" pref="755" max="32767" attributes="0"/>
                       <Group type="102" alignment="0" attributes="0">
                           <Component id="previousBtn" min="-2" pref="107" max="-2" attributes="0"/>
-                          <EmptySpace max="-2" attributes="0"/>
+                          <EmptySpace min="-2" max="-2" attributes="0"/>
                           <Component id="totalResultLabel2" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace max="-2" attributes="0"/>
+                          <EmptySpace min="-2" max="-2" attributes="0"/>
                           <Component id="totalRowsLabel" min="-2" max="-2" attributes="0"/>
                           <EmptySpace min="-2" pref="37" max="-2" attributes="0"/>
                           <Component id="toDisplayedLabel2" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace min="-2" max="-2" attributes="0"/>
+                          <Component id="rowsField" min="-2" pref="36" max="-2" attributes="0"/>
+                          <EmptySpace min="-2" pref="89" max="-2" attributes="0"/>
+                          <Component id="displayedLabel2" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
-                          <Group type="103" groupAlignment="0" attributes="0">
-                              <Group type="102" attributes="0">
-                                  <EmptySpace max="-2" attributes="0"/>
-                                  <Component id="addBtn" min="-2" pref="121" max="-2" attributes="1"/>
-                                  <EmptySpace max="-2" attributes="0"/>
-                                  <Component id="editBtn" min="-2" pref="130" max="-2" attributes="0"/>
-                                  <EmptySpace max="32767" attributes="0"/>
-                                  <Component id="deleteBtn" min="-2" pref="136" max="-2" attributes="1"/>
-                              </Group>
-                              <Group type="102" alignment="0" attributes="0">
-                                  <Component id="rowsField" min="-2" pref="36" max="-2" attributes="0"/>
-                                  <EmptySpace min="-2" pref="89" max="-2" attributes="0"/>
-                                  <Component id="displayedLabel2" min="-2" max="-2" attributes="0"/>
-                                  <EmptySpace max="-2" attributes="0"/>
-                                  <Component id="displayedLabel" pref="97" max="32767" attributes="0"/>
-                                  <EmptySpace max="-2" attributes="0"/>
-                                  <Component id="nextBtn" min="-2" max="-2" attributes="1"/>
-                              </Group>
-                          </Group>
+                          <Component id="displayedLabel" pref="97" max="32767" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="nextBtn" min="-2" max="-2" attributes="1"/>
                       </Group>
+                      <Group type="102" alignment="1" attributes="0">
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="addBtn" min="-2" pref="111" max="-2" attributes="3"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="editBtn" min="-2" pref="113" max="-2" attributes="1"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="deleteBtn" min="-2" pref="136" max="-2" attributes="1"/>
+                      </Group>
                   </Group>
-                  <EmptySpace max="-2" attributes="0"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>
@@ -114,7 +110,7 @@
           <Group type="103" groupAlignment="0" attributes="0">
               <Group type="102" alignment="1" attributes="0">
                   <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jScrollPane3" pref="249" max="32767" attributes="0"/>
+                  <Component id="jScrollPane3" pref="191" max="32767" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="3" attributes="0">
                       <Component id="previousBtn" alignment="3" min="-2" max="-2" attributes="0"/>
@@ -128,11 +124,11 @@
                   </Group>
                   <EmptySpace min="-2" pref="15" max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="3" attributes="0">
+                      <Component id="deleteBtn" alignment="3" min="-2" max="-2" attributes="0"/>
                       <Component id="editBtn" alignment="3" min="-2" pref="23" max="-2" attributes="0"/>
                       <Component id="addBtn" alignment="3" min="-2" max="-2" attributes="0"/>
-                      <Component id="deleteBtn" alignment="3" min="-2" max="-2" attributes="0"/>
                   </Group>
-                  <EmptySpace max="-2" attributes="0"/>
+                  <EmptySpace min="-2" max="-2" attributes="0"/>
               </Group>
           </Group>
         </DimensionLayout>

Modified: trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/client/publications/PublicationManagerView.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1,8 +1,3 @@
-/*
- * PublicationManagerView.java
- *
- * Created on 30. duben 2006, 14:58
- */
 
 package net.sf.plantlore.client.publications;
 
@@ -23,10 +18,11 @@
 import net.sf.plantlore.l10n.L10n;
 
 /**
- * Main dialog of the PublicationManager used for searching publications and displaying the search results.
+ * Main dialog of the PublicationManager used for searching publications and displaying the 
+ * search results.
  * 
  * @author Tomas Kovarik
- * @version 1.0 BETA, May 1, 2006
+ * @version 1.0, June 4, 2006
  */
 public class PublicationManagerView extends javax.swing.JDialog implements Observer {
     /** Model of the PublicationManager MVC */
@@ -50,6 +46,7 @@
         this.model = model;
         this.model.addObserver(this);
         initComponents();
+        // Initialize help
         PlantloreHelp.addKeyHelp(PlantloreHelp.PUBLICATION_MANAGER, this.getRootPane());
         PlantloreHelp.addButtonHelp(PlantloreHelp.PUBLICATION_MANAGER, this.helpBtn);        
         // Center the dialog on the screen
@@ -154,29 +151,27 @@
                         .add(37, 37, 37)
                         .add(toDisplayedLabel2)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(jPanel7Layout.createSequentialGroup()
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                                .add(addBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                                .add(editBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                                .add(deleteBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
-                            .add(jPanel7Layout.createSequentialGroup()
-                                .add(rowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                                .add(89, 89, 89)
-                                .add(displayedLabel2)
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                                .add(displayedLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
-                                .add(nextBtn)))))
+                        .add(rowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                        .add(89, 89, 89)
+                        .add(displayedLabel2)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(displayedLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(nextBtn))
+                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(addBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(editBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
+                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                        .add(deleteBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                 .addContainerGap())
         );
         jPanel7Layout.setVerticalGroup(
             jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
+                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(previousBtn)
@@ -189,9 +184,9 @@
                     .add(rowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                 .add(15, 15, 15)
                 .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
+                    .add(deleteBtn)
                     .add(editBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                    .add(addBtn)
-                    .add(deleteBtn))
+                    .add(addBtn))
                 .addContainerGap())
         );
 
@@ -315,21 +310,21 @@
             .add(layout.createSequentialGroup()
                 .addContainerGap()
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
+                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .add(layout.createSequentialGroup()
                         .add(helpBtn)
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 585, Short.MAX_VALUE)
                         .add(closeBtn))
-                    .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
+                    .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                 .addContainerGap())
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
-                .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
-                .add(17, 17, 17)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                     .add(helpBtn)
                     .add(closeBtn))
@@ -339,8 +334,8 @@
     }// </editor-fold>//GEN-END:initComponents
         
     /**
-     *  Check whether the given field is emty or not. This is used for validating user input when searching
-     *  publications.
+     *  Check whether the given field is empty or not. This is used for validating user input when 
+     *  searching publications.
      *
      *  @param field field we want to check
      *  @return true if the field is empty, false otherwise
@@ -412,10 +407,15 @@
      */
     public void displayResults(ArrayList results) {
         this.tableData = new String[results.size()][];
+        System.out.println("Displaying data. Data length: "+this.tableData.length);        
         for (int i=0;i<results.size();i++) {            
             this.tableData[i] = new String[7];
             this.tableData[i][0] = ((Publication)results.get(i)).getCollectionName();
-            this.tableData[i][1] = ((Publication)results.get(i)).getCollectionYearPublication()+"";
+            if (((Publication)results.get(i)).getCollectionYearPublication() == null) {
+                this.tableData[i][1] = new String("");
+            } else {
+                this.tableData[i][1] = ((Publication)results.get(i)).getCollectionYearPublication().toString();
+            }
             this.tableData[i][2] = ((Publication)results.get(i)).getJournalName();
             this.tableData[i][3] = ((Publication)results.get(i)).getJournalAuthorName();
             this.tableData[i][4] = ((Publication)results.get(i)).getReferenceCitation();

Modified: trunk/src/net/sf/plantlore/common/ProgressBar.java
===================================================================
--- trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/common/ProgressBar.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -33,7 +33,7 @@
     private Task task;
     private int statusFieldWidth;
     private double charSizeApprox = 180/27; //in 180 pixel wide JTextField first 27 characters are visible in Matisse
-    private Frame parent;
+    private Window parent;
     
     /** Creates a new progress bar, initially invisible. It becomes visible after it receives
      * a STARTING Message from the Task.
@@ -48,6 +48,18 @@
         
         this.parent = parent;
         this.task = task;
+        initialize();
+    }
+    
+    public ProgressBar(Task task, javax.swing.JDialog parent, boolean modal) {
+        super(parent, modal);
+
+        this.parent = parent;
+        this.task = task;        
+        initialize();        
+    }    
+   
+    private void initialize() {
         logger = Logger.getLogger(this.getClass().getPackage().getName());
         initComponents();
         
@@ -64,7 +76,7 @@
         setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
         parent.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
         
-        task.addObserver(this);
+        task.addObserver(this);    
     }
     
     /** This method is called from within the constructor to

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-05 22:26:44 UTC (rev 457)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-06-05 23:33:50 UTC (rev 458)
@@ -1193,6 +1193,10 @@
                 if (aut.getCreatedWho().getId().equals(this.plantloreUser.getId())) {
                     equal = true;
                 }
+                // Check EDITALL privilege
+                if (this.plantloreUser.getRight().getEditAll() == 1) {
+                    equal = true;
+                }                                                                
                 // Then check for indirect (group) ownership
                 if (this.rights.getEditGroup() != null) {
                     String[] group = this.rights.getEditGroup().split(",");
@@ -1302,8 +1306,11 @@
                 if (this.plantloreUser.getRight().getAdministrator() == 1) {
                     equal = true;
                 }                
+                if (this.plantloreUser.getRight().getEditAll() == 1) {
+                    equal = true;
+                }                                
                 // Then check for indirect (group) ownership
-                if (this.rights.getEditGroup() != null) {                
+                if (this.rights.getEditGroup() != null) {   
                     String[] group = this.rights.getEditGroup().split(",");
                     String strId = pub.getCreatedWho().getId().toString();
                     for (int i=0;i<group.length;i++) {
@@ -1358,6 +1365,10 @@
                 if (this.plantloreUser.getRight().getAdministrator() == 1) {
                     equal = true;
                 }
+                // Check EDITALL privilege
+                if (this.plantloreUser.getRight().getEditAll() == 1) {
+                    equal = true;
+                }                                                
                 // Then check for indirect (group) ownership
                 if (this.rights.getEditGroup() != null) {                
                     String[] group = this.rights.getEditGroup().split(",");
@@ -1430,6 +1441,10 @@
                 if (this.plantloreUser.getRight().getAdministrator() == 1) {
                     equal = true;
                 }
+                // Check EDITALL privilege
+                if (this.plantloreUser.getRight().getEditAll() == 1) {
+                    equal = true;
+                }                                                                
                 // Then check for indirect (group) ownership
                 if (this.rights.getEditGroup() != null) {                
                     String[] group = this.rights.getEditGroup().split(",");
@@ -1487,6 +1502,10 @@
                 if (this.plantloreUser.getRight().getAdministrator() == 1) {
                     equal = true;
                 }
+                // Check EDITALL privilege
+                if (this.plantloreUser.getRight().getEditAll() == 1) {
+                    equal = true;
+                }                                                                
                 // Then check for indirect (group) ownership
                 if (this.rights.getEditGroup() != null) {                
                     String[] group = this.rights.getEditGroup().split(",");



From fraktalek at berlios.de  Tue Jun  6 10:17:27 2006
From: fraktalek at berlios.de (fraktalek at berlios.de)
Date: Tue, 6 Jun 2006 10:17:27 +0200
Subject: [Plantlore-dev] r459 - trunk/src/net/sf/plantlore/client
Message-ID: <200606060817.k568HRxN021093@sheep.berlios.de>

Author: fraktalek
Date: 2006-06-06 10:17:27 +0200 (Tue, 06 Jun 2006)
New Revision: 459

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
Log:
Display detail on double-click not on a single click.



Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-05 23:33:50 UTC (rev 458)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-06-06 08:17:27 UTC (rev 459)
@@ -1313,6 +1313,7 @@
 
 	class OverviewMouseListener implements MouseListener {
 		public void mouseClicked(MouseEvent e) {
+                    if (e.getClickCount() >= 2)
                     try {
                         int resultNumber = model.getSelectedResultNumber();
                         if (resultNumber != model.getResultsCount())



From krater at berlios.de  Tue Jun  6 11:10:00 2006
From: krater at berlios.de (krater at berlios.de)
Date: Tue, 6 Jun 2006 11:10:00 +0200
Subject: [Plantlore-dev] r460 - in trunk/src/net/sf/plantlore/client/export: . builders
Message-ID: <200606060910.k569A0kg025614@sheep.berlios.de>

Author: krater
Date: 2006-06-06 11:09:59 +0200 (Tue, 06 Jun 2006)
New Revision: 460

Modified:
   trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java
   trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java
Log:
XMLBuilder respects the list of selected columns now (somehow forgotten and overlooked for several revisions).

Modified: trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java	2006-06-06 08:17:27 UTC (rev 459)
+++ trunk/src/net/sf/plantlore/client/export/ExportMngCtrlB.java	2006-06-06 09:09:59 UTC (rev 460)
@@ -29,8 +29,8 @@
 		public void actionPerformed(ActionEvent arg0) {
 			Template t = view.tsm.getTemplate();
 			view.setVisible(false);
-			view.tsm.clearSelection();
 			
+			
 			try {
 				model.setTemplate( t ); // Set the new template.
 				
@@ -41,6 +41,8 @@
 				task.execute();
 				
 				progressView.setVisible(true);
+				
+				view.tsm.clearSelection();
 			}
 			catch(Exception e) {
 				JOptionPane.showMessageDialog(view,

Modified: trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java
===================================================================
--- trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java	2006-06-06 08:17:27 UTC (rev 459)
+++ trunk/src/net/sf/plantlore/client/export/builders/XMLBuilder.java	2006-06-06 09:09:59 UTC (rev 460)
@@ -89,21 +89,35 @@
      * @param father	Father element of the currently processed <code>record</code>.
      * @param record	Part of the whole record corresponding to a certain table in the database.
      */
-    protected void decompose(Element father, Record record) 
+    protected boolean decompose(Element father, Record record) 
     throws IOException {
-    	if(record == null) return;
-    	Element current = father.addElement(record.getClass().getSimpleName().toLowerCase());
+    	if(record == null) 
+    		return false;
+    	
+    	Class table = record.getClass();
+    	Element current = father.addElement(table.getSimpleName().toLowerCase());
     	// Every occurrence may have 0..N associated AuthorOccurrences.
     	if(record instanceof Occurrence) 
     		occurrence = current;
     	
-    	for( String property : record.getProperties() ) {
-    		String value = record.getValue(property) == null ? "" : record.getValue(property).toString();
-    		current.addElement(property.toLowerCase()).setText(value);
+    	boolean hasAtLeastOneProperty = false;
+    	
+    	for( String property : record.getProperties() )
+    		if( template.isSet(table, property) ) {
+    			Object value = record.getValue(property);
+    			current.addElement(property.toLowerCase()).setText(value == null ? "" : value.toString());
+    			hasAtLeastOneProperty = true;
+    		}
+    	
+    	// Decompose all subrecords of this record.
+    	for(String key : record.getForeignKeys()) {
+    		hasAtLeastOneProperty =  decompose( current, (Record) record.getValue(key) ) || hasAtLeastOneProperty;
     	}
-    	// Decompose all subrecords of this record.
-    	for(String key : record.getForeignKeys())
-    		decompose( current, (Record) record.getValue(key) );
+    	
+    	if( !hasAtLeastOneProperty )
+    		current.detach();
+    	
+    	return hasAtLeastOneProperty;
     }
 
 	@Override



From lada at berlios.de  Tue Jun  6 11:56:47 2006
From: lada at berlios.de (lada at berlios.de)
Date: Tue, 6 Jun 2006 11:56:47 +0200
Subject: [Plantlore-dev] r461 - trunk/src/net/sf/plantlore/client
Message-ID: <200606060956.k569ulUh029009@sheep.berlios.de>

Author: lada
Date: 2006-06-06 11:56:46 +0200 (Tue, 06 Jun 2006)
New Revision: 461

Added:
   trunk/src/net/sf/plantlore/client/Transformation.java
Log:
Transformation of coordinate between WGS-84, S-JTSK and S-42. More tests are necessary.

Added: trunk/src/net/sf/plantlore/client/Transformation.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Transformation.java	2006-06-06 09:09:59 UTC (rev 460)
+++ trunk/src/net/sf/plantlore/client/Transformation.java	2006-06-06 09:56:46 UTC (rev 461)
@@ -0,0 +1,795 @@
+/*
+ * Transformation.java
+ *
+ * Created on 4. ?erven 2006, 0:46
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.client;
+
+import org.apache.log4j.Logger;
+
+/**
+ *
+ * Zdroj: 
+ * Converting between grid eastings and northings and ellipsoidal latititude and longitude. http://www.gps.gov.uk/guidec.asp.
+ * Hrdina, Z.: P?epo?et z S-JTSK do WGS-84. 2002. http://gpsweb.cz/JTSK-WGS.htm.
+ * Hrdina, Z.: Transformace sou?adnic ze syst?mu WGS-84 do syst?mu S-JTSK. Praha: ?VUT, 1997. http://www.geospeleos.com/Mapovani/WGS84toSJTSK/WGS_JTSK.pdf. 
+ * Transformace souradnic WGS84<-->-JTSK<-->S42 http://astro.mff.cuni.cz/mira/sh/sh.php  
+ *
+ * @author Lada Oberreiterova
+ */
+public class Transformation {
+    
+    private Logger logger;    
+    
+    private Double latitude;
+    private Double longitude;
+    private Double altitude;
+    private Double latitudeRAD;
+    private Double longitudeRAD;
+    private Double x;
+    private Double y;
+    private Double z;
+    private String coordinateSystem;
+    
+    public static final String WGS84 = "WGS84";
+    public static final String SJTSK = "S-JTSK";
+    public static final String S42 = "S-42";
+    
+    //A = velka poloosa zplosteneho elipsoidu
+    //F = zplosteni elipsoidu
+    public static final Double ELIPSOID_WGS84_A = 6378137.0;
+    public static final Double ELIPSOID_WGS84_F = 298.257223563;
+    public static final Double ELIPSOID_BESSEL_A = 6377397.15508;
+    public static final Double ELIPSOID_BESSEL_F = 299.152812853;    
+    public static final Double ELIPSOID_KRAJOVSKIJ_A = 6378245.0;;
+    public static final Double ELIPSOID_KRAJOVSKIJ_F = 298.3;    
+    
+    /**
+     * 
+     * Creates a new instance of Transformation 
+     * 
+     * 
+     * @param latitude
+     * @param longitude
+     * @param altitude
+     * @param coordinateSystem
+     */
+    public Transformation() {
+        
+        logger = Logger.getLogger(this.getClass().getPackage().getName());	                
+        
+    }
+    
+    
+     public static void main(String[] args) {
+            Transformation tr = new Transformation();
+            System.out.println("********************WGS84 --> S-JTSK**************************");
+            Double[] coordinate_SJTSK = tr.transform_WGS84_to_SJTSK(50.465555, 14.3986, 289.155);
+            System.out.println("******************** S-JTSK --> WGS84 **************************");
+            Double[] coordinate_WGS84 = tr.transform_SJTSK_to_WGS84(coordinate_SJTSK[0], coordinate_SJTSK[1], 244.6);
+     }
+         
+    //**********************************************************************************************//
+    //**********************************  WGS-84  <---> S-JTSK ************************************//
+    //*********************************************************************************************//
+    /**
+     * Helmertova transformace (podm?nka "min max") 
+     * 
+     *  WGS-84 pou??v? elipsoid WGS-84, kde?to S-JTSK pou??v? elipsoid Basse?v (Elipsoidy se s r?znou p?esnost? p?ibli?uj? 
+     * zobecn?n?mu fyzik?ln?mu tvaru Zem? - geoidu). 
+     *
+     *  Transformace z WGS84 do S-JTSK m? dv? ??sti:
+     *  1. transformace elipsoidu WGS84 na Bessel?v elipsoid
+     *  2. transformace z Besselova elipsoidu do kart?zsk?ho sou?. syst?mu S-JTSK 
+     *
+     *  vraci JTSK sou?adnice pro zadanou severn? ???ku a v?chodn? d?lku - zm??enou GPS v sou?adn?m syst?mu elipsoidu WGS84
+     * 
+     */
+    
+    public Double[] transform_WGS84_to_SJTSK(Double latitude, Double longitude, Double altitude) {
+        
+        //Transformace elipsoidu WGS84 na Bessel?v elipsoid.
+        //WGS84 - transform latitude and longitude from degree to radiant format
+        Double[] geodeticCoordinateRAD_WGS = degreeToRadiant(latitude, longitude);   
+        System.out.println("from " + latitude + " toRadian: " + geodeticCoordinateRAD_WGS[0]);
+        System.out.println("from " + longitude + " toRadian: " + geodeticCoordinateRAD_WGS[1] + "\n"); 
+        //WGS84 - vypocet pravouhlych souradnic z geodetickych souradnic
+        Double[] cartesianCoordinate_WGS = WGS84_BLH_xyz(geodeticCoordinateRAD_WGS[0], geodeticCoordinateRAD_WGS[1], altitude); 
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[0]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[1]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[2] + "\n");
+        //transformace prostorov?ch pravo?hl?ch sou?adnic do syst?mu S-JTSK
+        Double[] cartesianCoordinate_SJTSK = transformation_WGS84_SJTSK_xyz_xyz(cartesianCoordinate_WGS[0], cartesianCoordinate_WGS[1], cartesianCoordinate_WGS[2]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate_SJTSK[0]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate_SJTSK[1]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate_SJTSK[2] + "\n");
+        //S-JTSK - vypocet geodetickych souradnic z pravouhlych souradnic
+        Double[] geodeticCoordinateRAD_SJTSK = bessel_xyz_BLH(cartesianCoordinate_SJTSK[0], cartesianCoordinate_SJTSK[1], cartesianCoordinate_SJTSK[2]);      
+        System.out.println("SJTSK - geodeticke souradnice RAD: " + geodeticCoordinateRAD_SJTSK[0]);
+        System.out.println("SJTSK - geodeticke souradnice RAD: " + geodeticCoordinateRAD_SJTSK[1]);
+        System.out.println("SJTSK - geodeticke souradnice altitude: " + geodeticCoordinateRAD_SJTSK[2] + "\n");        
+        //S-JTSK - transform latitude and longitude from radiant to degree format
+        Double[] latLong = radiantToDegree(geodeticCoordinateRAD_SJTSK[0], geodeticCoordinateRAD_SJTSK[1]);
+        System.out.println("SJTSK - geodeticke souradnice: " + latLong[0]);
+        System.out.println("SJTSK - geodeticke souradnice: " + latLong[1]);
+        System.out.println("SJTSK - geodeticke souradnice altitude: " + geodeticCoordinateRAD_SJTSK[2] + "\n");        
+              
+        Double[] planarCoordinate = krovak_BLH_xy(latLong[0], latLong[1], geodeticCoordinateRAD_SJTSK[2]);               
+        System.out.println("SJTSK - planar souradnice: " + planarCoordinate[0]);
+        System.out.println("SJTSK - planar souradnice: " + planarCoordinate[1] + "\n");
+        
+        return planarCoordinate;
+    }
+    
+    public Double[] transform_SJTSK_to_WGS84(Double latitude, Double longitude, Double altitude) {
+                 
+        //Prepocet z S-JTSK do WGS-84 ... uz dostanu hodnoty v radianech
+        Double[] geodeticCoordinate = kovak_xy_BLH(latitude, longitude, altitude);
+        System.out.println("SJTSK - geodeticke souradnice: " + geodeticCoordinate[0]);
+        System.out.println("SJTSK - geodeticke souradnice: " + geodeticCoordinate[1]);
+        System.out.println("SJTSK - geodeticke souradnice altitude: " + geodeticCoordinate[2] + "\n");                      
+        //Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid Bessel
+        Double[] cartesianCoordinate = bessel_BLH_xyz(geodeticCoordinate[0], geodeticCoordinate[1], geodeticCoordinate[2]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate[0]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate[1]);
+        System.out.println("SJTSK - provouhle souradnice: " + cartesianCoordinate[2] + "\n");
+        //Transformace pravouhlych souradnic z S-JTSK do WGS84
+        Double[] cartesianCoordinate_WGS84 = transformation_SJTSK_WGS84_xyz_xyz(cartesianCoordinate[0], cartesianCoordinate[1], cartesianCoordinate[2]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[0]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[1]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[2] + "\n");
+        //Vypocet geodetickych souradnic z pravouhlych souradnic pro elipsoid WGS84
+        Double[] geodeticCoordinateRAD_WGS84 = WGS84_xyz_BLH(cartesianCoordinate_WGS84[0], cartesianCoordinate_WGS84[1], cartesianCoordinate_WGS84[2]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[0]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[1]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[2] + "\n");
+        //Transformation latitude and longitude from radiant to degree 
+        Double[] latLong = radiantToDegree(geodeticCoordinateRAD_WGS84[0], geodeticCoordinateRAD_WGS84[1]);
+        Double[] geodeticCoordinate_WGS84 = new Double[3];
+        geodeticCoordinate_WGS84[0] = latLong[0];
+        geodeticCoordinate_WGS84[1] = latLong[1];
+        geodeticCoordinate_WGS84[2] = geodeticCoordinateRAD_WGS84[2];
+        
+        System.out.println("WGS84 latitude: "+ geodeticCoordinate_WGS84[0]);
+        System.out.println("WGS84 longitude: " + geodeticCoordinate_WGS84[1]);
+        System.out.println("WGS84 altitude: " + geodeticCoordinate_WGS84[2] + "\n");
+        
+        return geodeticCoordinate_WGS84;
+    }      
+    
+    //**********************************************************************************************//
+    //**********************************  WGS-84  <---> S-42 ************************************//
+    //*********************************************************************************************//
+    
+    public Double[] transform_WGS84_to_S42(Double latitude, Double longitude, Double altitude) {
+                
+        //WGS84 - transform latitude and longitude from degree to radiant format
+        Double[] geodeticCoordinateRAD_WGS = degreeToRadiant(latitude, longitude);   
+        System.out.println("from " + latitude + " toRadian: " + geodeticCoordinateRAD_WGS[0]);
+        System.out.println("from " + longitude + " toRadian: " + geodeticCoordinateRAD_WGS[1] + "\n"); 
+        //WGS84 - vypocet pravouhlych souradnic z geodetickych souradnic
+        Double[] cartesianCoordinate_WGS = WGS84_BLH_xyz(geodeticCoordinateRAD_WGS[0], geodeticCoordinateRAD_WGS[1], altitude); 
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[0]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[1]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS[2] + "\n");
+        //transformace prostorov?ch pravo?hl?ch sou?adnic do syst?mu S-42
+        Double[] cartesianCoordinate_S42 = this.transformation_WGS84_S42_xyz_xyz(cartesianCoordinate_WGS[0], cartesianCoordinate_WGS[1], cartesianCoordinate_WGS[2]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate_S42[0]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate_S42[1]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate_S42[2] + "\n");
+        //S-42 - vypocet geodetickych souradnic z pravouhlych souradnic
+        Double[] geodeticCoordinateRAD_S42 = this.krajovskij_xyz_BLH(cartesianCoordinate_S42[0], cartesianCoordinate_S42[1], cartesianCoordinate_S42[2]);      
+        System.out.println("S42 - geodeticke souradnice RAD: " + geodeticCoordinateRAD_S42[0]);
+        System.out.println("S42 - geodeticke souradnice RAD: " + geodeticCoordinateRAD_S42[1]);
+        System.out.println("S42 - geodeticke souradnice altitude: " + geodeticCoordinateRAD_S42[2] + "\n");        
+        //S-42 - transform latitude and longitude from radiant to degree format
+        Double[] latLong = radiantToDegree(geodeticCoordinateRAD_S42[0], geodeticCoordinateRAD_S42[1]);
+        System.out.println("S42 - geodeticke souradnice: " + latLong[0]);
+        System.out.println("S42 - geodeticke souradnice: " + latLong[1]);
+        System.out.println("S42 - geodeticke souradnice altitude: " + geodeticCoordinateRAD_S42[2] + "\n");        
+              
+        Double[] coordinate = transformatin_S42_BLH_xy(latLong[0], latLong[1]);               
+        System.out.println("S42 - planar souradnice: " + coordinate[0]);
+        System.out.println("S42 - planar souradnice: " + coordinate[1] + "\n");
+        
+        return coordinate;
+    }
+    
+     public Double[] transform_S42_to_WGS84(Double latitude, Double longitude, Double altitude) {
+         
+         //Prepocet z S-42 do WGS-84 ... uz dostanu hodnoty v radianech
+        Double[] geodeticCoordinate = transformation_S42_xy_BLH(latitude, longitude);
+        System.out.println("S42 - geodeticke souradnice: " + geodeticCoordinate[0]);
+        System.out.println("S42 - geodeticke souradnice: " + geodeticCoordinate[1]);
+        System.out.println("S42 - geodeticke souradnice altitude: " + geodeticCoordinate[2] + "\n");                      
+        //Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid Bessel
+        Double[] cartesianCoordinate = krajovskij_BLH_xyz(geodeticCoordinate[0], geodeticCoordinate[1], geodeticCoordinate[2]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[0]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[1]);
+        System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[2] + "\n");
+        //Transformace pravouhlych souradnic z S-42 do WGS84
+        Double[] cartesianCoordinate_WGS84 = transformation_S42_WGS84_xyz_xyz(cartesianCoordinate[0], cartesianCoordinate[1], cartesianCoordinate[2]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[0]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[1]);
+        System.out.println("WGS84 - pravouhle souradnice: " + cartesianCoordinate_WGS84[2] + "\n");
+        //Vypocet geodetickych souradnic z pravouhlych souradnic pro elipsoid WGS84
+        Double[] geodeticCoordinateRAD_WGS84 = WGS84_xyz_BLH(cartesianCoordinate_WGS84[0], cartesianCoordinate_WGS84[1], cartesianCoordinate_WGS84[2]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[0]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[1]);
+        System.out.println("WGS84 - geodeticke souradnice: " + geodeticCoordinateRAD_WGS84[2] + "\n");
+        //Transformation latitude and longitude from radiant to degree 
+        Double[] latLong = radiantToDegree(geodeticCoordinateRAD_WGS84[0], geodeticCoordinateRAD_WGS84[1]);
+        Double[] geodeticCoordinate_WGS84 = new Double[3];
+        geodeticCoordinate_WGS84[0] = latLong[0];
+        geodeticCoordinate_WGS84[1] = latLong[1];
+        geodeticCoordinate_WGS84[2] = geodeticCoordinateRAD_WGS84[2];
+        
+        System.out.println("WGS84 latitude: "+ geodeticCoordinate_WGS84[0]);
+        System.out.println("WGS84 longitude: " + geodeticCoordinate_WGS84[1]);
+        System.out.println("WGS84 altitude: " + geodeticCoordinate_WGS84[2] + "\n");
+        
+        return geodeticCoordinate_WGS84;
+     }
+        
+    //*******************************************************************************************//
+    //*********************** Planar coordinates ***********************************************//
+    //******************************************************************************************//    
+    
+    /**    
+     *   Prepocet z S-JTSk do WGS-84
+     *   (Krovak projection (used in the S-JTSK coordinate system))
+     */    
+    public Double[] kovak_xy_BLH(Double x, Double y, Double altitude) {
+          
+        //konstanty prouzite pro transformaci
+        double a     = 6377397.15508;   //polomer Gausseovy koule (6380065.5402 metr?)
+        double e     = 0.081696831215303;
+        double n     = 0.97992470462083;
+        double rho_0 = 12310230.12797036;
+        double sinUQ = 0.863499969506341; //kulova sirka odpovidajici zemepisne sirce 49?30`
+        double cosUQ = 0.504348889819882;
+        double sinVQ = 0.420215144586493;
+        double cosVQ = 0.907424504992097;
+        double alfa  = 1.000597498371542; //koustanta pro vypocet sfericke sirky a delky
+        double k_2   = 1.003419163966575;  //koustanta pro vypocet sfericke sirky a delky             
+        
+        double ro = Math.sqrt(Math.pow(x,2)+ Math.pow(y,2));
+        double epsilon = 2.* Math.atan(y/(ro+x));
+        double d = epsilon/n; 
+        double s = 2.* Math.atan(Math.exp(1./ n* Math.log(rho_0 / ro)))- Math.PI/2.;
+        double sinS = Math.sin(s); 
+        double cosS = Math.cos(s);
+        double sinU = sinUQ * sinS - cosUQ * cosS * Math.cos(d); 
+        double cosU = Math.sqrt(1.- Math.pow(sinU, 2));
+        double sinDV = Math.sin(d) * cosS/cosU; 
+        double cosDV = Math.sqrt(1.-Math.pow(sinDV,2));
+        double sinV = sinVQ * cosDV - cosVQ * sinDV; 
+        double cosV = cosVQ * cosDV + sinVQ * sinDV;
+        double longitude = 2.* Math.atan(sinV / (1.+ cosV))/alfa;
+        double t = Math.exp(2./alfa * Math.log((1.+ sinU)/cosU/k_2));
+        double pom = (t-1.)/(t+1.);
+        double sinB;
+        do {
+           sinB = pom;
+           pom = t * Math.exp(e * Math.log((1.+ e * sinB)/(1. - e * sinB))); 
+           pom = (pom-1)/(pom+1);
+      } while (Math.abs(pom - sinB) > 1.e-15);
+       double latitude = Math.atan(pom/Math.sqrt(1.- Math.pow(pom,2)));
+      
+      altitude = altitude + 45;	
+      // this is an appropriate heigth correction                  
+
+       Double[] geologicCoordinate = new Double[3];
+       geologicCoordinate[0] = latitude;
+       geologicCoordinate[1] = longitude;
+       geologicCoordinate[2] = altitude;
+       
+       return geologicCoordinate;       
+        
+    }
+    
+    /**
+     * Transformace souradnic ze systemu WGS-84 do systemu S-JTSK.
+     *
+     * vraci JTSK sou?adnice pro zadanou Severn? ???ku a v?chodn? d?lku  
+     * Zobrazeni zemepisnych souradnic na pravouhle:
+     *  - zobrazeni Besselova elipsoidu  na Gausseovu kouli
+     *  - vypocet kartografickych souradnic na Gaussove kouli s posunutym polem Q o souradnicich 48?15`, 42?30`.
+     *  - konformni kuzelove zobrazeni s tecnym kuzelem na zakladni rovnobezce
+     *  - dopocitani pravouhlych souradnic
+     */
+    public Double[] krovak_BLH_xy(Double latitude, Double longitude, Double altitude) {      
+       
+        //konstanty prouzite pro transformaci
+        double a     = 6377397.15508;   //polomer Gausseovy koule (6380065.5402 metr?)
+        double e     = 0.081696831215303;
+        double n     = 0.97992470462083;
+        double rho_0 = 12310230.12797036;
+        double sinUQ = 0.863499969506341; //kulova sirka odpovidajici zemepisne sirce 49?30`
+        double cosUQ = 0.504348889819882;
+        double sinVQ = 0.420215144586493;
+        double cosVQ = 0.907424504992097;
+        double alfa  = 1.000597498371542; //koustanta pro vypocet sfericke sirky a delky
+        double k_2   = 1.00685001861538;  //koustanta pro vypocet sfericke sirky a delky
+           
+       Double[] coordinateRAD = degreeToRadiant(latitude, longitude);
+       latitude = coordinateRAD[0]; 
+       longitude = coordinateRAD[1];
+       
+       double sinB = Math.sin(latitude);
+       double t = (1-e*sinB)/(1+e*sinB);
+              t = Math.pow(1+sinB,2)/(1- Math.pow(sinB,2)) * Math.exp(e*Math.log(t));
+              t = k_2 * Math.exp(alfa * Math.log(t));
+
+       double sinU  = (t-1)/(t+1);
+       double cosU  = Math.sqrt(1-Math.pow(sinU,2));
+       double V = alfa * longitude;
+       double sinV  = Math.sin(V);
+       double cosV  = Math.cos(V);
+       double cosDV = cosVQ * cosV + sinVQ * sinV;
+       double sinDV = sinVQ * cosV - cosVQ * sinV;
+       double sinS  = sinUQ*sinU + cosUQ*cosU*cosDV;
+       double cosS  = Math.sqrt(1-sinS*sinS);
+       double sinD  = sinDV * cosU/cosS;
+       double cosD  = Math.sqrt(1-sinD*sinD);
+       
+       double eps = n * Math.atan(sinD/cosD);
+       double rho = rho_0 * Math.exp(-n * Math.log((1+sinS)/cosS));
+
+       Double[] planarCoordinate = new Double[2];
+       planarCoordinate[0] = rho * Math.cos(eps); //x
+       planarCoordinate[1] = rho * Math.sin(eps); //y
+       
+       return planarCoordinate;       
+    }        
+ 
+           
+    //*******************************************************************************************//
+    //***************** S-42  Planar coordinates ***********************************************//
+    //******************************************************************************************//    
+ 
+    /**
+     *  Mercator projection for the S42 coordinate system
+     *
+     */ 
+    public Double[] transformatin_S42_BLH_xy(Double phi, Double lambda) {               
+       
+        // parameters of the Krasovskij ellipsoid
+        double elipsoid_a = ELIPSOID_KRAJOVSKIJ_A; 
+        double elipsoid_f = ELIPSOID_KRAJOVSKIJ_F;
+
+        // parameters of the S-42 coordinate system (3rd belt)
+       double no = 0;
+       double eo = 3500000;
+       double fo = 1;
+       double phi0 = Math.toRadians(0);
+       double lambda0 = Math.toRadians(15);
+       double b = elipsoid_a - elipsoid_a/elipsoid_f;
+
+       Double[] listEN = transverseMercator_BLH_XY(phi, lambda, no, eo, fo, phi0, lambda0, elipsoid_a, b);
+      
+       return listEN;
+    }
+    
+    /**
+     * Mercator projection for the S42 coordinate system
+     * (the 3rd belt suitable for the Czech Republic)
+     *
+     */
+    public Double[] transformation_S42_xy_BLH(Double e, Double n) {
+             
+        // parameters of the Krasovskij ellipsoid 
+        double elipsoid_a = ELIPSOID_KRAJOVSKIJ_A; 
+        double elipsoid_f = ELIPSOID_KRAJOVSKIJ_F;
+
+
+        // parameters of the S-42 coordinate system (3rd belt)
+       double no = 0;
+       double eo = 3500000;
+       double fo = 1;
+       double phi0 = Math.toRadians(0);
+       double lambda0 = Math.toRadians(15);
+       double b = elipsoid_a - elipsoid_a/elipsoid_f;
+          
+       Double[] listPhiLambda = mercator_XY_BLH(e, n, no, eo, fo, phi0, lambda0, elipsoid_a, b);
+       altitude = 0.;
+       Double[] value = new Double[3];
+       value[0] = listPhiLambda[0];
+       value[1] = listPhiLambda[1];
+       value[2] = 0.;          
+       return value;
+    }    
+    
+    /**
+     *
+     *
+     */
+    public Double[] transverseMercator_BLH_XY(double phi, double lambda, double no, double eo, double fo, double phi0, double lambda0, double elipsoid_a, double b) {
+                
+        double e2 = (Math.pow(elipsoid_a,2) - Math.pow(b, 2)) / Math.pow(elipsoid_a,2);
+        double n = (elipsoid_a - b) / (elipsoid_a + b);
+        double sinphi = Math.sin(phi);
+        double sinphi2 = Math.pow(sinphi,2);
+        double e2sinphi2 = 1 - e2 * Math.pow(sinphi, 2);
+        double nu = elipsoid_a * fo / Math.pow(e2sinphi2, 2);
+        double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 2) * e2sinphi2);
+        double eta2 = nu / rho - 1;
+        
+        double n2 = Math.pow(n,2);
+        double n3 = Math.pow(n, 3);
+        
+        double m = b * fo *(
+              (1 + n + 5/4*n2 + 5/4*n3) * (phi - phi0)
+              - (3*n + 3*n2 + 21/8*n3) * Math.sin(phi - phi0) * Math.cos(phi + phi0)
+              + (15/8*n2 + 15/8*n3) * Math.sin(2*(phi - phi0)) * Math.cos(2*(phi + phi0))
+              - 35/24*n3 * Math.sin(3*(phi - phi0)) * Math.cos(3*(phi-phi0))
+              );
+        
+        double cosphi = Math.cos(phi);
+        double tanphi = Math.tan(phi);
+     
+        double i = m + no;
+        double ii = nu/2 * sinphi * cosphi;
+        double iii = nu/24 * sinphi* Math.pow(cosphi,3) * (5 - Math.pow(tanphi,2) + 9 * eta2);
+        double iiia = nu/720 * sinphi * Math.pow(cosphi,5) * (61 - 58 * Math.pow(tanphi,2) + Math.pow(tanphi,4));
+        double iv = nu * cosphi;
+        double v = nu/6 * Math.pow(cosphi,3) * (nu/rho - Math.pow(tanphi,2));
+        double vi = nu/120 * Math.pow(cosphi,5) * (5 - 18* Math.pow(tanphi,2) + Math.pow(tanphi,4) + 14 * eta2 - 58 * Math.pow(tanphi,2) * eta2);
+
+        double llo = lambda - lambda0;
+        n = i + ii * Math.pow(llo,2) + iii * Math.pow(llo,4) + iiia * Math.pow(llo,6);
+        double e = eo + iv * llo + v * Math.pow(llo,3) + vi * Math.pow(llo,5);
+        
+        Double[] value = new Double[2];
+        value[0] = e;
+        value[1] = n;
+        
+        return value;
+    }
+    
+    /**
+     *
+     *
+     */
+    public Double[] mercator_XY_BLH(double e, double n, double no, double eo, double fo, double phi0, double lambda0, double elipsoid_a, double b){
+        
+        double phid = (n-no) / (elipsoid_a * fo) + phi0;
+
+        n = (elipsoid_a - b) / (elipsoid_a + b);
+        double n2 = Math.pow(n,2);
+        double n3 = Math.pow(n, 3);
+        double m = 0;
+        
+        int i1st = 0;
+        do {
+            if (i1st > 0) 
+                phid = (n - no - m) / (elipsoid_a * fo) + phid;
+            i1st++;
+
+            m = b * fo *(
+              (1 + n + 5/4*n2 + 5/4*n3) * (phid - phi0)
+              - (3*n + 3*n2 + 21/8*n3) * Math.sin(phid - phi0) * Math.cos(phid + phi0)
+              + (15/8*n2 + 15/8*n3) * Math.sin(2*(phid - phi0)) * Math.cos(2*(phid + phi0))
+              - 35/24*n3 * Math.sin(3*(phid - phi0)) * Math.cos(3*(phid-phi0))
+              );
+
+          } while (Math.abs(n-no-m) > 1.e-4);
+
+          double e2 = (Math.pow(elipsoid_a,2) - Math.pow(b, 2)) / Math.pow(elipsoid_a,2);
+          double sinphi = Math.sin(phid);	// tady je zrejme phi
+          double sinphi2 = Math.pow(sinphi,2);
+          double e2sinphi2 = 1 - e2 * Math.pow(sinphi, 2);
+          double nu = elipsoid_a * fo / Math.pow(e2sinphi2, 2);
+          double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 2) * e2sinphi2);
+          double eta2 = nu / rho - 1;
+          
+          double secphid = 1./ Math.cos(phid);
+          double tanphid = Math.tan(phid);         
+
+          double vii = tanphid/(2 * rho * nu);
+          double viii = tanphid/(24 * rho * Math.pow(nu,3)) * (5 + 3* Math.pow(tanphid,2) + eta2 - 9 * Math.pow(tanphid,2) * eta2);
+          double ix = tanphid/(720 * rho * Math.pow(nu,5)) * (61 + 90 * Math.pow(tanphid,2) + 45 * Math.pow(tanphid,4));
+          double x = secphid / nu;
+          double xi = secphid/(6 * Math.pow(nu,3)) * (nu/rho + 2 * Math.pow(tanphid,2));
+          double xii = secphid/(120 * Math.pow(nu,5)) * (5 + 28 * Math.pow(tanphid,2) + 24 * Math.pow(tanphid,4));
+          double xiia = secphid/(5040* Math.pow(nu,7)) * (61 + 662 * Math.pow(tanphid,2) + 1320 * Math.pow(tanphid,4) + 720 * Math.pow(tanphid,6));
+
+          double eeo = e - eo;
+          double phi = phid - vii * Math.pow(eeo,2) + viii * Math.pow(eeo,4) - ix * Math.pow(eeo,6);
+          double lambda = lambda0 + x * eeo - xi * Math.pow(eeo,3) + xii * Math.pow(eeo,5) - xiia * Math.pow(eeo,7);
+
+          Double[] value = new Double[2];
+          value[0] = phi;
+          value[1] = lambda;
+          
+          return value;
+    }
+    
+    //****************************************************************************************//
+    //******** Convergetion between geological coordinate and cartesian coordinate ***********//
+    //***************************************************************************************//
+    
+    /**
+     *  Vypocet geodetickych souradnic z pravouhlych souradnic pro urcity elipsoid
+     */
+    public Double[] ellipsoid_xyz_BLH(Double x, Double y, Double z, Double elipsoid_a, Double elipsoid_f) {
+
+          double a_b = elipsoid_f/(elipsoid_f - 1);      
+          double p = Math.sqrt(Math.pow(x,2) + Math.pow(y,2));      
+          double e2 = 1 - Math.pow((1 - 1 /elipsoid_f), 2);      
+          double th = Math.atan(z * a_b / p); 
+          double sinth = Math.sin(th);
+          double costh = Math.cos(th);          
+          double t = (z + e2 * a_b * elipsoid_a * Math.pow(sinth,3)) / (p - e2 * elipsoid_a * Math.pow(costh,3));  
+        
+          Double[] geodeticCoordinate = new Double[3];
+          //latitude
+          geodeticCoordinate[0] = Math.atan(t);
+          //longitude
+          geodeticCoordinate[1] = 2 * Math.atan(y / (p + x));
+          //altitude
+          geodeticCoordinate[2] =  Math.sqrt(1 + Math.pow(t, 2)) * (p - elipsoid_a / Math.sqrt(1 + (1 - e2) * Math.pow(t, 2)));            
+          
+          return geodeticCoordinate;       
+      }
+    
+    /**
+     * Vypocet pravouhlych souradnic z geodetickych souradnic pro dany elipsoid
+     * (phi = B, lambda = L )
+     *
+     * @param  zem?pisn? geodetick? ???ka ? je ?hel, kter? sv?r? rovina rovn?ku s norm?lou k plo?e elipsoidu (kladn? na sever)
+     * @param zem?pisn? geodetick? d?lka ? je ?hel, kter? sv?r? rovina m?stn?ho poledn?ku s rovinou z?kladn?ho poledn?ku (kladn? na v?chod),
+     * @param elipsoidick? v??ka H je vzd?lenost od elipsoidu, m??en? po norm?le (kladn? vn? elipsoidu)
+     *
+     */
+    public Double[] ellipsoid_BLH_xyz(Double latitude, Double longitude, Double altitude, Double elipsoid_a, Double elipsoid_f) {
+       
+        //e = excentricita elipsoidu
+        Double e2 = 1 - Math.sqrt(1 - 1 / elipsoid_f);
+        //rho = pricny polomer krivosti
+        Double rho = elipsoid_a/Math.sqrt(1 - e2 * Math.pow(Math.sin(latitude),2));          
+        //pravouhle souradnice
+        Double[] cartesianCoordinate = new Double[3];
+        cartesianCoordinate[0] = (rho + altitude) * Math.cos(latitude) * Math.cos(longitude); //x
+        cartesianCoordinate[1] = (rho + altitude) * Math.cos(latitude) * Math.sin(longitude); //y
+        cartesianCoordinate[2] = ((1-e2)*rho + altitude) * Math.sin(latitude);  //z
+        
+        return cartesianCoordinate;
+    }
+    
+    /**
+     * Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid WGS84
+     *     
+     */
+    public Double[] WGS84_BLH_xyz(Double latitude, Double longitude, Double altitude) {                
+       
+        Double[] cartesianCoordinate = ellipsoid_BLH_xyz(latitude, longitude, altitude, ELIPSOID_WGS84_A, ELIPSOID_WGS84_F);        
+        return cartesianCoordinate;
+    }
+    
+    /**
+     * Vypocet geodetickych souradnic z pravouhlych souradnic pro elipsoid WGS84
+     *
+     */
+    public Double[] WGS84_xyz_BLH(Double x, Double y, Double z) {        
+     
+        Double[] geodeticCoordinate = ellipsoid_xyz_BLH(x,y, z, ELIPSOID_WGS84_A, ELIPSOID_WGS84_F);
+        return geodeticCoordinate;
+      }        
+    
+    /**
+     * Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid Bessel
+     *     
+     */
+    public Double[] bessel_BLH_xyz(Double latitude, Double longitude, Double altitude) {                
+       
+        Double[] cartesianCoordinate = ellipsoid_BLH_xyz(latitude, longitude, altitude, this.ELIPSOID_BESSEL_A, ELIPSOID_BESSEL_F);        
+        return cartesianCoordinate;
+    }
+    
+    /**
+     * Vypocet geodetickych souradnic z pravouhlych souradnic pro elipsoid Bessel
+     *
+     */
+    public Double[] bessel_xyz_BLH(Double x, Double y, Double z) {        
+     
+        Double[] geodeticCoordinate = ellipsoid_xyz_BLH(x,y, z, ELIPSOID_WGS84_A, ELIPSOID_WGS84_F);
+        return geodeticCoordinate;
+      }        
+    
+    /**
+     * Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid Krajovskij
+     *     
+     */
+    public Double[] krajovskij_BLH_xyz(Double latitude, Double longitude, Double altitude) {                
+       
+        Double[] cartesianCoordinate = ellipsoid_BLH_xyz(latitude, longitude, altitude, ELIPSOID_KRAJOVSKIJ_A, ELIPSOID_KRAJOVSKIJ_F);        
+        return cartesianCoordinate;
+    }
+    
+    /**
+     * Vypocet geodetickych souradnic z pravouhlych souradnic pro elipsoid Krajovskij
+     *
+     */
+    public Double[] krajovskij_xyz_BLH(Double x, Double y, Double z) {        
+     
+        Double[] geodeticCoordinate = ellipsoid_xyz_BLH(x,y, z, ELIPSOID_KRAJOVSKIJ_A, ELIPSOID_KRAJOVSKIJ_F);
+        return geodeticCoordinate;
+      }        
+    
+   
+    //*****************************************************************************************//
+    //***************** Transaction of the cartesian coordinates ******************************//
+    //****************************************************************************************//
+    
+    /**
+     * Hrdina (1997)
+     *
+     * Transformace pravouhlych souradnic z WGS84 do S-JTSK
+     */
+    public Double[] transformation_WGS84_SJTSK_xyz_xyz(Double xs, Double ys, Double zs) {
+        // koeficienty transformace ze systemu WGS-84 do systemu S-JTSK
+        //posunuti
+       double dx = -570.69; 
+       double dy = -85.69; 
+       double dz = -462.84; 
+       //rotace
+       double wx = 4.99821/3600 * Math.PI/180; 
+       double wy = 1.58676/3600 * Math.PI/180; 
+       double wz = 5.2611/3600 * Math.PI/180;
+       //meritko
+       double m  = -3.543e-6; 
+       
+       //Heltmert transform
+        double xn = dx + (1+m)*(+   xs + wz*ys - wy*zs);
+        double yn = dy + (1+m)*(-wz*xs +    ys + wx*zs);
+        double zn = dz + (1+m)*(+wy*xs - wx*ys +    zs);
+        
+        //save
+        Double[] cartesianCoordinateNew = new Double[3];
+        cartesianCoordinateNew[0] = xn;
+        cartesianCoordinateNew[1] = yn;
+        cartesianCoordinateNew[2] = zn;
+                
+        return cartesianCoordinateNew;
+    }
+    
+    /**
+     * Hrdina (2002)
+     *
+     * Transformace pravouhlych souradnic z S-JTSK do WGS84 
+     */
+    public Double[] transformation_SJTSK_WGS84_xyz_xyz(Double xs, Double ys, Double zs) {
+        // koeficienty transformace ze systemu S-JTSK do systemu WGS-84
+        //posunuti
+       double dx = 570.69; 
+       double dy = 85.69; 
+       double dz = 462.84; 
+       //rotace
+       double wx = -4.99821/3600 * Math.PI/180; 
+       double wy = -1.58676/3600 * Math.PI/180; 
+       double wz = -5.2611/3600 * Math.PI/180;
+       //meritko
+       double m  = 3.543e-6; 
+       
+       //Heltmert transform
+        double xn = dx + (1+m)*(+   xs + wz*ys - wy*zs);
+        double yn = dy + (1+m)*(-wz*xs +    ys + wx*zs);
+        double zn = dz + (1+m)*(+wy*xs - wx*ys +    zs);
+        
+        //save
+        Double[] cartesianCoordinateNew = new Double[3];
+        cartesianCoordinateNew[0] = xn;
+        cartesianCoordinateNew[1] = yn;
+        cartesianCoordinateNew[2] = zn;
+                
+        return cartesianCoordinateNew;
+    }
+    
+    /**
+     *
+     * Transformace pravouhlych souradnic z WGS84 do S42
+     */
+    public Double[] transformation_WGS84_S42_xyz_xyz(Double xs, Double ys, Double zs) {
+        // koeficienty transformace ze systemu WGS84 do systemu S42
+        //posunuti
+       double dx = -23; 
+       double dy = 124; 
+       double dz = 84; 
+       //rotace
+       double wx = -0.13/3600 * Math.PI/180; 
+       double wy = -0.25/3600 * Math.PI/180; 
+       double wz = 0.02/3600 * Math.PI/180;
+       //meritko
+       double m  = -1.1e-6; 
+       
+       //Heltmert transform
+        double xn = dx + (1+m)*(+   xs + wz*ys - wy*zs);
+        double yn = dy + (1+m)*(-wz*xs +    ys + wx*zs);
+        double zn = dz + (1+m)*(+wy*xs - wx*ys +    zs);
+        
+        //save
+        Double[] cartesianCoordinateNew = new Double[3];
+        cartesianCoordinateNew[0] = xn;
+        cartesianCoordinateNew[1] = yn;
+        cartesianCoordinateNew[2] = zn;
+                
+        return cartesianCoordinateNew;
+    }
+    
+    /**     
+     *
+     * Transformace pravouhlych souradnic z S42 do WGS84 
+     */
+    public Double[] transformation_S42_WGS84_xyz_xyz(Double xs, Double ys, Double zs) {
+        // koeficienty transformace ze systemu S42 do systemu WGS-84
+        //posunuti
+       double dx = 23; 
+       double dy = -124; 
+       double dz = -84; 
+       //rotace
+       double wx = 0.13/3600 * Math.PI/180; 
+       double wy = 0.25/3600 * Math.PI/180; 
+       double wz = -0.02/3600 * Math.PI/180;
+       //meritko
+       double m  = 1.1e-6; 
+       
+       //Heltmert transform
+        double xn = dx + (1+m)*(+   xs + wz*ys - wy*zs);
+        double yn = dy + (1+m)*(-wz*xs +    ys + wx*zs);
+        double zn = dz + (1+m)*(+wy*xs - wx*ys +    zs);
+        
+        //save
+        Double[] cartesianCoordinateNew = new Double[3];
+        cartesianCoordinateNew[0] = xn;
+        cartesianCoordinateNew[1] = yn;
+        cartesianCoordinateNew[2] = zn;
+                
+        return cartesianCoordinateNew;
+    }
+    
+    //**********************************************************************//
+    //******************* Radiant vs. Degree *******************************//
+    //**********************************************************************//
+    
+   /**
+   * transform latitude and longitude from degree to radiant format
+   * 
+   * @param latitude
+   * @param longitude
+   */
+  protected Double[] degreeToRadiant(double latitude, double longitude)
+  {
+      Double[] geodeticCoordinateRAD = new Double[2];
+      geodeticCoordinateRAD[0] = Math.toRadians(latitude);
+      geodeticCoordinateRAD[1] = Math.toRadians(longitude);
+      
+      //geodeticCoordinateRAD[0] = latitude;
+      //geodeticCoordinateRAD[1] = longitude;
+      
+      return geodeticCoordinateRAD;
+  }
+
+  /**
+   * transform latitude and longitude from radiant to degree format
+   * 
+   * @param latitude
+   * @param longitude
+   */
+  protected Double[] radiantToDegree(double latitudeRAD, double longitudeRAD)
+  {
+    Double[] geodeticCoordinate = new Double[2];  
+    geodeticCoordinate[0] = Math.toDegrees(latitudeRAD);
+    geodeticCoordinate[1] = Math.toDegrees(longitudeRAD);    
+    
+    //geodeticCoordinate[0] = latitudeRAD;
+    //geodeticCoordinate[1] = longitudeRAD;    
+    
+    return geodeticCoordinate;
+  }
+  
+}
\ No newline at end of file



From kovo at berlios.de  Tue Jun  6 13:06:25 2006
From: kovo at berlios.de (kovo at berlios.de)
Date: Tue, 6 Jun 2006 13:06:25 +0200
Subject: [Plantlore-dev] r462 - trunk/src/net/sf/plantlore/client
Message-ID: <200606061106.k56B6PO0009686@sheep.berlios.de>

Author: kovo
Date: 2006-06-06 13:05:40 +0200 (Tue, 06 Jun 2006)
New Revision: 462

Modified:
   trunk/src/net/sf/plantlore/client/Search.java
Log:
Revert changes made in the main search querz. Occurrences with deleted publications are now displazed. Such occurrences should not exist (Publication manager doesn't allow that)

Modified: trunk/src/net/sf/plantlore/client/Search.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Search.java	2006-06-06 09:56:46 UTC (rev 461)
+++ trunk/src/net/sf/plantlore/client/Search.java	2006-06-06 11:05:40 UTC (rev 462)
@@ -548,7 +548,6 @@
     	exportQuery.createAlias(habitatAlias+Habitat.NEARESTVILLAGE, Record.alias(Village.class));
     	exportQuery.createAlias(habitatAlias+Habitat.PHYTOCHORION, Record.alias(Phytochorion.class));
     	exportQuery.addOrder(PlantloreConstants.DIRECT_ASC, Occurrence.YEARCOLLECTED);
-        exportQuery.addRestriction(PlantloreConstants.RESTR_EQ, Record.alias(Publication.class)+"."+Occurrence.DELETED, null, 0, null);    	
     	for( Restriction restriction : restrictions ) {
     		if(restriction.type == RESTR_BETWEEN)
     			exportQuery.addRestriction(restriction.type, restriction.column, null, null, (Collection)restriction.arg);
@@ -595,7 +594,6 @@
                 sq.addRestriction(PlantloreConstants.SUBQUERY_LEALL, AuthorOccurrence.AUTHOR, null, subQuery, null);                
                 sq.addOrder(PlantloreConstants.DIRECT_DESC, "occ."+Occurrence.YEARCOLLECTED); //setridit podle roku
                 sq.addRestriction(PlantloreConstants.RESTR_EQ, "occ."+Occurrence.DELETED, null, 0, null);
-                sq.addRestriction(PlantloreConstants.RESTR_EQ, "publication."+Occurrence.DELETED, null, 0, null);
                 for (Column column : columns) {
                     switch (column.type) {
                         case AUTHOR:



From lada at berlios.de  Tue Jun  6 13:17:43 2006
From: lada at berlios.de (lada at berlios.de)
Date: Tue, 6 Jun 2006 13:17:43 +0200
Subject: [Plantlore-dev] r463 - in trunk/src/net/sf/plantlore/client: history metadata
Message-ID: <200606061117.k56BHhVv012696@sheep.berlios.de>

Author: lada
Date: 2006-06-06 13:17:40 +0200 (Tue, 06 Jun 2006)
New Revision: 463

Modified:
   trunk/src/net/sf/plantlore/client/history/History.java
   trunk/src/net/sf/plantlore/client/metadata/MetadataManager.java
Log:
Change type of array for change log from ENUM[] toPlantloreConstants.Table[] (eg. new Enum[] editTypeArray = new PlantloreConstants.Table[count]).

Modified: trunk/src/net/sf/plantlore/client/history/History.java
===================================================================
--- trunk/src/net/sf/plantlore/client/history/History.java	2006-06-06 11:05:40 UTC (rev 462)
+++ trunk/src/net/sf/plantlore/client/history/History.java	2006-06-06 11:17:40 UTC (rev 463)
@@ -1320,7 +1320,7 @@
      */
     public void informMethod(ArrayList<Enum> editType) {
         int count = editType.size();
-        Enum[] editTypeArray = new Enum[count];
+        Enum[] editTypeArray = new PlantloreConstants.Table[count];
         for(int i=0; i < count; i++) {
             logger.debug("Type of editing object (array for appcore): " + editType.get(i));
             editTypeArray[i] = editType.get(i);

Modified: trunk/src/net/sf/plantlore/client/metadata/MetadataManager.java
===================================================================
--- trunk/src/net/sf/plantlore/client/metadata/MetadataManager.java	2006-06-06 11:05:40 UTC (rev 462)
+++ trunk/src/net/sf/plantlore/client/metadata/MetadataManager.java	2006-06-06 11:17:40 UTC (rev 463)
@@ -51,7 +51,7 @@
     //Vyvrany zaznam v tabulce s metadaty
     private Metadata selectedRecord;
     
-    private Enum[] editTypeArray = new Enum[]{PlantloreConstants.Table.METADATA};
+    private Enum[] editTypeArray = new PlantloreConstants.Table[]{PlantloreConstants.Table.METADATA};
     
     //*********************Search************//
     /** Field to be used for sorting search query results */



From lada at berlios.de  Tue Jun  6 13:37:16 2006
From: lada at berlios.de (lada at berlios.de)
Date: Tue, 6 Jun 2006 13:37:16 +0200
Subject: [Plantlore-dev] r464 - in trunk/src/biocase/DataproBioCASE: configuration/querytool/skins/default configuration/querytool/skins/plantlore configuration/querytool/skins/plantlorePSWD www www/querytool/plantlore
Message-ID: <200606061137.k56BbGn0019973@sheep.berlios.de>

Author: lada
Date: 2006-06-06 13:37:12 +0200 (Tue, 06 Jun 2006)
New Revision: 464

Modified:
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/error.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/error.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/password.html
   trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html
   trunk/src/biocase/DataproBioCASE/www/index.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css
   trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html
Log:
Repair layout of pages.

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/default/error.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -7,19 +7,40 @@
 </head>
 
 <body>
-<div>
+<div id="headContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./plantlore/uvod.html"><img src="./plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./plantlore/aktuality.html"><img src="./plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./plantlore/databaze.html"><img src="./plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./plantlore/odkazy.html"><img src="./plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+</div> 
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">  
       <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
       <br><hr color=#663333>   
-</div> 
-<div>
+ 
+
     <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
     Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
     neusp?jete, tak kontaktujte administr?tora.</i>
-</div>
-<div align="center">
-    <br><br>
-    <a href="../index.html">HOME</a>    
-</div>
+
+    <div align="center">
+        <br><br>
+        <a href="../index.html">HOME</a>    
+    </div>
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>    
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/ABCDUnit.xslt	2006-06-06 11:37:12 UTC (rev 464)
@@ -13,12 +13,8 @@
 							<xsl:value-of select="n1:Identifications/n1:Identification/n1:TaxonIdentified/n1:NameAuthorYearString"/>
 				<!--		</xsl:if>  -->
 						<br/>
-						            						
-							<span class="label"><b>Record Basis: </b></span>
-							<xsl:value-of select="n1:RecordBasis"/>						
-							<br/><br/>
-												
-            	<span class="label"><b>Village: </b></span>
+						 
+             	<span class="label"><b>Village: </b></span>
 							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:NearNamedPlaces/n1:NamedPlaceRelation/n1:NearNamedPlace"/>
 					     <br/><br/>
 												            							
@@ -29,8 +25,105 @@
 							<span class="label"><b>Author (identifier): </b></span>
 							<xsl:value-of select="n1:Identifications/n1:Identification/n1:Identifier/n1:IdentifierPersonName/n1:PersonName"/>
 							<br/><br/>
+												              
+              <span class="label"><b>Prispevatel: </b></span>
+							<xsl:value-of select="n1:RecordRights/n1:LegalOwner/n1:Person/n1:PersonName"/>
+							<br/><br/>
 						
+						  <span class="label"><b>Prispevatel (email): </b></span>
+							<xsl:value-of select="n1:RecordRights/n1:LegalOwner/n1:EmailAddresses/n1:EmailAdress"/>
+							<br/><br/>
+							
+							<span class="label"><b>Prispevatel (adresa): </b></span>
+							<xsl:value-of select="n1:RecordRights/n1:LegalOwner/n1:Addresses/n1:Adress"/>
+							<br/><br/>
+							
+							<span class="label"><b>Zdroj: </b></span>
+							<xsl:value-of select="n1:UnitReferences/n1:UnitReference/n1:ReferenceCitation"/>
+							<br/><br/>
+							
+							<span class="label"><b>Rok nalezu: </b></span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringDateTime/n1:DateText"/>
+							<br/><br/>																				
+							           						
+							<span class="label"><b>Record Basis: </b></span>
+							<xsl:value-of select="n1:RecordBasis"/>						
+							<br/><br/>
+												
+              <span class="label"><b>Project:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:Project/n1:ProjectTitle"/>
+							<br/><br/>
+							
+							<span class="label"><b>Country:</b> </span>
+    					<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:Country/n1:CountryName"/> <xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:Country/n1:ISO2Letter"/> <xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:Country/n1:ISO3Letter"/>
+    					<br/><br/>
+							
+							<span class="label"><b>Last update (projekt):</b> </span>
+							<xsl:value-of select="../../n1:OriginalSource/n1:SourceLastUpdatedDate"/>
+							<br/><br/>
+							
+							<span class="label">Source Institution: </span>
+							<xsl:value-of select="../../n1:OriginalSource/n1:SourceName"/>
+              <br/><br/> 
+              
+							<span class="label">Source Id: </span>
+              (<xsl:value-of select="../../n1:OriginalSource/n1:SourceInstitutionCode"/>)
+              <br/><br/>
+												
+              <span class="label"><b>Technical contact email:</b> </span>
+							<xsl:value-of select="n1:DatasetDerivations/n1:DatasetDerivation/n1:Supplier/n1:EmailAddresses/n1:EmailAddress"/>
+							<br/><br/>									
+							
+							<span class="label"><b>Date last edited:</b> </span>							
+							<br/><br/>
+							
+							<span class="label">==========Only for celected ==============</span><br/><br/>
+              							 
+							<span class="label"><b>Locality description:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:LocalityText"/>
+							<br/><br/>						  						
+              
+              <span class="label"><b>Datum nalezu:</b> </span>
+							<xsl:value-of select="n1:GatheringDateTime/n1:ISODateTimeBegin"/>
+							<br/><br/>
+							
+							<span class="label"><b>Locality description:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:LocalityText"/>
+							<br/><br/>
+							
+							<span class="label"><b>Territory:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:AreaDetail"/>
+							<br/><br/>
+							
+							<span class="label"><b>Phytochorion:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:NamedAreas/n1:NamedAra/n1:AreaCode"/>
+							<br/><br/>
+							
+							<span class="label"><b>Latitude:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:SiteCoordinateSets/n1:SiteCoordinates/n1:CoordinatesLatLong/n1:LatitudeDecimal"/>
+							<br/><br/>
 						
+						  <span class="label"><b>Longitude:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:SiteCoordinateSets/n1:SiteCoordinates/n1:CoordinatesLatLong/n1:LongitudeDecimal "/>
+							<br/><br/>
+							
+							<span class="label"><b>Altitude:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:Altitude/n1:MeasurementAtomized/n1:MeasurementLowerValue"/>
+							<br/><br/>
+							
+							<span class="label"><b>Poznamka k nalezu:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringAgents/n1:GhateringAgentsText"/>
+							<br/><br/>
+							
+							<span class="label"><b>Poznamka k autorovi daneho nalezu:</b> </span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringAgents/n1:GatheringAgent/n1:AgentText"/>
+							<br/><br/>
+						
+						  <span class="label"><b>Poznamka k lokalite:</b></span>
+							<xsl:value-of select="n1:Gathering/n1:GatheringSite/n1:Notes"/>
+							<br/><br/>
+							
+								
 							<!-- *********************************/HEADER ************************************** 	-->
 							<table width="96%" border="3">
 								<tr>

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/details.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -13,7 +13,8 @@
 </script>
 </head>
 <body id="page">
-<div id="mainContainer">
+<body id="page">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -21,12 +22,19 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">                                
-   
+    <div id="lineRight"></div>                                 
+        
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+       
 <div id="Content">  
 
   <form name="recordlist" method="post" action="recordlist.cgi">
@@ -51,13 +59,13 @@
 
   <!--VAR:debug-->
 
-</div>
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 
 </div>
-</div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/error.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/error.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -7,19 +7,41 @@
 </head>
 
 <body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-<div>
+<div id="headContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>       
+</div>
+<div id="mainContainer">   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - error</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
     <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
     Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
     neusp?jete, tak kontaktujte administr?tora.</i>
-</div>
-<div align="center">
-    <br><br>
-    <a href="../index.html">HOME</a>    
-</div>
+
+    <div align="center">
+        <br><br>
+        <a href="../index.html">HOME</a>    
+    </div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>      
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/form.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -9,7 +9,7 @@
 
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -17,14 +17,21 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>N?lezov? data - vyhled?van?</h1>            
-   
-<div  id="Content">
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+
   <p>&nbsp;</p>
   <form action="grouping.cgi" method="post" name="query">  
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
@@ -64,15 +71,12 @@
 
   <!--VAR:debug-->
 
-</div>
-
-<div >
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
- </div>    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/grouping.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -9,13 +9,13 @@
     function updateForm(val){
         document.groupform.con<!--VAR:groupingCon-->.value=val;
 		document.groupform.submit();
-    };    
+    };       
 </script>
 </head>
 
 
 <body id="page">
-<div class="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -23,14 +23,20 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                     
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                                             
 
-<div id="Content">
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
   <p><em><br>
   <!--VAR:filter_display--><br>
   </em></p>
@@ -65,12 +71,12 @@
 
     <!--VAR:debug-->
 
+<div id="Footer" style="background-color: white;"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-
-<div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-</div>
-</div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlore/recordlist.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -13,7 +13,7 @@
 </script>
 </head>
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -21,13 +21,21 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">                                
-            
-<div  id="Content">
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+
   <p><em><br><!--VAR:filter_display--><br></em></p>
 
   <table height="13" width="100%" class="layout">
@@ -74,12 +82,12 @@
 
   <!--VAR:debug-->
 
-</div>
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-</div>
 
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/details.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -13,7 +13,8 @@
 </script>
 </head>
 <body id="page">
-<div id="mainContainer">
+<body id="page">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -21,12 +22,19 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">                                
-   
+    <div id="lineRight"></div>                                 
+        
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+       
 <div id="Content">  
 
   <form name="recordlist" method="post" action="recordlist.cgi">
@@ -51,13 +59,13 @@
 
   <!--VAR:debug-->
 
-</div>
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 
 </div>
-</div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/error.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/error.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -7,19 +7,41 @@
 </head>
 
 <body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
-</div> 
-<div>
+<div id="headContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="plantlore/aktuality.html"><img src="plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>       
+</div>
+<div id="mainContainer">   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - error</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
     <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
     Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
     neusp?jete, tak kontaktujte administr?tora.</i>
-</div>
-<div align="center">
-    <br><br>
-    <a href="../index.html">HOME</a>    
-</div>
+
+    <div align="center">
+        <br><br>
+        <a href="../index.html">HOME</a>    
+    </div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>      
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/form.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -9,7 +9,7 @@
 
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -17,14 +17,21 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>N?lezov? data - vyhled?van?</h1>            
-   
-<div  id="Content">
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+
   <p>&nbsp;</p>
   <form action="grouping.cgi" method="post" name="query">  
     <input type="hidden" name="dsa" value="<!--VAR:dsa-->">
@@ -64,15 +71,12 @@
 
   <!--VAR:debug-->
 
-</div>
-
-<div >
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
- </div>    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/grouping.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -9,13 +9,13 @@
     function updateForm(val){
         document.groupform.con<!--VAR:groupingCon-->.value=val;
 		document.groupform.submit();
-    };        
+    };       
 </script>
 </head>
 
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -23,15 +23,20 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>            
-   
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                                             
 
-<div id="Content">
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
   <p><em><br>
   <!--VAR:filter_display--><br>
   </em></p>
@@ -66,13 +71,12 @@
 
     <!--VAR:debug-->
 
+<div id="Footer" style="background-color: white;"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-
-<div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
-</div>
-</div>
-
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/password.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/password.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/password.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -2,44 +2,65 @@
 <head>
 <title>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</title>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<link rel="stylesheet" type="text/css" href="plantlore/styly.css">
+<link rel="stylesheet" type="text/css" href="plantlore/position.css">
+<link rel="stylesheet" type="text/css" href="plantlore/styles.css">
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body>
-<div>
-      <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
-      <br><hr color=#663333>   
+<body id="page">
+<div id="headContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./plantlore/uvod.html"><img src="./plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./plantlore/aktuality.html"><img src="./plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./plantlore/databaze.html"><img src="./plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./plantlore/odkazy.html"><img src="./plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
 </div> 
+<div id="mainContainer">   
+    <div id="lineLeft"></div>
+    <div id="lineRight"></div>  
+                                                 
+            <h1>P?ihl??en? do n?lezov? datab?ze</h1>                                                                
 
-<div align="center">
-  <br>
-  <table width="300" border="0" cellspacing="0" cellpadding="0">
-    <tr>
-      <th scope="col" colspan="2">Please authenticate with your login and password:</th>
-    </tr>
-    <form action="<!--VAR:script-->" method="post">
-    <input name="dsa" type="hidden" value="<!--VAR:dsa-->">        
-    <tr>
-      <td>Login</td>
-      <td><input name="login" type="text" size="40"></td>
-    </tr>
-    <tr>
-       <td>Password</td>
-       <td><input name="passwd" type="password" size="40"></td>
-     </tr> 
-     <tr>
-       <td colspan="2" align="center"><input type="submit" name="Submit" value="Submit"></td>
-     </tr> 
-    </form>   
-  </table>
-
-  <p>
-    <!--VAR:debug-->
-</p>
-</div>
-
-<div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
+                   
+             
+            
+            <div align="center">
+            <br>
+            <table width="300" border="0" cellspacing="0" cellpadding="0">                
+                <form action="<!--VAR:script-->" method="post">
+                <input name="dsa" type="hidden" value="<!--VAR:dsa-->">        
+                <tr>
+                  <td>Login</td>
+                  <td><input name="login" type="text" size="40"></td>
+                </tr>
+                <tr>
+                   <td>Password</td>
+                   <td><input name="passwd" type="password" size="40"></td>
+                 </tr> 
+                 <tr>
+                   <td colspan="2" align="center"><input type="submit" name="Submit" value="Submit"></td>
+                 </tr> 
+                </form>   
+            </table>          
+            <p>
+              <!--VAR:debug-->
+            </p>
+          </div>
+                   
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>        
+</div> 
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/configuration/querytool/skins/plantlorePSWD/recordlist.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -13,7 +13,7 @@
 </script>
 </head>
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="plantlore/uvod.html"><img src="plantlore/images/menuUvod4.gif"></a></div>
@@ -21,13 +21,21 @@
         <div id="menuDB"><a href="plantlore/databaze.html"><img src="plantlore/images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="plantlore/odkazy.html"><img src="plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">                                
-            
-<div  id="Content">
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">
+
   <p><em><br><!--VAR:filter_display--><br></em></p>
 
   <table height="13" width="100%" class="layout">
@@ -74,12 +82,12 @@
 
   <!--VAR:debug-->
 
-</div>
-
 <div id="Footer"> <img src="../resources/images/biocase_powered.gif" alt="powered by Biocase" width="112" height="34" border="0"></div>
-
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
-</div>
 
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/www/index.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/index.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/index.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -8,19 +8,28 @@
 </head>
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
-        <div id="menuUvod"><a href="./querytool/plantlore/uvod.html"><img src="./querytool/plantlore/images/menuUvod4.gif"></a></div>
-        <div id="menuNews"><a href="./querytool/plantlore/aktuality.html"><img src="./querytool/plantlore/images/menuAktuality2.gif"></a></div>
-        <div id="menuDB"><a href="./querytool/plantlore/databaze.html"><img src="./querytool/plantlore/images/menuDB2.gif"></a></div>
-        <div id="menuRef"><a href="./querytool/plantlore/odkazy.html"><img src="./querytool/plantlore/images/menuOdkazy2.gif"></a></div>
+       <div id="menuUvod"><a href="querytool/plantlore/uvod.html"><img src="querytool/plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="querytool/plantlore/aktuality.html"><img src="querytool/plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="querytool/plantlore/databaze.html"><img src="querytool/plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="querytool/plantlore/odkazy.html"><img src="querytool/plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
-    </div>   
+    </div>       
+</div>
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? data - v?sledek vyhled?v?n?</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">        
             <h1>Jiho?esk? pobo?ka ?esk? botanick? spole?nosti</h1>
             Sdru?uje z?jemce o botaniku z ?ad profesion?l? i amat?r?. Byla zalo?ena dne 1. listopadu
             1959 za ??asti jiho?esk?ch botanik?, ochran??? a z?stupc? hlavn?ho v?boru tehdy
@@ -42,10 +51,11 @@
         </div> 
         <br><br>
         <a href="querytool/main.cgi?dsa=plantlore">Data pro v?echny</a><br> 
-        <a href="querytool/main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>
-        <a href="javascript:threeColumn()">ddd</a>
-        
-    </div>        
+        <a href="querytool/main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>        
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/aktuality.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -8,21 +8,34 @@
 </head>
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
-      <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+       <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
         <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
         <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
     </div>   
+</div> 
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>Aktuality</h1>           
-    </div>    
+    <div id="lineRight"></div>  
+                                                 
+            <h1>Aktuality</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
+      Text....                                                   
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/databaze.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -8,26 +8,38 @@
 </head>
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
-        <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
+       <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
         <div id="menuNews"><a href="./aktuality.html"><img src="./images/menuAktuality2.gif"></a></div>
         <div id="menuDB"><a href="./databaze.html"><img src="./images/menuDB2.gif"></a></div>
         <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
     </div>   
+</div> 
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>N?lezov? datab?ze ?esk? botanick? spole?nosti</h1>           
-        </div> 
+    <div id="lineRight"></div>  
+                                                 
+            <h1>N?lezov? datab?ze ?esk? botanick? spole?nosti</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
         <br><br>
         <a href="../main.cgi?dsa=plantlore">Data pro v?echny</a><br> 
-        <a href="../main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>
-    </div>    
+        <a href="../main.cgi?dsa=plantlorePSWD">Data pro p?isp?vatele</a><br>                                                   
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
+
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/error.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -7,19 +7,40 @@
 </head>
 
 <body>
-<div>
+<div id="headContainer">
+    <div id="head"></div>
+    <div id="menu">
+       <div id="menuUvod"><a href="./plantlore/uvod.html"><img src="./plantlore/images/menuUvod4.gif"></a></div>
+        <div id="menuNews"><a href="./plantlore/aktuality.html"><img src="./plantlore/images/menuAktuality2.gif"></a></div>
+        <div id="menuDB"><a href="./plantlore/databaze.html"><img src="./plantlore/images/menuDB2.gif"></a></div>
+        <div id="menuRef"><a href="./plantlore/odkazy.html"><img src="./plantlore/images/menuOdkazy2.gif"></a></div>
+        <div id="menuEmpty"></div>
+    </div>   
+</div> 
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">  
       <h1>N?lezov? datab?ze Jiho?esk? pobo?ky ?BS</h1>   
       <br><hr color=#663333>   
-</div> 
-<div>
+ 
+
     <i>Toto bude chybov? str?nka - nebyl zad?n datov? zdroj nebo byl nekorektn? p??stup ke str?nce.<br>
     Pokuste znovu p5istoupit k dat?m p?es n??e uveden? odkazy, pokud ani te? 
     neusp?jete, tak kontaktujte administr?tora.</i>
-</div>
-<div align="center">
-    <br><br>
-    <a href="../index.html">HOME</a>    
-</div>
+
+    <div align="center">
+        <br><br>
+        <a href="../index.html">HOME</a>    
+    </div>
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>    
 </body>
 </html>
 

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/odkazy.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -8,7 +8,7 @@
 </head>
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
@@ -17,12 +17,25 @@
         <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
     </div>   
+</div> 
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>Zaj?mav? odkazy</h1>            
-    </div>    
+    <div id="lineRight"></div>  
+                                                 
+            <h1>Zaj?mav? odkazy</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
+      Text....                                                   
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
 </div>
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/password.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -8,7 +8,7 @@
 </head>
 
 <body id="page">
-<div id="mainContainer">
+<div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="./plantlore/uvod.html"><img src="./plantlore/images/menuUvod4.gif"></a></div>
@@ -17,11 +17,21 @@
         <div id="menuRef"><a href="./plantlore/odkazy.html"><img src="./plantlore/images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
     </div>   
+</div> 
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>P?ihl??en? do n?lezov? datab?ze</h1>     
+    <div id="lineRight"></div>  
+                                                 
+            <h1>P?ihl??en? do n?lezov? datab?ze</h1>                                                                
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
+                   
+             
             
             <div align="center">
             <br>
@@ -46,7 +56,11 @@
             </p>
           </div>
                    
-    </div>    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>        
 </div> 
 </body>
 </html>

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/position.css	2006-06-06 11:37:12 UTC (rev 464)
@@ -1,13 +1,19 @@
 #page {    
-  background-color: grey;
+  background-color: grey;  
 }
 
+#headContainer {
+  position: absolute;  
+  top: 0px;  left:  10%;
+  width: 800px; height: 100%;  
+  background-color: white;
+}
+
 #mainContainer {
   position: absolute;
-  left: 10%; top: 0px;
-  width: 800px; height: 100%;
-  background-attachment: scroll;
-  background-color: white;
+  left: 10%; top: 155px;
+  width: 800px; height: 100%;  
+  background-color: white;    
 }
 
 #head{
@@ -60,20 +66,14 @@
 
 #lineLeft{
   position: absolute;
-  left: 150px; top: 141px;
+  left: 150px; top: 0px;
   width: 1px; height: 75%;   
   background-color: #DCDDDE;
 }
 
 #lineRight{
   position: absolute;
-  left: 650px; top: 141px;
+  left: 650px; top: 0px;
   width: 1px; height: 75%;   
   background-color: #DCDDDE;
 }
-
-#mainPage {
-  position: absolute;
-  left: 165px; top: 155px;
-  width: 470px; height: 75%; 
-}

Modified: trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html
===================================================================
--- trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html	2006-06-06 11:17:40 UTC (rev 463)
+++ trunk/src/biocase/DataproBioCASE/www/querytool/plantlore/uvod.html	2006-06-06 11:37:12 UTC (rev 464)
@@ -7,8 +7,7 @@
 <link rel="SHORTCUT ICON" href="../resources/images/favicon.ico">
 </head>
 
-<body id="page">
-<div id="mainContainer">
+<body id="page"><div id="headContainer">
     <div id="head"></div>
     <div id="menu">
        <div id="menuUvod"><a href="./uvod.html"><img src="./images/menuUvod4.gif"></a></div>
@@ -17,11 +16,20 @@
         <div id="menuRef"><a href="./odkazy.html"><img src="./images/menuOdkazy2.gif"></a></div>
         <div id="menuEmpty"></div>
     </div>   
+</div> 
+<div id="mainContainer">   
     <div id="lineLeft"></div>
-    <div id="lineRight"></div> 
-    <div id="mainPage">
-        <div class="mainText">        
-            <h1>Jiho?esk? pobo?ka ?esk? botanick? spole?nosti</h1>
+    <div id="lineRight"></div>  
+                                                 
+                 <h1>Jiho?esk? pobo?ka ?esk? botanick? spole?nosti</h1>                                                             
+
+<div  style="background-color: white;">
+<table>
+<tr>
+<td style="border-width: 0px; border-right: 1px; border-style: solid; border-color: #DCDDDE; width: 144;"></td>
+<td style="width:15"></td>
+<td style="width:472">     
+      
             Sdru?uje z?jemce o botaniku z ?ad profesion?l? i amat?r?. Byla zalo?ena dne 1. listopadu
             1959 za ??asti jiho?esk?ch botanik?, ochran??? a z?stupc? hlavn?ho v?boru tehdy
             ?eskoslovensk? botanick? spole?nosti p?i krajsk?m vlastiv?dn?m muzeu v ?esk?ch
@@ -39,9 +47,13 @@
             p?ev??n? na ?zem? Rakouska. Postupn? je budov?na centr?ln? floristick? kartot?ka, kter?
             zachycuje floristick? ?daje z publikovan?ch i rukopisn?ch prac? o kv?ten? ji?n? ??sti ?ech.
             D?le vytv??? datab?zi floristick?ch z?znam?
-        </div>        
-    </div>    
-</div>
+                                                  
+    
+</td>
+<td style="border-width: 0px; border-left: 1px; border-style: solid; border-color: #DCDDDE;"></td>
+</tr>
+</table>
+</div>                 
 </body>
 </html>
 



From discontinuum at gmail.com  Mon Jun 19 00:39:17 2006
From: discontinuum at gmail.com (Erik Kratochvil)
Date: Mon, 19 Jun 2006 00:39:17 +0200
Subject: [Plantlore-dev] Schuzka s Hansem
Message-ID: <f4dc39b90606181539q63526628pab5d6bcfa685b249@mail.gmail.com>

Cau, nejsou nekde sepsany poznamky, ktery vzesly ze schuzky s Hansem? Celkem
bych si je i precetl  :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060619/a1b9cfe4/attachment.html>

From tkovarik at gmail.com  Thu Jun 29 20:28:35 2006
From: tkovarik at gmail.com (Tomas Kovarik)
Date: Thu, 29 Jun 2006 20:28:35 +0200
Subject: [Plantlore-dev] Poznamky zo schodzky s Hansom
Message-ID: <ea88f1620606291128o5b6b2ad2mf7dc49ead52d11fb@mail.gmail.com>

* Rozdelenie zaznamov na LOKALITU a NALEZ. Pouzitie: Uzivatel si vyhlada
lokalitu a DO NEJ pridava nalezy.
* Zobrazovat vysledky vyhladavania podla lokality/nalezu
* Pri revidovani zanamu potreba ukladat datum - moze sa na to pouzit pole
poznamka z TAUTHORSOCCURRENCES
* Pri revidovani sa moze zmenit polozka Taxon - zaujima nas ale len jej nova
hodnota (kedze stara bola nespravna)
* Rola autora zaznamu moze byt: Nalezce, Identifikoval, Revidoval
* Vyskrtnut z metadat polozku BiotopeText

To je vsetko co mam. Majte sa

Kovo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060629/14cd00c5/attachment.html>

From tkovarik at gmail.com  Thu Jun 29 21:14:22 2006
From: tkovarik at gmail.com (Tomas Kovarik)
Date: Thu, 29 Jun 2006 21:14:22 +0200
Subject: [Plantlore-dev] Kovo o prazdninach
Message-ID: <ea88f1620606291214n65697ccw8175f9fa7f812dad@mail.gmail.com>

V Prahe budem
29.6. - 25.7.
3.8 - 14.8.
od tusim 26.8. by som mal byt uz k dispozicii

Kovo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20060629/b7de98dd/attachment.html>

From Lada at berlios.de  Fri Jun 30 16:46:49 2006
From: Lada at berlios.de (Lada at berlios.de)
Date: Fri, 30 Jun 2006 16:46:49 +0200
Subject: [Plantlore-dev] r465 - trunk/src/net/sf/plantlore/client
Message-ID: <200606301446.k5UEknFV030896@sheep.berlios.de>

Author: Lada
Date: 2006-06-30 16:46:49 +0200 (Fri, 30 Jun 2006)
New Revision: 465

Modified:
   trunk/src/net/sf/plantlore/client/Transformation.java
Log:
Transformations WGS-84 --> S-JTSK, S-JTSK --> WGS-84, WGS-84 --> S-42 and S-42 --> WGS-84 work correctly. There are two function for conversion S-42 from orthogonal coordinate to ellipsoidal latitude, longitude, height (S42_xy_BLH() works correctly, transformation_S42_xy_BLH() has to be repair or destroy). S-42 works with 3rd belt suitable for Czech Republic.

Modified: trunk/src/net/sf/plantlore/client/Transformation.java
===================================================================
--- trunk/src/net/sf/plantlore/client/Transformation.java	2006-06-06 11:37:12 UTC (rev 464)
+++ trunk/src/net/sf/plantlore/client/Transformation.java	2006-06-30 14:46:49 UTC (rev 465)
@@ -20,6 +20,19 @@
  * Transformace souradnic WGS84<-->-JTSK<-->S42 http://astro.mff.cuni.cz/mira/sh/sh.php  
  *
  * @author Lada Oberreiterova
+ * 
+ * 
+ * U WGS-84 se bude zadavat a zobrazovat geodeticke souradnice:
+ *    latitude: 50.4576?
+ * 	  longitude: 14.3986?
+ * 	  altitude: 289.15 m
+ *
+ * U S42 a S-JTSK se budou zadavat a zobrazovat souradnice v ortogon?ln?m syst?mu: 
+ * Pro S-JSTK se rozlisuji kvadranty - CR spada do 3.kvadrantu (X-ova souradnice bude vychazet zaporne)
+ * Pro S-42 se rozlisuji pasy - CR spada do 3.pasu a ??st Karpat na Morav? do 4.pasu
+ * 		Y= 1002007 m 
+ * 		X= 738791 m.
+ * 		Z=  244 m
  */
 public class Transformation {
     
@@ -41,11 +54,11 @@
     
     //A = velka poloosa zplosteneho elipsoidu
     //F = zplosteni elipsoidu
-    public static final Double ELIPSOID_WGS84_A = 6378137.0;
+    public static final Double ELIPSOID_WGS84_A = 6378137.0; //6377397,155
     public static final Double ELIPSOID_WGS84_F = 298.257223563;
     public static final Double ELIPSOID_BESSEL_A = 6377397.15508;
     public static final Double ELIPSOID_BESSEL_F = 299.152812853;    
-    public static final Double ELIPSOID_KRAJOVSKIJ_A = 6378245.0;;
+    public static final Double ELIPSOID_KRAJOVSKIJ_A = 6378245.0;
     public static final Double ELIPSOID_KRAJOVSKIJ_F = 298.3;    
     
     /**
@@ -68,9 +81,13 @@
      public static void main(String[] args) {
             Transformation tr = new Transformation();
             System.out.println("********************WGS84 --> S-JTSK**************************");
-            Double[] coordinate_SJTSK = tr.transform_WGS84_to_SJTSK(50.465555, 14.3986, 289.155);
+            Double[] coordinate_SJTSK = tr.transform_WGS84_to_SJTSK(50.4576163694, 14.3986, 289.155);
             System.out.println("******************** S-JTSK --> WGS84 **************************");
-            Double[] coordinate_WGS84 = tr.transform_SJTSK_to_WGS84(coordinate_SJTSK[0], coordinate_SJTSK[1], 244.6);
+            Double[] coordinate_WGS84_SJTSK = tr.transform_SJTSK_to_WGS84(coordinate_SJTSK[0], coordinate_SJTSK[1], coordinate_SJTSK[2]);
+            System.out.println("********************WGS84 --> S-42**************************");
+            Double[] coordinate_S42 = tr.transform_WGS84_to_S42(50.4576163694, 14.3986, 289.155);
+            System.out.println("******************** S-42 --> WGS84 **************************");                       
+            Double[] coordinate_WGS84_S42 = tr.transform_S42_to_WGS84(coordinate_S42[0], coordinate_S42[1], coordinate_S42[2]);            
      }
          
     //**********************************************************************************************//
@@ -117,18 +134,19 @@
         System.out.println("SJTSK - geodeticke souradnice: " + latLong[0]);
         System.out.println("SJTSK - geodeticke souradnice: " + latLong[1]);
         System.out.println("SJTSK - geodeticke souradnice altitude: " + geodeticCoordinateRAD_SJTSK[2] + "\n");        
-              
-        Double[] planarCoordinate = krovak_BLH_xy(latLong[0], latLong[1], geodeticCoordinateRAD_SJTSK[2]);               
-        System.out.println("SJTSK - planar souradnice: " + planarCoordinate[0]);
-        System.out.println("SJTSK - planar souradnice: " + planarCoordinate[1] + "\n");
+         
+        Double[] planarCoordinate = krovak_BLH_xy(latLong[0], latLong[1], geodeticCoordinateRAD_SJTSK[2]);       
+        System.out.println("SJTSK - planar souradnice (X): " + planarCoordinate[0]);
+        System.out.println("SJTSK - planar souradnice (Y): " + planarCoordinate[1]);
+        System.out.println("SJTSK (Z): " + planarCoordinate[2] + "\n");
         
         return planarCoordinate;
     }
     
-    public Double[] transform_SJTSK_to_WGS84(Double latitude, Double longitude, Double altitude) {
+    public Double[] transform_SJTSK_to_WGS84(Double x, Double y, Double z) {
                  
-        //Prepocet z S-JTSK do WGS-84 ... uz dostanu hodnoty v radianech
-        Double[] geodeticCoordinate = kovak_xy_BLH(latitude, longitude, altitude);
+        //Prepocet z S-JTSK  ... uz dostanu hodnoty v radianech
+        Double[] geodeticCoordinate = kovak_xy_BLH(x, y, z);
         System.out.println("SJTSK - geodeticke souradnice: " + geodeticCoordinate[0]);
         System.out.println("SJTSK - geodeticke souradnice: " + geodeticCoordinate[1]);
         System.out.println("SJTSK - geodeticke souradnice altitude: " + geodeticCoordinate[2] + "\n");                      
@@ -191,23 +209,33 @@
         System.out.println("S42 - geodeticke souradnice: " + latLong[0]);
         System.out.println("S42 - geodeticke souradnice: " + latLong[1]);
         System.out.println("S42 - geodeticke souradnice altitude: " + geodeticCoordinateRAD_S42[2] + "\n");        
-              
-        Double[] coordinate = transformatin_S42_BLH_xy(latLong[0], latLong[1]);               
-        System.out.println("S42 - planar souradnice: " + coordinate[0]);
-        System.out.println("S42 - planar souradnice: " + coordinate[1] + "\n");
+                 
+        Double[] coordinate = transformatin_S42_BLH_xy(geodeticCoordinateRAD_S42[0], geodeticCoordinateRAD_S42[1]);               
+        System.out.println("S42 - planar souradnice (X): " + coordinate[0]);
+        System.out.println("S42 - planar souradnice (Y): " + coordinate[1]);
+        System.out.println("S42 (Z): " + geodeticCoordinateRAD_S42[2] + "\n");
         
-        return coordinate;
+        Double[] planarCoordinate = new Double[3];
+        planarCoordinate[0] = coordinate[0];
+        planarCoordinate[1] = coordinate[1];
+        planarCoordinate[2] = geodeticCoordinateRAD_S42[2];
+               
+        return planarCoordinate;
     }
+      
     
-     public Double[] transform_S42_to_WGS84(Double latitude, Double longitude, Double altitude) {
+     public Double[] transform_S42_to_WGS84(Double x, Double y, Double z) {
          
          //Prepocet z S-42 do WGS-84 ... uz dostanu hodnoty v radianech
-        Double[] geodeticCoordinate = transformation_S42_xy_BLH(latitude, longitude);
+         //!!!!!FIXME - v teto funkci je chyba
+        //Double[] geodeticCoordinate = transformation_S42_xy_BLH(x, y, z);
+    	 Double[] geodeticCoordinate = S42_xy_BLH(x, y, z);
         System.out.println("S42 - geodeticke souradnice: " + geodeticCoordinate[0]);
         System.out.println("S42 - geodeticke souradnice: " + geodeticCoordinate[1]);
         System.out.println("S42 - geodeticke souradnice altitude: " + geodeticCoordinate[2] + "\n");                      
         //Vypocet pravouhlych souradnic z geodetickych souradnic pro elipsoid Bessel
         Double[] cartesianCoordinate = krajovskij_BLH_xyz(geodeticCoordinate[0], geodeticCoordinate[1], geodeticCoordinate[2]);
+        //Double[] cartesianCoordinate = krajovskij_BLH_xyz(0.8806574639397869, 0.25133270679766656, geodeticCoordinate[2]);
         System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[0]);
         System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[1]);
         System.out.println("S42 - provouhle souradnice: " + cartesianCoordinate[2] + "\n");
@@ -279,8 +307,7 @@
            pom = (pom-1)/(pom+1);
       } while (Math.abs(pom - sinB) > 1.e-15);
        double latitude = Math.atan(pom/Math.sqrt(1.- Math.pow(pom,2)));
-      
-      altitude = altitude + 45;	
+  
       // this is an appropriate heigth correction                  
 
        Double[] geologicCoordinate = new Double[3];
@@ -308,7 +335,7 @@
         double a     = 6377397.15508;   //polomer Gausseovy koule (6380065.5402 metr?)
         double e     = 0.081696831215303;
         double n     = 0.97992470462083;
-        double rho_0 = 12310230.12797036;
+        double rho_0 = 12310230.12797036; //1298039,0046
         double sinUQ = 0.863499969506341; //kulova sirka odpovidajici zemepisne sirce 49?30`
         double cosUQ = 0.504348889819882;
         double sinVQ = 0.420215144586493;
@@ -340,15 +367,61 @@
        double eps = n * Math.atan(sinD/cosD);
        double rho = rho_0 * Math.exp(-n * Math.log((1+sinS)/cosS));
 
-       Double[] planarCoordinate = new Double[2];
+       Double[] planarCoordinate = new Double[3];
        planarCoordinate[0] = rho * Math.cos(eps); //x
        planarCoordinate[1] = rho * Math.sin(eps); //y
+       planarCoordinate[2] = altitude;
        
        return planarCoordinate;       
     }        
  
-           
     //*******************************************************************************************//
+    //***************** S-42  Orthogonal coordinates --> geodetic coordinate*********************//
+    //******************************************************************************************//   
+    
+    public Double[] S42_xy_BLH(Double x, Double y, Double z) {
+    	//VYPOCET S-42 ortogonalni system --> S-42 geodeticky system
+
+    	double A2 = x;
+    	double B2 = y;
+    	double C2 = 6378245;
+    	double D2 = 0.0818133340169312;
+    	double E2 = 500000+Math.rint(A2/1000000)*1000000;
+    	double F2 = 0;
+    	double G2 = 21+6*(Math.rint(A2/1000000)-4);
+    	double H2 = G2*Math.PI/180;
+    	double I2 = 0;
+    	double J2 = I2*Math.PI/180;
+    	double K2 = 1;
+    	double L2 = A2-E2;
+    	double M2 = B2-F2;
+    	double N2 = (1-Math.sqrt(1-D2*D2))/(1+ Math.sqrt(1-D2*D2));
+    	double O2 = C2*(J2*(1-D2*D2/4-3*Math.pow(D2,4)/64-5*Math.pow(D2,6)/256)-Math.sin(2*J2)*(3*D2*D2/8+3*Math.pow(D2,4)/32+45*Math.pow(D2,6)/1024)+Math.sin(4*J2)*(15*Math.pow(D2,4)/256+45*Math.pow(D2,6)/1024)-Math.sin(6*J2)*35*Math.pow(D2,6)/3072);
+    	double P2 = O2+M2/K2;
+    	double Q2 = P2/(C2*(1-D2*D2/4-3*Math.pow(D2,4)/64-5*Math.pow(D2,6)/256));
+    	double R2 = Q2+Math.sin(2*Q2)*(3*N2/2-27*Math.pow(N2,3)/32)+Math.sin(4*Q2)*(21*N2*N2/16-55*Math.pow(N2,4)/32)+Math.sin(6*Q2)*151*Math.pow(N2,3)/96+Math.sin(8*Q2)*1097*Math.pow(N2,4)/512;
+    	double S2 = D2*D2/(1-D2*D2);
+    	double T2 = S2*Math.cos(R2)*Math.cos(R2);
+    	double U2 = Math.tan(R2)*Math.tan(R2);
+    	double V2 = C2/Math.sqrt(1-D2*D2*Math.sin(R2)*Math.sin(R2));
+    	double W2 = C2*(1-D2*D2)/Math.sqrt(1-D2*D2*Math.sin(R2)*Math.sin(R2));
+    	double X2 = L2/(V2*K2);
+    	double Z2 = H2+(X2-(1+2*U2+T2)*Math.pow(X2,3)/6+(5-2*T2+28*U2-3*T2*T2+8*S2+24*U2*U2)*Math.pow(X2,5)/120)/Math.cos(R2);
+    	double Y2 = R2-(V2*Math.tan(R2)/W2)*(X2*X2/2-(5+3*U2+10*T2-4*T2*T2-9*S2)*Math.pow(X2,4)/24+(61+90*U2+298*T2+45*U2*U2-252*S2-3*T2*T2)*Math.pow(X2,6)/720);
+    	//latitude
+    	double lambda = Z2*180/Math.PI;
+    	//longitude
+    	double fi = Y2 * 180/Math.PI; //prevod na stupne z radianu    	
+    	
+    	Double[] coordinate = new Double[3];
+    	coordinate[0] = Math.toRadians(fi);
+    	coordinate[1] = Math.toRadians(lambda);
+    	coordinate[2] = z;
+    	
+    	return coordinate;
+    }
+    
+    //*******************************************************************************************//
     //***************** S-42  Planar coordinates ***********************************************//
     //******************************************************************************************//    
  
@@ -380,7 +453,7 @@
      * (the 3rd belt suitable for the Czech Republic)
      *
      */
-    public Double[] transformation_S42_xy_BLH(Double e, Double n) {
+    public Double[] transformation_S42_xy_BLH(Double e, Double n, Double altitude) {
              
         // parameters of the Krasovskij ellipsoid 
         double elipsoid_a = ELIPSOID_KRAJOVSKIJ_A; 
@@ -393,14 +466,13 @@
        double fo = 1;
        double phi0 = Math.toRadians(0);
        double lambda0 = Math.toRadians(15);
-       double b = elipsoid_a - elipsoid_a/elipsoid_f;
+       double b = elipsoid_a - (elipsoid_a/elipsoid_f);
           
-       Double[] listPhiLambda = mercator_XY_BLH(e, n, no, eo, fo, phi0, lambda0, elipsoid_a, b);
-       altitude = 0.;
+       Double[] listPhiLambda = mercator_XY_BLH(e, n, no, eo, fo, phi0, lambda0, elipsoid_a, b);      
        Double[] value = new Double[3];
        value[0] = listPhiLambda[0];
        value[1] = listPhiLambda[1];
-       value[2] = 0.;          
+       value[2] = altitude;          
        return value;
     }    
     
@@ -412,11 +484,10 @@
                 
         double e2 = (Math.pow(elipsoid_a,2) - Math.pow(b, 2)) / Math.pow(elipsoid_a,2);
         double n = (elipsoid_a - b) / (elipsoid_a + b);
-        double sinphi = Math.sin(phi);
-        double sinphi2 = Math.pow(sinphi,2);
+        double sinphi = Math.sin(phi);       
         double e2sinphi2 = 1 - e2 * Math.pow(sinphi, 2);
-        double nu = elipsoid_a * fo / Math.pow(e2sinphi2, 2);
-        double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 2) * e2sinphi2);
+        double nu = elipsoid_a * fo / Math.sqrt(e2sinphi2);
+        double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 3));
         double eta2 = nu / rho - 1;
         
         double n2 = Math.pow(n,2);
@@ -461,7 +532,7 @@
 
         n = (elipsoid_a - b) / (elipsoid_a + b);
         double n2 = Math.pow(n,2);
-        double n3 = Math.pow(n, 3);
+        double n3 = Math.pow(n,3);
         double m = 0;
         
         int i1st = 0;
@@ -480,11 +551,10 @@
           } while (Math.abs(n-no-m) > 1.e-4);
 
           double e2 = (Math.pow(elipsoid_a,2) - Math.pow(b, 2)) / Math.pow(elipsoid_a,2);
-          double sinphi = Math.sin(phid);	// tady je zrejme phi
-          double sinphi2 = Math.pow(sinphi,2);
+          double sinphi = Math.sin(phid);	// tady je zrejme phi        
           double e2sinphi2 = 1 - e2 * Math.pow(sinphi, 2);
-          double nu = elipsoid_a * fo / Math.pow(e2sinphi2, 2);
-          double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 2) * e2sinphi2);
+          double nu = elipsoid_a * fo / Math.sqrt(e2sinphi2);
+          double rho = elipsoid_a * fo * (1 - e2) / Math.sqrt( Math.pow(e2sinphi2, 3));
           double eta2 = nu / rho - 1;
           
           double secphid = 1./ Math.cos(phid);
@@ -504,7 +574,7 @@
 
           Double[] value = new Double[2];
           value[0] = phi;
-          value[1] = lambda;
+          value[1] = lambda;                   
           
           return value;
     }
@@ -549,7 +619,7 @@
     public Double[] ellipsoid_BLH_xyz(Double latitude, Double longitude, Double altitude, Double elipsoid_a, Double elipsoid_f) {
        
         //e = excentricita elipsoidu
-        Double e2 = 1 - Math.sqrt(1 - 1 / elipsoid_f);
+        Double e2 = 1 - Math.pow(1 - 1 / elipsoid_f, 2);
         //rho = pricny polomer krivosti
         Double rho = elipsoid_a/Math.sqrt(1 - e2 * Math.pow(Math.sin(latitude),2));          
         //pravouhle souradnice
@@ -557,7 +627,7 @@
         cartesianCoordinate[0] = (rho + altitude) * Math.cos(latitude) * Math.cos(longitude); //x
         cartesianCoordinate[1] = (rho + altitude) * Math.cos(latitude) * Math.sin(longitude); //y
         cartesianCoordinate[2] = ((1-e2)*rho + altitude) * Math.sin(latitude);  //z
-        
+                
         return cartesianCoordinate;
     }
     
@@ -587,7 +657,7 @@
      */
     public Double[] bessel_BLH_xyz(Double latitude, Double longitude, Double altitude) {                
        
-        Double[] cartesianCoordinate = ellipsoid_BLH_xyz(latitude, longitude, altitude, this.ELIPSOID_BESSEL_A, ELIPSOID_BESSEL_F);        
+        Double[] cartesianCoordinate = ellipsoid_BLH_xyz(latitude, longitude, altitude, ELIPSOID_BESSEL_A, ELIPSOID_BESSEL_F);        
         return cartesianCoordinate;
     }
     
@@ -597,7 +667,7 @@
      */
     public Double[] bessel_xyz_BLH(Double x, Double y, Double z) {        
      
-        Double[] geodeticCoordinate = ellipsoid_xyz_BLH(x,y, z, ELIPSOID_WGS84_A, ELIPSOID_WGS84_F);
+        Double[] geodeticCoordinate = ellipsoid_xyz_BLH(x,y, z, ELIPSOID_BESSEL_A, ELIPSOID_BESSEL_F);
         return geodeticCoordinate;
       }        
     



