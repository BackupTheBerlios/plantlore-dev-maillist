From lada at mail.berlios.de  Mon Oct  9 17:10:44 2006
From: lada at mail.berlios.de (lada at mail.berlios.de)
Date: Mon, 9 Oct 2006 17:10:44 +0200
Subject: [Plantlore-dev] r848 -
	trunk/documentation/release/uzivatelska/complete
Message-ID: <200610091510.k99FAiA0019921@sheep.berlios.de>

Author: lada
Date: 2006-10-09 17:10:42 +0200 (Mon, 09 Oct 2006)
New Revision: 848

Modified:
   trunk/documentation/release/uzivatelska/complete/userDocumentation.odt
Log:
Add some information about creating database user.

Modified: trunk/documentation/release/uzivatelska/complete/userDocumentation.odt
===================================================================
(Binary files differ)



From krater at mail.berlios.de  Fri Oct 13 15:49:33 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Fri, 13 Oct 2006 15:49:33 +0200
Subject: [Plantlore-dev] r849 - in trunk/src/net/sf/plantlore: common l10n
Message-ID: <200610131349.k9DDnXf7015388@sheep.berlios.de>

Author: krater
Date: 2006-10-13 15:49:33 +0200 (Fri, 13 Oct 2006)
New Revision: 849

Modified:
   trunk/src/net/sf/plantlore/common/DefaultEscapeKeyPressed.java
   trunk/src/net/sf/plantlore/l10n/Plantlore.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
Log:
ESCKeyPressed ignores descendands of JComboBox.
Properties updated a bit.

Modified: trunk/src/net/sf/plantlore/common/DefaultEscapeKeyPressed.java
===================================================================
--- trunk/src/net/sf/plantlore/common/DefaultEscapeKeyPressed.java	2006-10-09 15:10:42 UTC (rev 848)
+++ trunk/src/net/sf/plantlore/common/DefaultEscapeKeyPressed.java	2006-10-13 13:49:33 UTC (rev 849)
@@ -33,6 +33,10 @@
 	private AbstractAction action;
         
         private void installMe(Component component) {
+            // Do not add this behaviour to components inheriting from JComboBox.
+            if(component instanceof javax.swing.JComboBox)
+                return;
+                
             component.addKeyListener(this);
             if (component instanceof Container)
                 for (Component c : ((Container)component).getComponents() )

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-10-09 15:10:42 UTC (rev 848)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore.properties	2006-10-13 13:49:33 UTC (rev 849)
@@ -191,17 +191,17 @@
 OCCURRENCE.herbarium = Herbarium
 OCCURRENCE.note = Note of occurrence
 OCCURRENCE.metadata = Project (occurrence)
-HABITAT.territory = Territory (habitat)
-HABITAT.phytochorion = Phytochorion (habitat)
+HABITAT.territory = Territory (locality)
+HABITAT.phytochorion = Phytochorion (locality)
 HABITAT.phytochorion.code=Code
-HABITAT.nearestVillage = Village (habitat)
+HABITAT.nearestVillage = Village (locality)
 HABITAT.quadrant = Quadrant
 HABITAT.description = Place description
 HABITAT.country = Country
 HABITAT.altitude = Altitude
 HABITAT.latitude = Latitude
 HABITAT.longitude = Longitude
-HABITAT.note = Note of habitat
+HABITAT.note = Note to locality
 
 PUBLICATION.collectionName = Collection
 PUBLICATION.collectionYearPublication = Year of publication
@@ -603,7 +603,7 @@
 Occurrence = Occurrence
 Occurrence.unitIdDb = Database ID
 Occurrence.unitValue = Unique ID
-Occurrence.habitat = Habitat
+Occurrence.habitat = Locality
 Occurrence.plant = Plant
 Occurrence.yearCollected = Year
 Occurrence.monthCollected = Month
@@ -1702,7 +1702,7 @@
 
 Overview.Tree.Search=Search
 
-Overview.Tree.RefreshTT=Reload the whole habitat tree
+Overview.Tree.RefreshTT=Reload the whole locality tree
 
 Overview.Tree.Refresh=Reload
 
@@ -1714,7 +1714,7 @@
 
 Overview.Detail.Loading=Loading detail...
 
-Overview.Tree.LoadingHabitats=Loading habitats...
+Overview.Tree.LoadingHabitats=Loading localities...
 
 Overview.Message.LoadingOccurrences=Loading occurrences...
 

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-10-09 15:10:42 UTC (rev 848)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-10-13 13:49:33 UTC (rev 849)
@@ -126,7 +126,7 @@
 OCCURRENCE.herbarium = Herb\u00e1\u0159
 OCCURRENCE.note = Pozn\u00e1mka k n\u00e1lezu
 OCCURRENCE.metadata = Projekt (n\u00e1lez) 
-HABITAT.territory = Oblast 
+HABITAT.territory = Oblast (lokalita)
 HABITAT.phytochorion = Fytochorion 
 HABITAT.village = Obec
 HABITAT.quadrant = Kvadrant
@@ -918,7 +918,7 @@
 
 Login.Failed=P\u0159ipojen\u00ED se nezda\u0159ilo\!
 
-Checklist.Title=\u0160krt\u00E1k
+Checklist.Title=\u0160krtac\u00ED seznam
 
 Checklist.Submit=Vlo\u017Eit
 

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-10-09 15:10:42 UTC (rev 848)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_en.properties	2006-10-13 13:49:33 UTC (rev 849)
@@ -241,16 +241,16 @@
 OCCURRENCE.note = Note of occurrence (occ)
 OCCURRENCE.metadata = Project (occ)
 HABITAT.null = Occurrence/Habitat
-HABITAT.territory = Territory (habitat)
-HABITAT.phytochorion = Phytochorion (habitat)
-HABITAT.nearestVillage = Village (habitat)
+HABITAT.territory = Territory (locality)
+HABITAT.phytochorion = Phytochorion (locality)
+HABITAT.nearestVillage = Village (locality)
 HABITAT.quadrant = Quadrant 
 HABITAT.description = Place description 
 HABITAT.country = Country 
 HABITAT.altitude = Altitude
 HABITAT.latitude = Latitude
 HABITAT.longitude = Longitude 
-HABITAT.note = Note of habitat 
+HABITAT.note = Note to locality
 
 
 #Title of border and other titles 
@@ -1329,7 +1329,7 @@
 
 Occurrence.herbarium=Herbarium
 
-Occurrence.habitat=Habitat
+Occurrence.habitat=Locality
 
 Occurrence.deleted=Deleted
 
@@ -1549,7 +1549,7 @@
 
 Overview.Tree.Search=Search
 
-Overview.Tree.RefreshTT=Reload the whole habitat tree
+Overview.Tree.RefreshTT=Reload the whole locality tree
 
 Overview.Tree.Refresh=Reload
 
@@ -1561,7 +1561,7 @@
 
 Overview.Detail.Loading=Loading detail...
 
-Overview.Tree.LoadingHabitats=Loading habitats...
+Overview.Tree.LoadingHabitats=Loading localities...
 
 Overview.Message.LoadingOccurrences=Loading occurrences...
 



From admin at berlios.de  Fri Oct 13 19:02:06 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:02:06 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9095] Components in the Installer
Message-ID: <200610131702.k9DH26EJ005381@unicorn.berlios.de>

Bug #9095, was updated on 2006-Oct-13 19:02
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Components in the Installer

Details: Someone should comment components of the installer a little bit more properly.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9095&group_id=5975


From admin at berlios.de  Fri Oct 13 19:03:16 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:03:16 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9096] Reasonable description of all buttons
Message-ID: <200610131703.k9DH3Gd2007583@unicorn.berlios.de>

Bug #9096, was updated on 2006-Oct-13 19:03
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Reasonable description of all buttons

Details: Update the captions of the default buttons (Ok, Cancel) whenever reasonable.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9096&group_id=5975


From admin at berlios.de  Fri Oct 13 19:05:06 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:05:06 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9097] Announcement about new Occurrences
Message-ID: <200610131705.k9DH56Pt011763@unicorn.berlios.de>

Bug #9097, was updated on 2006-Oct-13 19:05
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 2
Submitted by: krater
Assigned to : fraktalek
Summary: Announcement about new Occurrences

Details: Do not announce a successful insert of new Occurrence records.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9097&group_id=5975


From admin at berlios.de  Fri Oct 13 19:07:07 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:07:07 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9098] Focus cycle
Message-ID: <200610131707.k9DH7740016298@unicorn.berlios.de>

Bug #9098, was updated on 2006-Oct-13 19:07
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Focus cycle

Details: The focus gets stuck in the Coordinates pane.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9098&group_id=5975


From admin at berlios.de  Fri Oct 13 19:08:54 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:08:54 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9099] Unite the default state of JComboBoxes
Message-ID: <200610131708.k9DH8sj3018290@unicorn.berlios.de>

Bug #9099, was updated on 2006-Oct-13 19:08
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 3
Submitted by: krater
Assigned to : fraktalek
Summary: Unite the default state of JComboBoxes

Details: Either the Habitat and the Phytochorion should have a default value, or the Nearest bigger seat should not.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9099&group_id=5975


From admin at berlios.de  Fri Oct 13 19:09:50 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:09:50 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9100] Edit should re-use the Habitat
Message-ID: <200610131709.k9DH9oTP019648@unicorn.berlios.de>

Bug #9100, was updated on 2006-Oct-13 19:09
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Edit
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Edit should re-use the Habitat

Details: Edit should reuse the Habitat (if there is an appropriate habitat already).

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9100&group_id=5975


From admin at berlios.de  Fri Oct 13 19:11:46 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:11:46 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9101] Rearrange the fields
Message-ID: <200610131711.k9DHBkZB022580@unicorn.berlios.de>

Bug #9101, was updated on 2006-Oct-13 19:11
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 4
Submitted by: krater
Assigned to : none
Summary: Rearrange the fields

Details: Rearrange the fields in the dialog so that the Country is followed by the Habitat. This way the most general specification of the locality goes first.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9101&group_id=5975


From admin at berlios.de  Fri Oct 13 19:13:10 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:13:10 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9102] Tooltips for coordinates
Message-ID: <200610131713.k9DHDAA5025020@unicorn.berlios.de>

Bug #9102, was updated on 2006-Oct-13 19:13
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 4
Submitted by: krater
Assigned to : none
Summary: Tooltips for coordinates

Details: Add tooltips explaining how the current locale affects those fields.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9102&group_id=5975


From admin at berlios.de  Fri Oct 13 19:14:52 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:14:52 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9103] Fill in the role automatically
Message-ID: <200610131714.k9DHEqjs027649@unicorn.berlios.de>

Bug #9103, was updated on 2006-Oct-13 19:14
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : fraktalek
Summary: Fill in the role automatically

Details: All Author roles should be "collected" by default.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9103&group_id=5975


From admin at berlios.de  Fri Oct 13 19:17:40 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:17:40 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9104] Search should use substrings
Message-ID: <200610131717.k9DHHeDY001419@unicorn.berlios.de>

Bug #9104, was updated on 2006-Oct-13 19:17
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Search should use substrings

Details: A substring instead of a perfect match should be used in the Search dialog. (LIKE)

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9104&group_id=5975


From admin at berlios.de  Fri Oct 13 19:18:45 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:18:45 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9105] Better duplicity check
Message-ID: <200610131718.k9DHIjHc002649@unicorn.berlios.de>

Bug #9105, was updated on 2006-Oct-13 19:18
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Better duplicity check

Details: System should prevent the User from inserting the same Occurrences twice.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9105&group_id=5975


From admin at berlios.de  Fri Oct 13 19:21:35 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:21:35 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9106] Ordering of results
Message-ID: <200610131721.k9DHLZKT008638@unicorn.berlios.de>

Bug #9106, was updated on 2006-Oct-13 19:21
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: RFE
Priority: 2
Submitted by: krater
Assigned to : none
Summary: Ordering of results

Details: The ordering of Occurrences (ORDER_BY) should use Occurrence.cCreateWhen.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9106&group_id=5975


From admin at berlios.de  Fri Oct 13 19:23:01 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:23:01 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9107] PostgreSecurity
Message-ID: <200610131723.k9DHN1Zb011390@unicorn.berlios.de>

Bug #9107, was updated on 2006-Oct-13 19:23
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : tkovarik
Summary: PostgreSecurity

Details: Postgre should not allow the User to log in with any password ~> Switch off this feature.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9107&group_id=5975


From admin at berlios.de  Fri Oct 13 19:24:50 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:24:50 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9108] Make plantlore.log accessible
Message-ID: <200610131724.k9DHOoJY014597@unicorn.berlios.de>

Bug #9108, was updated on 2006-Oct-13 19:24
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Make plantlore.log accessible

Details: chmod g+rw plantlore.log

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9108&group_id=5975


From admin at berlios.de  Fri Oct 13 19:35:50 2006
From: admin at berlios.de (admin at berlios.de)
Date: Fri, 13 Oct 2006 19:35:50 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7718] Add Help and Cancel buttons to login
	windows
Message-ID: <200610131735.k9DHZoXk029459@unicorn.berlios.de>

Bug #7718, was updated on 2006-Jun-02 04:38
Here is a current snapshot of the bug.

Project: Plantlore
Category: Login
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 3
Submitted by: tkovarik
Assigned to : krater
Summary: Add Help and Cancel buttons to login windows

Details: Add Help and Cancel buttons to Select DB window and Connect to <selected database> window.
User should be able to access help when logging in and it is nice to have a chance to close (cancel) the dialog (other than the cross in the upper right corner)

Follow-Ups:

Date: 2006-Oct-13 19:35
By: krater

Comment:
Nothing to add.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7718&group_id=5975


From krater at mail.berlios.de  Wed Oct 18 08:46:41 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Wed, 18 Oct 2006 08:46:41 +0200
Subject: [Plantlore-dev] r850 - in trunk/src/net/sf/plantlore: client
	client/authors client/login client/overview common middleware server
Message-ID: <200610180646.k9I6kfJp014252@sheep.berlios.de>

Author: krater
Date: 2006-10-18 08:46:40 +0200 (Wed, 18 Oct 2006)
New Revision: 850

Added:
   trunk/src/net/sf/plantlore/common/Resurrector.java
Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManager.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/common/Pair.java
   trunk/src/net/sf/plantlore/middleware/DBLayer.java
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
AppCoreController - Author manager adapted a little bit to make switching between Add/Edit and Author Manager possible.
AuthorManagerView - Uses the Resurrector to bring back the Add/Edit dialog if necessary.
AddEditCtrl - Added code that should be able to 1. switch between Add/Edit and Author manager, and 2. save default values for future use.
Pair has been made serializable.
DBLayer can return the unique identifier of the database now. This identifier cannot be changed.

Resurrector - This code can store a dialog that should be re-opened.

Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -246,6 +246,11 @@
         HabitatTree habitatTreeModel;
         HabitatTreeView habitatTreeView;
         HabitatTreeCtrl habitatTreeCtrl;
+        
+        //AuthorManager
+         AuthorManager authModel;
+	AuthorManagerView authView;
+	AuthorManagerCtrl authCtrl;
 
 	// Bridges
 	ManagerBridge managerBridge = new ManagerBridge();
@@ -374,19 +379,27 @@
 	}
 
 	private void constructDialogs() {
+            
+                // --- AuthorManager ---
+                // Author manager must be created now because it might be invoked from the Add/Edit dialog 
+                authModel = new AuthorManager(model.getDatabase());
+		authView = new AuthorManagerView(authModel, view, true);
+		authCtrl = new AuthorManagerCtrl(authModel, authView);
+		authModel.addObserver(managerBridge);
+            
 		// --- Add ---
 		addModel = new AddEdit(model.getDatabase(), false);
                 addModel.addObserver(managerBridge);
 		addView = new AddEditView(view, true, addModel, false);
 		addView.setTitle(L10n.getString("AddEdit.AddDialogTitle"));
-		addCtrl = new AddEditCtrl(addModel, addView, false);
+		addCtrl = new AddEditCtrl(addModel, addView, false, authView);
 
 		// --- Edit ---
 		editModel = new AddEdit(model.getDatabase(), true);
                 editModel.addObserver(managerBridge);
 		editView = new AddEditView(view, true, editModel, true);
 		editView.setTitle(L10n.getString("AddEdit.EditDialogTitle"));
-		editCtrl = new AddEditCtrl(editModel, editView, true);
+		editCtrl = new AddEditCtrl(editModel, editView, true, authView);
 
 		// --- Search ---
 		searchModel = new Search(model.getDatabase());
@@ -407,6 +420,7 @@
                 habitatTreeView = new HabitatTreeView(view,true,habitatTreeModel);
                 habitatTreeCtrl = new HabitatTreeCtrl(habitatTreeModel, habitatTreeView);
                 habitatTreeModel.addObserver(new HabitatTreeBridge());
+                
 	}
 
 	private void setDatabaseDependentCommandsEnabled(boolean enabled) {
@@ -1271,12 +1285,6 @@
 		}
 
 		public void actionPerformed(ActionEvent e) {
-			AuthorManager authModel = new AuthorManager(model.getDatabase());
-			final AuthorManagerView authView = new AuthorManagerView(authModel, view,
-					true);
-			AuthorManagerCtrl authCtrl = new AuthorManagerCtrl(authModel,
-					authView);
-			authModel.addObserver(managerBridge);
                         authView.setVisible(true);
 		}
 
@@ -1890,6 +1898,9 @@
                                 logger.debug(" # metadata manager ");
                                 if (metadataManagerModel != null )
                                         metadataManagerModel.setDBLayer( dblayer );							
+                                logger.debug(" # author manager ");
+                                if(authModel != null) 
+                                    authModel.setDBLayer( dblayer ); // Author Manager must be notified as well!
                         }//if
                         
                         if (parameter != null && parameter.equals("REFRESH_PLEASE")) {

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManager.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManager.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManager.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -113,6 +113,13 @@
     }
     
     /**
+     * Set another database layer.
+     */
+    public void setDBLayer(DBLayer database) {
+        this.database = database;
+    }
+    
+    /**
      *  Save new author to the database. Information about the author are stored in data fields of this class.
      *  Operation is executed in a separate thread using <code>SwingWorker</code>. Error is set in case of an exception.
      *

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -13,6 +13,7 @@
 import javax.swing.JOptionPane;
 import javax.swing.table.DefaultTableModel;
 import net.sf.plantlore.common.PlantloreHelp;
+import net.sf.plantlore.common.Resurrector;
 import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.l10n.L10n;
 
@@ -32,6 +33,9 @@
     /** Contents of the table with the query result */
     private String[][] tableData;
     
+    
+    protected JDialog dialogToResurrect;
+    
     PlantloreHelp help;
     /**
      * Creates new form AuthorManagerView 
@@ -42,6 +46,25 @@
      */
     public AuthorManagerView(AuthorManager model, JFrame parent, boolean modal) {        
         super(parent, modal);
+        initialize(model);
+    }
+
+    /**
+     * Creates new form AuthorManagerView 
+     * 
+     * @param model     model of the AuthorManager MVC
+     * @param parent    parent of this dialog
+     * @param modal     boolean flag whether the dialog should be modal or not
+     */
+    public AuthorManagerView(AuthorManager model, JDialog parent, boolean modal) {
+        super(parent, modal);
+        initialize(model);
+    }
+    
+    /**
+     * Perform the initialization. This part is the same for both constructors.
+     */
+    private void initialize(AuthorManager model) {
         this.model = model;
         this.model.addObserver(this);         
         initComponents();
@@ -49,7 +72,7 @@
         PlantloreHelp.addKeyHelp(PlantloreHelp.AUTHOR_MANAGER, this.getRootPane());
         PlantloreHelp.addButtonHelp(PlantloreHelp.AUTHOR_MANAGER, this.helpBtn);
         // Center the dialog on the screen
-        this.setLocationRelativeTo(null);        
+        this.setLocationRelativeTo(null);
     }
     
     /** This method is called from within the constructor to
@@ -498,7 +521,7 @@
      */    
     public void close() {
         model.closeActiveQuery();        
-        this.dispose();
+        //this.dispose();
     }
 
     /**
@@ -679,6 +702,27 @@
                                       L10n.getString("Author.NoAuthorSelectedTitle"), JOptionPane.WARNING_MESSAGE);
     }
     
+    
+    //---- DIALOG RESURRECTION BLOCK ----
+    private Resurrector resurrector = new Resurrector();
+    
+    /**
+     * Set the dialog that should be reopened after this dialog is closed.
+     */
+    public void setDialogToRevive(JDialog dialog) {
+        resurrector.setDialog( dialog );
+    }
+
+    public void setVisible(boolean b) {
+        super.setVisible(b);
+        if( !b ) {
+            // Reopen the poor dialog (but do it carefully!)
+            resurrector.bringItBackIfPossible();
+        }
+    }
+    
+
+    
     // Variables declaration - do not modify//GEN-BEGIN:variables
     protected javax.swing.JButton addBtn;
     private javax.swing.JRadioButton ascRadio;

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -465,6 +465,14 @@
 			else
 				this.wrappedDBLayer = (DBLayer) Spin.off( db );
 		}
+                
+                
+                synchronized public String getUniqueDatabaseIdentifier() throws RemoteException {
+                    if(wrappedDBLayer != null)
+                        return wrappedDBLayer.getUniqueDatabaseIdentifier();
+                    else
+                        return null;
+                }
 
 		synchronized public User initialize(String dbID, String user, String password) throws DBLayerException, RemoteException {
 			verifyValidity();

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -9,6 +9,7 @@
 
 package net.sf.plantlore.client.overview;
 
+import com.sun.org.apache.bcel.internal.generic.TABLESWITCH;
 import java.awt.BorderLayout;
 import java.awt.Color;
 import java.awt.event.ActionEvent;
@@ -24,6 +25,7 @@
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
+import java.util.Hashtable;
 
 import javax.swing.AbstractAction;
 import javax.swing.JComboBox;
@@ -39,9 +41,17 @@
 import javax.swing.event.DocumentListener;
 import javax.swing.text.BadLocationException;
 import com.toedter.calendar.JCalendar;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import net.sf.plantlore.client.authors.AuthorManagerView;
 import net.sf.plantlore.common.DefaultExceptionHandler;
 import net.sf.plantlore.common.Dispatcher;
 import net.sf.plantlore.common.PostTaskAction;
+import net.sf.plantlore.common.StandardAction;
 import net.sf.plantlore.common.Task;
 import org.apache.log4j.Logger;
 
@@ -50,7 +60,6 @@
 import net.sf.plantlore.common.AutoComboBoxNG3;
 import net.sf.plantlore.common.AutoTextArea;
 import net.sf.plantlore.common.DefaultEscapeKeyPressed;
-import net.sf.plantlore.common.DefaultReconnectDialog;
 import net.sf.plantlore.common.Pair;
 import net.sf.plantlore.common.exception.DBLayerException;
 import net.sf.plantlore.common.record.Occurrence;
@@ -59,6 +68,7 @@
 /**
  *
  * @author reimei
+ *@author kaimu
  */
 public class AddEditCtrl {
     private Logger logger;
@@ -66,6 +76,7 @@
     private boolean inAddMode = true;
     private AddEdit model;
     private AddEditView view;
+    private AuthorManagerView authView;
     private TransformationChangeView transformationView;
     public final static int MAXIMUM_FRACTION_DIGITS = 3;
     public final static int MAXIMUM_INTEGER_DIGITS = 9;
@@ -75,12 +86,17 @@
     private ChecklistView checklistView;
     
     
-    /** Creates a new instance of AddEditCtrl */
-    public AddEditCtrl(AddEdit model, AddEditView view, boolean edit) {
+    /** 
+     * Creates a new instance of AddEditCtrl 
+     *TODO: Make proper Javadoc here!
+     * authView will be opened if the User wishes to edit the list of Authors
+     */
+    public AddEditCtrl(AddEdit model, AddEditView view, boolean edit, AuthorManagerView authView) {
         this.inEditMode = edit;
         this.inAddMode = ! edit;
         this.model = model;
         this.view = view;
+        this.authView = authView;
         
         logger = Logger.getLogger(this.getClass().getPackage().getName());                
 
@@ -128,6 +144,7 @@
         view.calendarButton.setAction(new CalendarAction());
         view.settingsButton.setAction(new SettingsAction());
         view.gpsChangeButton.setAction(new ChangeCoordinateSystemAction());
+        //view.authorButton.setAction(new AuthorManagerAction());
 //        view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
     }
     
@@ -147,7 +164,26 @@
 		}
     }
     
+    class AuthorManagerAction extends AbstractAction {
+        
+        public AuthorManagerAction() {
+            putValue(NAME, L10n.getString("Overview.MenuDataAuthors"));
+            putValue(SHORT_DESCRIPTION, L10n.getString("Overview.MenuDataAuthorsTT"));
+            putValue(MNEMONIC_KEY, L10n.getMnemonic("Overview.MenuDataAuthors"));
+        }
+        
+        public void actionPerformed(ActionEvent isUseless) {
+            // Make place for the (also modal) Author manager
+            view.setVisible(false); // invokeLater??
+            // Remind the Author manager to reopen this dialog
+            authView.setDialogToRevive( view );
+            // Display the Author manager
+            authView.setVisible(true);
+        }
+        
+    }
     
+    
     class CommonActionListener implements ActionListener {
         public void actionPerformed(ActionEvent e) {
             JComboBox c = null;
@@ -790,7 +826,210 @@
                 view.loadComponetCoordinate();
             }
         }
-    }        
+    }    
+    
+    
+    /**
+     * The holder object of most important fields in the dialog whose state should be stored.
+     * The list of currently selected authors is not saved because that component may be a subject to change.
+     *
+     * @author kaimu
+     */
+    class InterestingFields implements java.io.Serializable {
+        public Pair<String, Integer> territory, phytochorion, town, publication, project;
+        public String description, locationNote, occurrenceNote, latitude, longitude, altitude, country, time, day, quadrant, herbarium, source;
+        public Integer month, year;
+    }
+    
+    /**
+     * This action stores the default values in the dialog for future revival.
+     * The revival is planned after the application is restarted (because there is another mechanism
+     * that preserves the currently inserted values in some fields of the dialog - implemented by Jakub Kotowski).
+     *
+     * @author Erik Kratochv?l
+     */
+    class RememberDefaultValuesAction extends StandardAction {
+        
+        public final String RESTORE = "RestoreTheDefaultValues";
+        public final String FORGET = "ForgetTheDefaultValues";
+        public final String REMEMBER = "RememberTheDefaultValues";
+        
+        
+        private String defaultValuesFileName; {
+		String userHome = System.getProperty("user.home"),
+		osName = System.getProperty("os.name"),
+		plantloreDirName = (osName.equals("Linux") ? "." : "") + net.sf.plantlore.client.Plantlore.PLANTLORE, 
+		plantloreConfDir = userHome+File.separator+plantloreDirName;
+		
+		File plantloreConfDirFile = new File(plantloreConfDir);
+		if (!plantloreConfDirFile.exists())
+			plantloreConfDirFile.mkdir();
+		
+		defaultValuesFileName = plantloreConfDir + File.separator + "add-default";
+	}
+        
+        /*
+         * The hashtable stores default values for different databases (these databases are
+         * recognized by their Unique Identifier).
+         *
+         * Thus the default values may differ for each database the User works with.
+         * It was a necessary step because some of the stored values may not be in the other database at all.
+         */
+        private Hashtable<String, InterestingFields> storedValues = new Hashtable<String, InterestingFields>(8);;
+        
+        /**
+         * Create a new Action that is capable of remembering the list of default values.
+         * Also note that when first constructed it restores the state of the dialog to its previous state.
+         */
+        RememberDefaultValuesAction() {
+            super("Add.Remember");
+        }
+
+        /**
+         * Load the table with default values.
+         */
+        private void load()
+        throws IOException, ClassNotFoundException {
+		ObjectInputStream ois = new ObjectInputStream( new FileInputStream(defaultValuesFileName) );
+		storedValues = (Hashtable<String, InterestingFields>) ois.readObject();
+		ois.close();
+	}
+            
+        /**
+         * Store the table with default values.
+         */
+        private void save()
+        throws IOException {
+		ObjectOutputStream oos = new ObjectOutputStream( new FileOutputStream(defaultValuesFileName) );
+		oos.writeObject( storedValues );
+		oos.close();
+	}
+          
+        /**
+         * @return null if the string is null or empty (ie. "")
+         */
+        private String evaluate(String s) {
+            if( "".equals(s) ) 
+                return null;
+            return s;
+        }
+
+        /**
+         * Take action!
+         */
+        public void actionPerformed(ActionEvent e) {
+            try {
+                String command = e.getActionCommand();
+                // ===== Restore the list of default values. ===== 
+                if( RESTORE.equals(command) ) {
+                     load();
+                    if( storedValues == null )
+                        // There are no stored values yet.
+                        storedValues = new Hashtable<String, InterestingFields>(8);
+
+                    // Look for default values that were saved for the database we are currently working with.
+                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                    if( databaseID == null)
+                        // We are propably not connected to a database yet. This should never happen.
+                        return;
+
+                    // Obtain the default values.
+                    InterestingFields defaults = storedValues.get( databaseID );
+                    if( defaults == null)
+                        // No default values stored for this particular database. Never mind.
+                        return;
+
+                    // Now, do some reviving.
+                    // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
+                    // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
+                    if(defaults.territory != null)
+                        view.territoryNameCombo.setSelectedItem( defaults.territory );
+                    if(defaults.phytochorion != null)
+                        view.phytNameCombo.setSelectedItem( defaults.phytochorion );
+                    if(defaults.town != null)
+                        view.townComboBox.setSelectedItem( defaults.town );
+                    if(defaults.project != null)
+                        view.projectCombo.setSelectedItem( defaults.project );
+                    if(defaults.publication != null)
+                        view.publicationCombo.setSelectedItem( defaults.publication );
+
+                    if(defaults.quadrant != null)
+                        view.quadrantTextField.setText( defaults.quadrant );
+                    if(defaults.country != null)
+                        view.phytCountryCombo.setSelectedItem( defaults.country );
+                    if(defaults.herbarium != null)
+                        view.herbariumTextField.setText( defaults.herbarium );
+                    if(defaults.source != null)
+                        view.sourceCombo.setSelectedItem(defaults.source);
+                    if(defaults.latitude != null)
+                        view.latitudeTextField.setText( defaults.latitude );
+                    if(defaults.altitude != null)
+                        view.altitudeTextField.setText( defaults.altitude );
+                    if(defaults.longitude != null)
+                        view.longitudeTextField.setText( defaults.longitude );
+                    if(defaults.time != null)
+                        view.timeTextField.setText( defaults.time );
+                    if(defaults.month != null)
+                        view.monthChooser.setMonth( defaults.month );
+                    if(defaults.day != null)
+                        view.dayTextField.setText( defaults.day );
+                    if(defaults.year != null)
+                        view.yearSpinner.setValue( defaults.year );
+
+                    if(defaults.description != null)
+                        view.descriptionArea.setText( defaults.description );
+                    if(defaults.locationNote != null)
+                        view.locationNoteArea.setText( defaults.locationNote );
+                    if(defaults.occurrenceNote != null)
+                        view.occurrenceNoteArea.setText( defaults.occurrenceNote );
+                    
+                } 
+                // ===== Forget the list of default values. ===== 
+                else if( FORGET.equals(command)) {
+                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                    storedValues.remove( databaseID );
+                    save();
+                }
+                // ===== Remember the list of default values. ===== 
+                else {
+                    // Gather the information from dialogs.
+                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                    storedValues.remove( databaseID );
+                    InterestingFields defaults = new InterestingFields();
+
+                    defaults.territory = (Pair<String, Integer>) view.territoryNameCombo.getSelectedItem();
+                    defaults.phytochorion = (Pair<String, Integer>) view.phytNameCombo.getSelectedItem();
+                    defaults.town = (Pair<String, Integer>) view.townComboBox.getSelectedItem();
+                    defaults.publication = (Pair<String, Integer>) view.publicationCombo.getSelectedItem();
+                    defaults.project = (Pair<String, Integer>) view.projectCombo.getSelectedItem();
+                    defaults.quadrant = evaluate( view.quadrantTextField.getText() );
+                    defaults.country = evaluate( (String) view.phytCountryCombo.getSelectedItem() );
+                    defaults.herbarium = evaluate( view.herbariumTextField.getText() );
+                    defaults.source = evaluate( (String) view.sourceCombo.getSelectedItem() );
+                    defaults.latitude = evaluate( view.latitudeTextField.getText() );
+                    defaults.longitude = evaluate( view.longitudeTextField.getText() );
+                    defaults.altitude = evaluate( view.altitudeTextField.getText() ); 
+                    defaults.time = evaluate( view.timeTextField.getText() );
+                    defaults.day = evaluate( view.dayTextField.getText() );
+                    defaults.month = view.monthChooser.getMonth();
+                    defaults.year = (Integer) view.yearSpinner.getValue();
+                    defaults.description = evaluate( view.descriptionArea.getText() );
+                    defaults.locationNote = evaluate( view.locationNoteArea.getText() );
+                    defaults.occurrenceNote = evaluate( view.occurrenceNoteArea.getText() );
+
+                    storedValues.put( databaseID, defaults );
+                    // Store them.
+                    save(); 
+                }
+            } catch(Exception x) {
+                //  Never mind..
+            }
+        }
+        
+        
+    }
+    
+    
 }
 
 

Modified: trunk/src/net/sf/plantlore/common/Pair.java
===================================================================
--- trunk/src/net/sf/plantlore/common/Pair.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/common/Pair.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -12,7 +12,7 @@
  *
  * @author Jakub
  */
-public class Pair<A, B> {
+public class Pair<A, B> implements java.io.Serializable {
     private A a;
     private B b;
     

Added: trunk/src/net/sf/plantlore/common/Resurrector.java
===================================================================
--- trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -0,0 +1,38 @@
+/*
+ * Resurrector.java
+ *
+ * Created on 17. ??jen 2006, 16:49
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.common;
+
+import javax.swing.JDialog;
+
+/**
+ *
+ * @author kaimu
+ */
+public class Resurrector {
+    
+    private JDialog dialog;
+    
+    
+    public synchronized void setDialog(JDialog dialog) {
+        this.dialog = dialog;
+    }
+    
+    
+    public synchronized void bringItBackIfPossible() {
+        java.awt.EventQueue.invokeLater(new Runnable() {
+            public void run() {
+                if( dialog != null )
+                    dialog.setVisible( true );
+                dialog = null;
+            }
+        });
+    }
+    
+}

Modified: trunk/src/net/sf/plantlore/middleware/DBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/middleware/DBLayer.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -398,5 +398,12 @@
      * @throws RemoteException	in case network error occurred
      */
     public String getDescription() throws RemoteException;
+    
+    
+    /**
+     * @return	the unique identifier of the database you are currently working with
+     * @throws RemoteException	in case network error occurred
+     */
+    public String getUniqueDatabaseIdentifier() throws RemoteException;
            
 }

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-10-13 13:49:33 UTC (rev 849)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-10-18 06:46:40 UTC (rev 850)
@@ -261,6 +261,11 @@
         return plantloreUser;
     }
     
+    
+    public String getUniqueDatabaseIdentifier() {
+        return this.databaseID;
+    }
+    
     /**
      *  Initialization of DBLayer when creating new DB (login without database prefix)
      *



From krater at mail.berlios.de  Wed Oct 18 14:46:59 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Wed, 18 Oct 2006 14:46:59 +0200
Subject: [Plantlore-dev] r851 - in trunk/src/net/sf/plantlore: client
	client/authors client/overview common
Message-ID: <200610181246.k9ICkxPu006567@sheep.berlios.de>

Author: krater
Date: 2006-10-18 14:46:58 +0200 (Wed, 18 Oct 2006)
New Revision: 851

Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManager.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/overview/AddEditView.form
   trunk/src/net/sf/plantlore/client/overview/AddEditView.java
   trunk/src/net/sf/plantlore/common/Resurrector.java
Log:
Author Manager is created only once in the whole program (as it should have been a long time ago!!)

The Add/Edit dialog contains a button that allows the User to display the Author Manager directly from the Add/Edit Dialog. This feature must be tested properly (especially those annoying cases like deleting an author that is still selected in the Add dialog). Anyway, the Author manager can be opened from Add/Edit and any reasonable work should yield expected results (thanks to the immediate back-propagation of information among dialogs ~ one of our more brilliant ideas [and there is just a handful of them, trust me]). The Resurrector must have been changed in order to achieve the desired functionality.



Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -380,26 +380,21 @@
 
 	private void constructDialogs() {
             
-                // --- AuthorManager ---
-                // Author manager must be created now because it might be invoked from the Add/Edit dialog 
-                authModel = new AuthorManager(model.getDatabase());
-		authView = new AuthorManagerView(authModel, view, true);
-		authCtrl = new AuthorManagerCtrl(authModel, authView);
-		authModel.addObserver(managerBridge);
+
             
 		// --- Add ---
 		addModel = new AddEdit(model.getDatabase(), false);
                 addModel.addObserver(managerBridge);
 		addView = new AddEditView(view, true, addModel, false);
 		addView.setTitle(L10n.getString("AddEdit.AddDialogTitle"));
-		addCtrl = new AddEditCtrl(addModel, addView, false, authView);
+		addCtrl = new AddEditCtrl(addModel, addView, false);
 
 		// --- Edit ---
 		editModel = new AddEdit(model.getDatabase(), true);
                 editModel.addObserver(managerBridge);
 		editView = new AddEditView(view, true, editModel, true);
 		editView.setTitle(L10n.getString("AddEdit.EditDialogTitle"));
-		editCtrl = new AddEditCtrl(editModel, editView, true, authView);
+		editCtrl = new AddEditCtrl(editModel, editView, true);
 
 		// --- Search ---
 		searchModel = new Search(model.getDatabase());
@@ -421,6 +416,15 @@
                 habitatTreeCtrl = new HabitatTreeCtrl(habitatTreeModel, habitatTreeView);
                 habitatTreeModel.addObserver(new HabitatTreeBridge());
                 
+                // --- AuthorManager ---
+                // Author manager must be created now because it might be invoked from the Add/Edit dialog 
+                authModel = new AuthorManager(model.getDatabase());
+		authView = new AuthorManagerView(authModel, view, true);
+		authCtrl = new AuthorManagerCtrl(authModel, authView);
+		authModel.addObserver(managerBridge);
+                
+                editCtrl.setAuthorManager( authView );
+                addCtrl.setAuthorManager( authView );
 	}
 
 	private void setDatabaseDependentCommandsEnabled(boolean enabled) {

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManager.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManager.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManager.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -103,6 +103,8 @@
     public static final int EDIT = 2;
     public static final int DELETE = 3;
     
+    public static final String RELOAD = "ReloadTheListOfAuthors";
+    
     /**
      *  Creates a new instance of AuthorManager.
      *  @param database Instance of a database management object
@@ -117,6 +119,7 @@
      */
     public void setDBLayer(DBLayer database) {
         this.database = database;
+        // TODO: Kovo must add some code that might possibly restart some queries!
     }
     
     /**
@@ -313,11 +316,11 @@
         } else {
             query.addOrder(PlantloreConstants.DIRECT_DESC, field);
         }
-        int resultId = 0;
+        int resultId = -1;
         // Execute query
         resultId = database.executeQuery(query);
         if (this.activeSelectQuery != null) {
-            database.closeQuery(this.activeSelectQuery);
+            database.closeQuery(this.activeSelectQuery); // This may throw an exception if the database layer is switched...
         }
         // Save the query as the active search query        
         this.activeSelectQuery = query;        
@@ -339,8 +342,9 @@
                 logger.error("RemoteException caught while closing select query. Details: "+ex.getMessage());
                 ex.printStackTrace();
                 return;                    
-            }            
-            this.activeSelectQuery = null;
+            } finally { // Thank God I haven't seen much of kovo's programming style or I might just have commited suicide.
+                this.activeSelectQuery = null;
+            }
         }
     }
     
@@ -369,7 +373,7 @@
      * @param count number of rows to retrieve
      */
     public void processResults(int from, int count) throws RemoteException, DBLayerException {
-        if (this.resultId != 0) {
+        if (this.resultId >= 0) {
             logger.info("Processing "+count+" results from "+from);
             logger.debug("Rows in the result: "+getResultRows());
             // Find out how many rows we can retrieve - it cannot be more than number of rows in the result

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerCtrl.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -57,7 +57,16 @@
         view.rowsAddPropertyChangeListener(new RowsPropertyChangeListener());
         view.sortAddFocusListener(new SortComboFocusListener());
         view.sortDirectionAddFocusListener(new SortDirectionRadioFocusListener());
-
+        
+        /*
+         * Here was a short comment devoted to a careful evalutation of programming skills of the author of this class 
+         * but since Google Code Search exists it must have gone.
+         */
+        model.setCurrentFirstRow(1);
+    }
+    
+    
+    public void thisUsedToLiveInTheConstructor() {
         Task task = model.searchAuthor(true);
         task.setPostTaskAction(new PostTaskAction() {
             public void afterStopped(Object value) {
@@ -77,8 +86,10 @@
                 }
             }            
         });
-        Dispatcher.getDispatcher().dispatch(task, view, false);        
+        Dispatcher.getDispatcher().dispatch(task, view, false);
     }
+            
+            
     
     /**
      * ActionListener class controlling the <b>close</b> button on the form.

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -407,8 +407,11 @@
     /**
      *  Method used for updating the view (called when the model has changed and notifyObservers() was called)
      */
-    public void update(Observable obs, Object obj) {       
-        displayResults(model.getData());
+    public void update(Observable obs, Object obj) {     
+
+            // Do something something Kovo might know what it does..
+            displayResults(model.getData());
+
     }
 
     /**
@@ -517,11 +520,11 @@
     }
 
     /**
-     *  Close this dialog.
+     *  Hide this dialog.
      */    
     public void close() {
         model.closeActiveQuery();        
-        //this.dispose();
+        this.setVisible(false);
     }
 
     /**
@@ -710,11 +713,17 @@
      * Set the dialog that should be reopened after this dialog is closed.
      */
     public void setDialogToRevive(JDialog dialog) {
+        System.out.println("Dialog set to " + dialog.getTitle());
         resurrector.setDialog( dialog );
     }
 
     public void setVisible(boolean b) {
+        if( b )
+            // Update the list of authors.
+            searchBtn.doClick();
+        
         super.setVisible(b);
+        
         if( !b ) {
             // Reopen the poor dialog (but do it carefully!)
             resurrector.bringItBackIfPossible();

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -91,12 +91,12 @@
      *TODO: Make proper Javadoc here!
      * authView will be opened if the User wishes to edit the list of Authors
      */
-    public AddEditCtrl(AddEdit model, AddEditView view, boolean edit, AuthorManagerView authView) {
+    public AddEditCtrl(AddEdit model, AddEditView view, boolean edit) {
         this.inEditMode = edit;
         this.inAddMode = ! edit;
         this.model = model;
         this.view = view;
-        this.authView = authView;
+        this.authView = null;
         
         logger = Logger.getLogger(this.getClass().getPackage().getName());                
 
@@ -144,7 +144,7 @@
         view.calendarButton.setAction(new CalendarAction());
         view.settingsButton.setAction(new SettingsAction());
         view.gpsChangeButton.setAction(new ChangeCoordinateSystemAction());
-        //view.authorButton.setAction(new AuthorManagerAction());
+        view.authButton.setAction(new AuthorManagerAction());
 //        view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
     }
     
@@ -164,6 +164,13 @@
 		}
     }
     
+    
+    
+    public void setAuthorManager(AuthorManagerView m) {
+        this.authView = m;
+    }
+    
+    
     class AuthorManagerAction extends AbstractAction {
         
         public AuthorManagerAction() {
@@ -173,12 +180,27 @@
         }
         
         public void actionPerformed(ActionEvent isUseless) {
+            // Do nothing if the Author manager View is not supplied.
+            if( authView == null )
+                return;
+            
             // Make place for the (also modal) Author manager
-            view.setVisible(false); // invokeLater??
+            java.awt.EventQueue.invokeLater(new Runnable() {
+                public void run() {
+                    view.setVisible(false);
+                }
+            });
+            
             // Remind the Author manager to reopen this dialog
             authView.setDialogToRevive( view );
+            
             // Display the Author manager
-            authView.setVisible(true);
+            java.awt.EventQueue.invokeLater(new Runnable() {
+                public void run() {
+                    authView.setVisible(true);
+                }
+            });
+            
         }
         
     }

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-18 12:46:58 UTC (rev 851)
@@ -122,8 +122,8 @@
                       <Group type="102" alignment="0" attributes="0">
                           <EmptySpace max="-2" attributes="0"/>
                           <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="jPanel7" alignment="0" pref="921" max="32767" attributes="3"/>
-                              <Component id="jPanel5" alignment="0" pref="921" max="32767" attributes="1"/>
+                              <Component id="jPanel7" alignment="0" pref="918" max="32767" attributes="3"/>
+                              <Component id="jPanel5" alignment="0" pref="918" max="32767" attributes="1"/>
                           </Group>
                       </Group>
                   </Group>
@@ -204,7 +204,7 @@
                                                       <EmptySpace min="-2" pref="434" max="-2" attributes="0"/>
                                                   </Group>
                                                   <Group type="102" attributes="0">
-                                                      <Component id="jScrollPane2" pref="572" max="32767" attributes="1"/>
+                                                      <Component id="jScrollPane2" pref="551" max="32767" attributes="1"/>
                                                       <EmptySpace max="-2" attributes="0"/>
                                                   </Group>
                                               </Group>
@@ -591,13 +591,13 @@
                                       <Group type="103" groupAlignment="0" attributes="0">
                                           <Group type="102" alignment="0" attributes="0">
                                               <Component id="checklistButton" linkSize="21" min="-2" max="-2" attributes="0"/>
-                                              <EmptySpace pref="235" max="32767" attributes="0"/>
+                                              <EmptySpace pref="342" max="32767" attributes="0"/>
                                               <Component id="clearOccurrenceButton" linkSize="21" min="-2" max="-2" attributes="0"/>
                                           </Group>
                                           <Component id="jPanel4" min="-2" max="-2" attributes="1"/>
                                       </Group>
                                   </Group>
-                                  <Component id="jScrollPane1" pref="648" max="32767" attributes="1"/>
+                                  <Component id="jScrollPane1" pref="660" max="32767" attributes="1"/>
                               </Group>
                               <EmptySpace max="-2" attributes="0"/>
                               <Group type="103" groupAlignment="0" attributes="0">
@@ -610,11 +610,11 @@
                                       </Group>
                                       <EmptySpace max="-2" attributes="0"/>
                                       <Group type="103" groupAlignment="0" attributes="0">
-                                          <Component id="herbariumTextField" alignment="0" pref="136" max="32767" attributes="1"/>
-                                          <Component id="publicationCombo" alignment="0" pref="136" max="32767" attributes="1"/>
-                                          <Component id="projectCombo" alignment="0" pref="136" max="32767" attributes="1"/>
+                                          <Component id="herbariumTextField" alignment="0" pref="148" max="32767" attributes="1"/>
+                                          <Component id="publicationCombo" alignment="0" pref="148" max="32767" attributes="1"/>
+                                          <Component id="projectCombo" alignment="0" pref="148" max="32767" attributes="1"/>
                                           <Group type="102" alignment="0" attributes="0">
-                                              <Component id="sourceCombo" pref="136" max="32767" attributes="1"/>
+                                              <Component id="sourceCombo" pref="148" max="32767" attributes="1"/>
                                               <EmptySpace max="-2" attributes="0"/>
                                           </Group>
                                       </Group>
@@ -1044,9 +1044,11 @@
                           <Component id="helpButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="settingsButton" linkSize="12" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace min="-2" pref="64" max="-2" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
+                          <Component id="authButton" linkSize="12" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
                           <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="353" max="32767" attributes="0"/>
+                          <EmptySpace pref="412" max="32767" attributes="0"/>
                           <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>
@@ -1064,8 +1066,9 @@
                               <Component id="cancelButton" linkSize="13" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="okButton" linkSize="13" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="requiredInfoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
+                              <Component id="authButton" alignment="3" min="-2" max="-2" attributes="0"/>
                           </Group>
-                          <EmptySpace pref="13" max="32767" attributes="0"/>
+                          <EmptySpace pref="16" max="32767" attributes="0"/>
                       </Group>
                   </Group>
                 </DimensionLayout>
@@ -1111,6 +1114,14 @@
                     <Property name="text" type="java.lang.String" value="requiredInfoLabel"/>
                   </Properties>
                 </Component>
+                <Component class="javax.swing.JButton" name="authButton">
+                  <Properties>
+                    <Property name="text" type="java.lang.String" value="aut"/>
+                  </Properties>
+                  <AuxValues>
+                    <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+                  </AuxValues>
+                </Component>
               </SubComponents>
             </Container>
             <Container class="javax.swing.JPanel" name="extendedPanel">
@@ -1141,7 +1152,7 @@
                   <Group type="103" groupAlignment="0" attributes="0">
                       <Group type="102" alignment="0" attributes="0">
                           <EmptySpace max="-2" attributes="0"/>
-                          <Component id="jScrollPane6" pref="909" max="32767" attributes="0"/>
+                          <Component id="jScrollPane6" pref="908" max="32767" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                       </Group>
                   </Group>

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -181,6 +181,7 @@
         helpButton = new javax.swing.JButton();
         settingsButton = new javax.swing.JButton();
         requiredInfoLabel = new javax.swing.JLabel();
+        authButton = new javax.swing.JButton();
         extendedPanel = new javax.swing.JPanel();
         jScrollPane6 = new javax.swing.JScrollPane();
         occurrenceTable = new javax.swing.JTable();
@@ -342,7 +343,7 @@
                                         .add(placeDescriptionLabel)
                                         .add(434, 434, 434))
                                     .add(jPanel5Layout.createSequentialGroup()
-                                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
+                                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                                 .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                     .add(locationNoteLabel)
@@ -534,10 +535,10 @@
                         .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel7Layout.createSequentialGroup()
                                 .add(checklistButton)
-                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 235, Short.MAX_VALUE)
+                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 342, Short.MAX_VALUE)
                                 .add(clearOccurrenceButton))
                             .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
-                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE))
+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(jPanel7Layout.createSequentialGroup()
@@ -548,11 +549,11 @@
                             .add(herbariumLabel))
                         .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                         .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                            .add(herbariumTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
-                            .add(publicationCombo, 0, 136, Short.MAX_VALUE)
-                            .add(projectCombo, 0, 136, Short.MAX_VALUE)
+                            .add(herbariumTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
+                            .add(publicationCombo, 0, 148, Short.MAX_VALUE)
+                            .add(projectCombo, 0, 148, Short.MAX_VALUE)
                             .add(jPanel7Layout.createSequentialGroup()
-                                .add(sourceCombo, 0, 136, Short.MAX_VALUE)
+                                .add(sourceCombo, 0, 148, Short.MAX_VALUE)
                                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                         .add(19, 19, 19))
                     .add(jPanel7Layout.createSequentialGroup()
@@ -615,8 +616,8 @@
             .add(basicPanelLayout.createSequentialGroup()
                 .addContainerGap()
                 .add(basicPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
-                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
-                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)))
+                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
+                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)))
         );
         basicPanelLayout.setVerticalGroup(
             basicPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -644,6 +645,8 @@
 
         requiredInfoLabel.setText("requiredInfoLabel");
 
+        authButton.setText("aut");
+
         org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
         buttonPanel.setLayout(buttonPanelLayout);
         buttonPanelLayout.setHorizontalGroup(
@@ -653,16 +656,18 @@
                 .add(helpButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(settingsButton)
-                .add(64, 64, 64)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(authButton)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(requiredInfoLabel)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 353, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 412, Short.MAX_VALUE)
                 .add(okButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(cancelButton)
                 .addContainerGap())
         );
 
-        buttonPanelLayout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+        buttonPanelLayout.linkSize(new java.awt.Component[] {authButton, cancelButton, helpButton, okButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
 
         buttonPanelLayout.setVerticalGroup(
             buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -673,8 +678,9 @@
                     .add(settingsButton)
                     .add(cancelButton)
                     .add(okButton)
-                    .add(requiredInfoLabel))
-                .addContainerGap(13, Short.MAX_VALUE))
+                    .add(requiredInfoLabel)
+                    .add(authButton))
+                .addContainerGap(16, Short.MAX_VALUE))
         );
 
         buttonPanelLayout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.VERTICAL);
@@ -717,7 +723,7 @@
             extendedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(extendedPanelLayout.createSequentialGroup()
                 .addContainerGap()
-                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
+                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
                 .addContainerGap())
         );
         extendedPanelLayout.setVerticalGroup(
@@ -1253,6 +1259,7 @@
     // Variables declaration - do not modify//GEN-BEGIN:variables
     protected javax.swing.JLabel altitudeLabel;
     protected javax.swing.JTextField altitudeTextField;
+    protected javax.swing.JButton authButton;
     protected javax.swing.JTable authorTable;
     protected javax.swing.JPanel basicPanel;
     private javax.swing.JPanel buttonPanel;

Modified: trunk/src/net/sf/plantlore/common/Resurrector.java
===================================================================
--- trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 06:46:40 UTC (rev 850)
+++ trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 12:46:58 UTC (rev 851)
@@ -26,11 +26,16 @@
     
     
     public synchronized void bringItBackIfPossible() {
+        if( dialog == null )
+            return;
+        // The dialog must be cloned here because no one can tell when the value is erased 
+        // if we did it after calling the setVisible( true ) method.
+        final JDialog dialogClone = dialog;
+        dialog = null;
+        
         java.awt.EventQueue.invokeLater(new Runnable() {
             public void run() {
-                if( dialog != null )
-                    dialog.setVisible( true );
-                dialog = null;
+                dialogClone.setVisible( true );
             }
         });
     }



From admin at berlios.de  Wed Oct 18 15:56:19 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 15:56:19 +0200 (CEST)
Subject: [Plantlore-dev] [Task #3051] Tune messages
Message-ID: <200610181356.k9IDuJBR007841@unicorn.berlios.de>

Task #3051 has been updated. 

Project: Plantlore
Subproject: Plantlore Client/Server
Summary: Tune messages
Priority: 5
Percent Complete: 90%
Status: Open
Authority  : fraktalek
Assigned to: tkovarik, krater, joselada, fraktalek

Description: User should always receive informative reasonable messages.


Follow-Ups:

-------------------------------------------------------
Date: 2006-Oct-18 15:56
By: krater

Comment:
The Software Project was successfully defended but some bugs might have lingered. 

Some parts could use a rewrite from scratch :)

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/pm/task.php?func=detailtask&project_task_id=3051&group_id=5975&group_project_id=1511


From admin at berlios.de  Wed Oct 18 15:58:41 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 15:58:41 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9106] Fix the ordering of results in Overview
Message-ID: <200610181358.k9IDwfCs008098@unicorn.berlios.de>

Bug #9106, was updated on 2006-Oct-13 19:21
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview
Status: Open
Resolution: None
Bug Group: RFE
Priority: 2
Submitted by: krater
Assigned to : none
Summary: Fix the ordering of results in Overview

Details: The ordering of Occurrences (ORDER_BY) should use Occurrence.cCreateWhen.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9106&group_id=5975


From admin at berlios.de  Wed Oct 18 15:59:52 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 15:59:52 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9105] Implement a better duplicity check
Message-ID: <200610181359.k9IDxqXE008242@unicorn.berlios.de>

Bug #9105, was updated on 2006-Oct-13 19:18
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Implement a better duplicity check

Details: System should prevent the User from inserting the same Occurrences twice.

Follow-Ups:

Date: 2006-Oct-18 15:59
By: krater

Comment:
This will be achieved by erasing all plants that were inserted into the taxonArea in the Add dialog after the OK button is pressed.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9105&group_id=5975


From admin at berlios.de  Wed Oct 18 16:00:31 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:00:31 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9102] Add tooltips for coordinates
Message-ID: <200610181400.k9IE0Ved008324@unicorn.berlios.de>

Bug #9102, was updated on 2006-Oct-13 19:13
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 4
Submitted by: krater
Assigned to : none
Summary: Add tooltips for coordinates

Details: Add tooltips explaining how the current locale affects those fields.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9102&group_id=5975


From admin at berlios.de  Wed Oct 18 16:00:56 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:00:56 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9101] Rearrange some fields in the Add/Edit
	dialog
Message-ID: <200610181400.k9IE0uMr008372@unicorn.berlios.de>

Bug #9101, was updated on 2006-Oct-13 19:11
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 4
Submitted by: krater
Assigned to : none
Summary: Rearrange some fields in the Add/Edit dialog

Details: Rearrange the fields in the dialog so that the Country is followed by the Habitat. This way the most general specification of the locality goes first.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9101&group_id=5975


From admin at berlios.de  Wed Oct 18 16:03:19 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:03:19 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9099] Unite the default state of JComboBoxes
Message-ID: <200610181403.k9IE3J3f008635@unicorn.berlios.de>

Bug #9099, was updated on 2006-Oct-13 19:08
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 3
Submitted by: krater
Assigned to : fraktalek
Summary: Unite the default state of JComboBoxes

Details: Either the Habitat and the Phytochorion should have a default value, or the Nearest bigger seat should not.

Follow-Ups:

Date: 2006-Oct-18 16:03
By: krater

Comment:
The behaviour is most peculiar. There are pieces of code that set the first element of almost all JComboBoxes in the upper part of the Add dialog yet only the townComboBox responds.. it requires further investigation.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9099&group_id=5975


From admin at berlios.de  Wed Oct 18 16:04:01 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:04:01 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9098] Fix the loop of focus
Message-ID: <200610181404.k9IE41lW008702@unicorn.berlios.de>

Bug #9098, was updated on 2006-Oct-13 19:07
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: Bug
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Fix the loop of focus

Details: The focus gets stuck in the Coordinates pane.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9098&group_id=5975


From admin at berlios.de  Wed Oct 18 16:04:33 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:04:33 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9097] Remove the announcement about new
	Occurrences
Message-ID: <200610181404.k9IE4XFb008751@unicorn.berlios.de>

Bug #9097, was updated on 2006-Oct-13 19:05
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 2
Submitted by: krater
Assigned to : fraktalek
Summary: Remove the announcement about new Occurrences

Details: Do not announce a successful insert of new Occurrence records.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9097&group_id=5975


From admin at berlios.de  Wed Oct 18 16:05:02 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:05:02 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9096] Provide a reasonable description of all
	buttons
Message-ID: <200610181405.k9IE52au008805@unicorn.berlios.de>

Bug #9096, was updated on 2006-Oct-13 19:03
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Provide a reasonable description of all buttons

Details: Update the captions of the default buttons (Ok, Cancel) whenever reasonable.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9096&group_id=5975


From admin at berlios.de  Wed Oct 18 16:05:40 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:05:40 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9095] Describe all components in the
	Installer more thoroughly
Message-ID: <200610181405.k9IE5eAR008886@unicorn.berlios.de>

Bug #9095, was updated on 2006-Oct-13 19:02
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Describe all components in the Installer more thoroughly

Details: Someone should comment components of the installer a little bit more properly.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9095&group_id=5975


From admin at berlios.de  Wed Oct 18 16:07:11 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:07:11 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9175] Author Manager should be accessible
	from Add/Edit dialog
Message-ID: <200610181407.k9IE7BrI009050@unicorn.berlios.de>

Bug #9175, was updated on 2006-Oct-18 16:07
Here is a current snapshot of the bug.

Project: Plantlore
Category: AuthorManager
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : krater
Summary: Author Manager should be accessible from Add/Edit dialog

Details: The Author Manager should be accessible from the Add/Edit dialog - values inserted into the Add dialog should not vanish in the meantime!

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9175&group_id=5975


From admin at berlios.de  Wed Oct 18 16:07:44 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:07:44 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9175] Author Manager should be accessible
	from Add/Edit dialog
Message-ID: <200610181407.k9IE7iod009117@unicorn.berlios.de>

Bug #9175, was updated on 2006-Oct-18 16:07
Here is a current snapshot of the bug.

Project: Plantlore
Category: AuthorManager
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : krater
Summary: Author Manager should be accessible from Add/Edit dialog

Details: The Author Manager should be accessible from the Add/Edit dialog - values inserted into the Add dialog should not vanish in the meantime!

Follow-Ups:

Date: 2006-Oct-18 16:07
By: krater

Comment:
The problem was solved. Some minor testing remains.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9175&group_id=5975


From admin at berlios.de  Wed Oct 18 16:10:58 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:10:58 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9176] Add a mechanism that will store default
	values in the dialog
Message-ID: <200610181410.k9IEAwjr009552@unicorn.berlios.de>

Bug #9176, was updated on 2006-Oct-18 16:10
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : krater
Summary: Add a mechanism that will store default values in the dialog

Details: Add a button that will store the state of most important fields in the dialog and restore the state when plantlore is restarted.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9176&group_id=5975


From admin at berlios.de  Wed Oct 18 16:14:34 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:14:34 +0200 (CEST)
Subject: [Plantlore-dev] [Task #3045] User documentation
Message-ID: <200610181414.k9IEEYq1009921@unicorn.berlios.de>

Task #3045 has been updated. 

Project: Plantlore
Subproject: Documentation
Summary: User documentation
Priority: 5
Percent Complete: 100%
Status: Closed
Authority  : fraktalek
Assigned to: tkovarik, krater, joselada, fraktalek

Description: Mainly documentation accessible from the Java client.

Follow-Ups:

-------------------------------------------------------
Date: 2006-Oct-18 16:14
By: krater

Comment:
The User documentation reached its final state and no significant changes will be made.

-------------------------------------------------------
Date: 2006-Sep-20 01:29
By: tkovarik

Comment:
User documentation for Plantlore 1.0 is in the SVN repository. 
English version of the user manual should be created (compiled from the html help files)
Some modifications of user documentation are also required (so that all parts look alike) but it is not a priority

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/pm/task.php?func=detailtask&project_task_id=3045&group_id=5975&group_project_id=1508


From admin at berlios.de  Wed Oct 18 16:16:18 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:16:18 +0200 (CEST)
Subject: [Plantlore-dev] [Task #3046] Programming documentation
Message-ID: <200610181416.k9IEGI6t010118@unicorn.berlios.de>

Task #3046 has been updated. 

Project: Plantlore
Subproject: Documentation
Summary: Programming documentation
Priority: 3
Percent Complete: 100%
Status: Closed
Authority  : fraktalek
Assigned to: tkovarik, krater, joselada, fraktalek

Description: Source code comments, architecture and design, ...

Follow-Ups:

-------------------------------------------------------
Date: 2006-Oct-18 16:16
By: krater

Comment:
The documentation reached its final state and it will not change any more. However, JavaDoc may change as some bugs and RFEs will be implemented.

-------------------------------------------------------
Date: 2006-Sep-20 01:27
By: tkovarik

Comment:
Developer's documentation for Plantlore 1.0 is in the SVN repository.
JavaDoc comments are not complete in some source files and should be fixed.
Lowering priority since JavaDoc is not a key part of the docs.

-------------------------------------------------------
For more info, visit:

http://developer.berlios.de/pm/task.php?func=detailtask&project_task_id=3046&group_id=5975&group_project_id=1508


From admin at berlios.de  Wed Oct 18 16:19:54 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:19:54 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9177] Allow range-search by Herbarium
Message-ID: <200610181419.k9IEJsf0010540@unicorn.berlios.de>

Bug #9177, was updated on 2006-Oct-18 16:19
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: RFE
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Allow range-search by Herbarium

Details: Herbarium should allow a range search - ie. from-to search such as CB/11 ... CB/5123.

It might be achieved by spliting the herbarium column in the database.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9177&group_id=5975


From admin at berlios.de  Wed Oct 18 16:22:53 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:22:53 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9178] Add a table with GPS values
Message-ID: <200610181422.k9IEMr2i010962@unicorn.berlios.de>

Bug #9178, was updated on 2006-Oct-18 16:22
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Add a table with GPS values

Details: The Add dialog should allow the User to read the GPS from a file in the following format:

identifier, x-coord, y-coord, z-coord

The User should be able to insert the coordinates by supplying the correct identifier.

We may assume that the coordinates will be proper WGS-84

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9178&group_id=5975


From admin at berlios.de  Wed Oct 18 16:24:27 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:24:27 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9179] Insert a plant using a synonym
Message-ID: <200610181424.k9IEORr6011134@unicorn.berlios.de>

Bug #9179, was updated on 2006-Oct-18 16:24
Here is a current snapshot of the bug.

Project: Plantlore
Category: None
Status: Open
Resolution: None
Bug Group: None
Priority: 1
Submitted by: krater
Assigned to : none
Summary: Insert a plant using a synonym

Details: The User could supply a synonym and the System should offer all plants that share that synonym. The User chooses the most suitable official name (taxon).

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9179&group_id=5975


From admin at berlios.de  Wed Oct 18 16:27:04 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:27:04 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9180] Increase the number of decimal places
Message-ID: <200610181427.k9IER4SE011456@unicorn.berlios.de>

Bug #9180, was updated on 2006-Oct-18 16:27
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : fraktalek
Summary: Increase the number of decimal places

Details: The coordinate's textfields should provide at least 15 valid decimal places (because 1/1000 may be 60 metres).

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9180&group_id=5975


From admin at berlios.de  Wed Oct 18 16:29:06 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 16:29:06 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9181] Author changes should be displayed in
	history
Message-ID: <200610181429.k9IET6KM011703@unicorn.berlios.de>

Bug #9181, was updated on 2006-Oct-18 16:29
Here is a current snapshot of the bug.

Project: Plantlore
Category: History
Status: Open
Resolution: None
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : joselada
Summary: Author changes should be displayed in history

Details: Author changes should be visible in the history of an Occurrence record.

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9181&group_id=5975


From discontinuum at gmail.com  Wed Oct 18 16:45:35 2006
From: discontinuum at gmail.com (l33t)
Date: Wed, 18 Oct 2006 16:45:35 +0200
Subject: [Plantlore-dev] Posledni schuzka s Rihem
Message-ID: <f4dc39b90610180745x254336f2k6edbbe9af5f38c2a@mail.gmail.com>

Na schuzce s Hansem se jeste interne diskutovalo o tom, kdy by se mela
uskutecnit posledni schuzka (spojena s obedem/veceri?) s Rihou, ktery nam
zvlast v posledni fazi projektu pomohl.
Poslete seznam dni, kdy byste meli cas.

     Dostupnost
*Po   od 14:00*
Ut   kdykoli
St   kdykoli
Ct   kdykoli
Pa   od 11:00

Cervena barva znaci vetsi dulezitost.

*Vyjimky*: 20.10. (a mozna i 27.10., bude-li druhe kolo) Senatni volby.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/plantlore-dev/attachments/20061018/918a9637/attachment.html>

From krater at mail.berlios.de  Wed Oct 18 17:06:37 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Wed, 18 Oct 2006 17:06:37 +0200
Subject: [Plantlore-dev] r852 - in trunk/src/net/sf/plantlore:
	client/authors client/overview common
Message-ID: <200610181506.k9IF6bon026430@sheep.berlios.de>

Author: krater
Date: 2006-10-18 17:06:37 +0200 (Wed, 18 Oct 2006)
New Revision: 852

Modified:
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/overview/AddEditView.java
   trunk/src/net/sf/plantlore/common/Resurrector.java
Log:
Fix of BUG#9099 - the state of the upper comboboxes in the Add dialog should be the same. ( Either the Habitat and the Phytochorion should have a default value, or the Nearest bigger seat should not. )

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 12:46:58 UTC (rev 851)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 15:06:37 UTC (rev 852)
@@ -713,10 +713,13 @@
      * Set the dialog that should be reopened after this dialog is closed.
      */
     public void setDialogToRevive(JDialog dialog) {
-        System.out.println("Dialog set to " + dialog.getTitle());
         resurrector.setDialog( dialog );
     }
 
+    /**
+     * Handle the visibility properly. Sometimes it may happen that after this dialog is closed,
+     * another must be reopened.
+     */
     public void setVisible(boolean b) {
         if( b )
             // Update the list of authors.

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 12:46:58 UTC (rev 851)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 15:06:37 UTC (rev 852)
@@ -165,12 +165,18 @@
     }
     
     
-    
+    /**
+     * Store the AuthorManagerView that should be opened if the User wants to
+     * switch to the Author Manager from this Add/Edit dialog.
+     */
     public void setAuthorManager(AuthorManagerView m) {
         this.authView = m;
     }
     
-    
+    /**
+     * Switch between the Add/Edit dialog and the Author Manager
+     *
+     */
     class AuthorManagerAction extends AbstractAction {
         
         public AuthorManagerAction() {

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 12:46:58 UTC (rev 851)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 15:06:37 UTC (rev 852)
@@ -886,6 +886,7 @@
         resetAuthorModel();
         initAuthorTable();
         
+        // townComboBox OK
         if (model.getVillage() != null)
             townComboBox.setSelectedItem(model.getVillage());
         else
@@ -897,12 +898,25 @@
         
         locationNoteArea.setText(model.getHabitatNote());
         occurrenceNoteArea.setText(model.getOccurrenceNote());
-        territoryNameCombo.setSelectedItem(model.getTerritoryName());
-        phytNameCombo.setSelectedItem(model.getPhytName());
-        if (model.getPhytCountry() != null) 
+        
+        // territoryNameCombo OK
+        if(model.getTerritoryName() != null)
+            territoryNameCombo.setSelectedItem(model.getTerritoryName());
+        else
+            territoryNameCombo.setSelectedIndex(0);
+        
+        // phytNameCombo OK
+        if(model.getPhytName() != null)
+            phytNameCombo.setSelectedItem(model.getPhytName());
+        else
+            phytNameCombo.setSelectedIndex(0);
+        
+        // phytCountryCombo OK
+        if (model.getPhytCountry() != null)  
             phytCountryCombo.setSelectedItem(model.getPhytCountry());
         else
             phytCountryCombo.setSelectedIndex(0);
+        
         quadrantTextField.setText(model.getQuadrant());
         
         if (model.getAltitude() != null) altitudeTextField.setText(""+numberFormat.format(model.getAltitude()));

Modified: trunk/src/net/sf/plantlore/common/Resurrector.java
===================================================================
--- trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 12:46:58 UTC (rev 851)
+++ trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 15:06:37 UTC (rev 852)
@@ -12,30 +12,39 @@
 import javax.swing.JDialog;
 
 /**
+ * This class can store a dialog and bring it back (make it visible) again.
+ * It used to have much greater scope but that proved to be problematic.
+ * It should be probably incorporated back into the AuthorManagerCtrl 
+ * from where it came.
  *
  * @author kaimu
+ * @version beta
  */
 public class Resurrector {
     
     private JDialog dialog;
     
-    
+    /**
+     * Set the dialog to be reopened.
+     */
     public synchronized void setDialog(JDialog dialog) {
         this.dialog = dialog;
     }
     
-    
+    /**
+     * Open the dialog again.
+     */
     public synchronized void bringItBackIfPossible() {
         if( dialog == null )
             return;
-        // The dialog must be cloned here because no one can tell when the value is erased 
-        // if we did it after calling the setVisible( true ) method.
+        // The dialog must be cloned and erased here.
         final JDialog dialogClone = dialog;
         dialog = null;
         
         java.awt.EventQueue.invokeLater(new Runnable() {
             public void run() {
                 dialogClone.setVisible( true );
+                // This line will be executed after the dialog becomes invisible!
             }
         });
     }



From admin at berlios.de  Wed Oct 18 17:05:03 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 17:05:03 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9099] Unite the default state of JComboBoxes
Message-ID: <200610181505.k9IF538e015531@unicorn.berlios.de>

Bug #9099, was updated on 2006-Oct-13 19:08
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 3
Submitted by: krater
Assigned to : krater
Summary: Unite the default state of JComboBoxes

Details: Either the Habitat and the Phytochorion should have a default value, or the Nearest bigger seat should not.

Follow-Ups:

Date: 2006-Oct-18 17:05
By: krater

Comment:
All combo boxes use the first value as default. It will be combined with the storage of the default values later.
-------------------------------------------------------

Date: 2006-Oct-18 16:03
By: krater

Comment:
The behaviour is most peculiar. There are pieces of code that set the first element of almost all JComboBoxes in the upper part of the Add dialog yet only the townComboBox responds.. it requires further investigation.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9099&group_id=5975


From krater at mail.berlios.de  Wed Oct 18 17:13:28 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Wed, 18 Oct 2006 17:13:28 +0200
Subject: [Plantlore-dev] r853 - trunk/src/net/sf/plantlore/client/overview
Message-ID: <200610181513.k9IFDSZJ027626@sheep.berlios.de>

Author: krater
Date: 2006-10-18 17:13:28 +0200 (Wed, 18 Oct 2006)
New Revision: 853

Modified:
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
Log:
Fixed RFE#9097 Do not announce a successful insert of new Occurrence records.


Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 15:06:37 UTC (rev 852)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 15:13:28 UTC (rev 853)
@@ -737,6 +737,9 @@
                     }
                 } else {//inAddMode
                     Task task = model.storeRecord(true);
+                    /*
+                     * The following announcement should be removed (it was a RFE)..
+                     *
                     task.setPostTaskAction(new PostTaskAction() {
                         public void afterStopped(Object value) {
                             SwingUtilities.invokeLater(new Runnable() {
@@ -747,6 +750,8 @@
                         }
                     });
                     Dispatcher.getDispatcher().dispatch(task, view, false);
+                     *
+                     */
                     //view.setVisible(false);
                 }
             } catch (RemoteException ex) {



From admin at berlios.de  Wed Oct 18 17:10:48 2006
From: admin at berlios.de (admin at berlios.de)
Date: Wed, 18 Oct 2006 17:10:48 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9097] Remove the announcement about new
	Occurrences
Message-ID: <200610181510.k9IFAm7T016360@unicorn.berlios.de>

Bug #9097, was updated on 2006-Oct-13 19:05
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Closed
Resolution: Fixed
Bug Group: RFE
Priority: 2
Submitted by: krater
Assigned to : krater
Summary: Remove the announcement about new Occurrences

Details: Do not announce a successful insert of new Occurrence records.

Follow-Ups:

Date: 2006-Oct-18 17:10
By: krater

Comment:
Fixed in Revision 853
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9097&group_id=5975


From krater at mail.berlios.de  Wed Oct 18 23:05:22 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Wed, 18 Oct 2006 23:05:22 +0200
Subject: [Plantlore-dev] r854 - trunk/src/net/sf/plantlore/client/overview
Message-ID: <200610182105.k9IL5MJ1027223@sheep.berlios.de>

Author: krater
Date: 2006-10-18 23:05:21 +0200 (Wed, 18 Oct 2006)
New Revision: 854

Added:
   trunk/src/net/sf/plantlore/client/overview/InterestingFields.java
Modified:
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/overview/AddEditView.form
   trunk/src/net/sf/plantlore/client/overview/AddEditView.java
Log:
Add/Edit dialog - a new button added (rem). This button will store the values in the dialog. The mechanism that will restore them will be implemented soon.

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 15:13:28 UTC (rev 853)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 21:05:21 UTC (rev 854)
@@ -82,6 +82,8 @@
     public final static int MAXIMUM_INTEGER_DIGITS = 9;
     private final static Color COLOR_INVALID = Color.RED;
     
+    private RememberDefaultValuesAction defaults = new RememberDefaultValuesAction();
+    
     //--------------MODELS AND VIEWS THIS CONTROLLER CREATES-----------------
     private ChecklistView checklistView;
     
@@ -145,6 +147,7 @@
         view.settingsButton.setAction(new SettingsAction());
         view.gpsChangeButton.setAction(new ChangeCoordinateSystemAction());
         view.authButton.setAction(new AuthorManagerAction());
+        view.rememberButton.setAction( defaults );
 //        view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
     }
     
@@ -863,18 +866,6 @@
     
     
     /**
-     * The holder object of most important fields in the dialog whose state should be stored.
-     * The list of currently selected authors is not saved because that component may be a subject to change.
-     *
-     * @author kaimu
-     */
-    class InterestingFields implements java.io.Serializable {
-        public Pair<String, Integer> territory, phytochorion, town, publication, project;
-        public String description, locationNote, occurrenceNote, latitude, longitude, altitude, country, time, day, quadrant, herbarium, source;
-        public Integer month, year;
-    }
-    
-    /**
      * This action stores the default values in the dialog for future revival.
      * The revival is planned after the application is restarted (because there is another mechanism
      * that preserves the currently inserted values in some fields of the dialog - implemented by Jakub Kotowski).
@@ -883,11 +874,6 @@
      */
     class RememberDefaultValuesAction extends StandardAction {
         
-        public final String RESTORE = "RestoreTheDefaultValues";
-        public final String FORGET = "ForgetTheDefaultValues";
-        public final String REMEMBER = "RememberTheDefaultValues";
-        
-        
         private String defaultValuesFileName; {
 		String userHome = System.getProperty("user.home"),
 		osName = System.getProperty("os.name"),
@@ -908,7 +894,7 @@
          * Thus the default values may differ for each database the User works with.
          * It was a necessary step because some of the stored values may not be in the other database at all.
          */
-        private Hashtable<String, InterestingFields> storedValues = new Hashtable<String, InterestingFields>(8);;
+        private Hashtable<String, InterestingFields> storedValues = new Hashtable<String, InterestingFields>(8);
         
         /**
          * Create a new Action that is capable of remembering the list of default values.
@@ -946,123 +932,152 @@
                 return null;
             return s;
         }
-
+        
         /**
-         * Take action!
+         * @return null if the object is not a pair or if the object  is null
          */
-        public void actionPerformed(ActionEvent e) {
+        private Pair<String, Integer> evaluate(Object o) {
+            if( o == null || !(o instanceof Pair) )
+                return null;
+            return (Pair<String, Integer>) o;
+        }
+        
+        /**
+         * Restore the state of the most important fields.
+         */
+        public void restore(boolean reload) {
             try {
-                String command = e.getActionCommand();
-                // ===== Restore the list of default values. ===== 
-                if( RESTORE.equals(command) ) {
-                     load();
-                    if( storedValues == null )
-                        // There are no stored values yet.
-                        storedValues = new Hashtable<String, InterestingFields>(8);
+                if(reload)
+                    load();
+                
+                if( storedValues == null )
+                    // There are no stored values yet.
+                    storedValues = new Hashtable<String, InterestingFields>(8);
 
-                    // Look for default values that were saved for the database we are currently working with.
-                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                    if( databaseID == null)
-                        // We are propably not connected to a database yet. This should never happen.
-                        return;
+                // Look for default values that were saved for the database we are currently working with.
+                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                if( databaseID == null)
+                    // We are propably not connected to a database yet. This should never happen.
+                    return;
 
-                    // Obtain the default values.
-                    InterestingFields defaults = storedValues.get( databaseID );
-                    if( defaults == null)
-                        // No default values stored for this particular database. Never mind.
-                        return;
+                // Obtain the default values.
+                InterestingFields defaults = storedValues.get( databaseID );
+                if( defaults == null)
+                    // No default values stored for this particular database. Never mind.
+                    return;
 
-                    // Now, do some reviving.
-                    // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
-                    // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
-                    if(defaults.territory != null)
-                        view.territoryNameCombo.setSelectedItem( defaults.territory );
-                    if(defaults.phytochorion != null)
-                        view.phytNameCombo.setSelectedItem( defaults.phytochorion );
-                    if(defaults.town != null)
-                        view.townComboBox.setSelectedItem( defaults.town );
-                    if(defaults.project != null)
-                        view.projectCombo.setSelectedItem( defaults.project );
-                    if(defaults.publication != null)
-                        view.publicationCombo.setSelectedItem( defaults.publication );
+                // Now, do some reviving.
+                // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
+                // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
+                if(defaults.territory != null)
+                    view.territoryNameCombo.setSelectedItem( defaults.territory );
+                if(defaults.phytochorion != null)
+                    view.phytNameCombo.setSelectedItem( defaults.phytochorion );
+                if(defaults.town != null)
+                    view.townComboBox.setSelectedItem( defaults.town );
+                if(defaults.project != null)
+                    view.projectCombo.setSelectedItem( defaults.project );
+                if(defaults.publication != null)
+                    view.publicationCombo.setSelectedItem( defaults.publication );
 
-                    if(defaults.quadrant != null)
-                        view.quadrantTextField.setText( defaults.quadrant );
-                    if(defaults.country != null)
-                        view.phytCountryCombo.setSelectedItem( defaults.country );
-                    if(defaults.herbarium != null)
-                        view.herbariumTextField.setText( defaults.herbarium );
-                    if(defaults.source != null)
-                        view.sourceCombo.setSelectedItem(defaults.source);
-                    if(defaults.latitude != null)
-                        view.latitudeTextField.setText( defaults.latitude );
-                    if(defaults.altitude != null)
-                        view.altitudeTextField.setText( defaults.altitude );
-                    if(defaults.longitude != null)
-                        view.longitudeTextField.setText( defaults.longitude );
-                    if(defaults.time != null)
-                        view.timeTextField.setText( defaults.time );
-                    if(defaults.month != null)
-                        view.monthChooser.setMonth( defaults.month );
-                    if(defaults.day != null)
-                        view.dayTextField.setText( defaults.day );
-                    if(defaults.year != null)
-                        view.yearSpinner.setValue( defaults.year );
+                if(defaults.quadrant != null)
+                    view.quadrantTextField.setText( defaults.quadrant );
+                if(defaults.country != null)
+                    view.phytCountryCombo.setSelectedItem( defaults.country );
+                if(defaults.herbarium != null)
+                    view.herbariumTextField.setText( defaults.herbarium );
+                if(defaults.source != null)
+                    view.sourceCombo.setSelectedItem(defaults.source);
+                if(defaults.latitude != null)
+                    view.latitudeTextField.setText( defaults.latitude );
+                if(defaults.altitude != null)
+                    view.altitudeTextField.setText( defaults.altitude );
+                if(defaults.longitude != null)
+                    view.longitudeTextField.setText( defaults.longitude );
+                if(defaults.time != null)
+                    view.timeTextField.setText( defaults.time );
+                if(defaults.month != null)
+                    view.monthChooser.setMonth( defaults.month );
+                if(defaults.day != null)
+                    view.dayTextField.setText( defaults.day );
+                if(defaults.year != null)
+                    view.yearSpinner.setValue( defaults.year );
 
-                    if(defaults.description != null)
-                        view.descriptionArea.setText( defaults.description );
-                    if(defaults.locationNote != null)
-                        view.locationNoteArea.setText( defaults.locationNote );
-                    if(defaults.occurrenceNote != null)
-                        view.occurrenceNoteArea.setText( defaults.occurrenceNote );
+                if(defaults.description != null)
+                    view.descriptionArea.setText( defaults.description );
+                if(defaults.locationNote != null)
+                    view.locationNoteArea.setText( defaults.locationNote );
+                if(defaults.occurrenceNote != null)
+                    view.occurrenceNoteArea.setText( defaults.occurrenceNote );
+            } catch (Exception e) {
+                logger.error("Unable to restore default values! " + e.getMessage());
+            }
                     
-                } 
-                // ===== Forget the list of default values. ===== 
-                else if( FORGET.equals(command)) {
-                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                    storedValues.remove( databaseID );
-                    save();
-                }
-                // ===== Remember the list of default values. ===== 
-                else {
-                    // Gather the information from dialogs.
-                    String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                    storedValues.remove( databaseID );
-                    InterestingFields defaults = new InterestingFields();
+        }
+        
+        /**
+         * Remember the state of the most important fields.
+         */
+        public void remember() {
+            try {
+                // Gather the information from dialogs.
+                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                storedValues.remove( databaseID );
+                InterestingFields defaults = new InterestingFields();
 
-                    defaults.territory = (Pair<String, Integer>) view.territoryNameCombo.getSelectedItem();
-                    defaults.phytochorion = (Pair<String, Integer>) view.phytNameCombo.getSelectedItem();
-                    defaults.town = (Pair<String, Integer>) view.townComboBox.getSelectedItem();
-                    defaults.publication = (Pair<String, Integer>) view.publicationCombo.getSelectedItem();
-                    defaults.project = (Pair<String, Integer>) view.projectCombo.getSelectedItem();
-                    defaults.quadrant = evaluate( view.quadrantTextField.getText() );
-                    defaults.country = evaluate( (String) view.phytCountryCombo.getSelectedItem() );
-                    defaults.herbarium = evaluate( view.herbariumTextField.getText() );
-                    defaults.source = evaluate( (String) view.sourceCombo.getSelectedItem() );
-                    defaults.latitude = evaluate( view.latitudeTextField.getText() );
-                    defaults.longitude = evaluate( view.longitudeTextField.getText() );
-                    defaults.altitude = evaluate( view.altitudeTextField.getText() ); 
-                    defaults.time = evaluate( view.timeTextField.getText() );
-                    defaults.day = evaluate( view.dayTextField.getText() );
-                    defaults.month = view.monthChooser.getMonth();
-                    defaults.year = (Integer) view.yearSpinner.getValue();
-                    defaults.description = evaluate( view.descriptionArea.getText() );
-                    defaults.locationNote = evaluate( view.locationNoteArea.getText() );
-                    defaults.occurrenceNote = evaluate( view.occurrenceNoteArea.getText() );
+                defaults.territory = evaluate( view.territoryNameCombo.getSelectedItem() );
+                defaults.phytochorion = evaluate( view.phytNameCombo.getSelectedItem() );
+                defaults.town = evaluate( view.townComboBox.getSelectedItem() );
+                defaults.publication = evaluate( view.publicationCombo.getSelectedItem() );
+                defaults.project = evaluate( view.projectCombo.getSelectedItem() );
+                defaults.quadrant = evaluate( view.quadrantTextField.getText() );
+                defaults.country = evaluate( (String) view.phytCountryCombo.getSelectedItem() );
+                defaults.herbarium = evaluate( view.herbariumTextField.getText() );
+                defaults.source = evaluate( (String) view.sourceCombo.getSelectedItem() );
+                defaults.latitude = evaluate( view.latitudeTextField.getText() );
+                defaults.longitude = evaluate( view.longitudeTextField.getText() );
+                defaults.altitude = evaluate( view.altitudeTextField.getText() ); 
+                defaults.time = evaluate( view.timeTextField.getText() );
+                defaults.day = evaluate( view.dayTextField.getText() );
+                defaults.month = view.monthChooser.getMonth();
+                defaults.year = (Integer) view.yearSpinner.getValue();
+                defaults.description = evaluate( view.descriptionArea.getText() );
+                defaults.locationNote = evaluate( view.locationNoteArea.getText() );
+                defaults.occurrenceNote = evaluate( view.occurrenceNoteArea.getText() );
 
-                    storedValues.put( databaseID, defaults );
-                    // Store them.
-                    save(); 
-                }
-            } catch(Exception x) {
-                //  Never mind..
+                storedValues.put( databaseID, defaults );
+                // Store them.
+                save(); 
+            } catch(Exception e) {
+                //logger.error("Unable to remember default values! " + e.getMessage());
+                e.printStackTrace();
             }
         }
         
+        /**
+         * Forget the state of the most important fields.
+         */
+        public void forget() {
+            try {
+                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
+                storedValues.remove( databaseID );
+                save();
+            } catch(Exception e) {
+                logger.error("Unable to forget default values! " + e.getMessage());
+            }
+        }
+
+        /**
+         * Take action = remember the state of fields.
+         */
+        public void actionPerformed(ActionEvent e) {
+            logger.debug("Trying to memorize the default values for this dialog.");
+            remember();
+        }
+    }
+
         
-    }
     
-    
 }
 
 

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-18 15:13:28 UTC (rev 853)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-18 21:05:21 UTC (rev 854)
@@ -1047,8 +1047,10 @@
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="authButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
+                          <Component id="rememberButton" linkSize="12" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace max="-2" attributes="0"/>
                           <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="412" max="32767" attributes="0"/>
+                          <EmptySpace pref="325" max="32767" attributes="0"/>
                           <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>
@@ -1067,6 +1069,7 @@
                               <Component id="okButton" linkSize="13" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="requiredInfoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="authButton" alignment="3" min="-2" max="-2" attributes="0"/>
+                              <Component id="rememberButton" alignment="3" min="-2" max="-2" attributes="0"/>
                           </Group>
                           <EmptySpace pref="16" max="32767" attributes="0"/>
                       </Group>
@@ -1122,6 +1125,14 @@
                     <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
                   </AuxValues>
                 </Component>
+                <Component class="javax.swing.JButton" name="rememberButton">
+                  <Properties>
+                    <Property name="text" type="java.lang.String" value="rem"/>
+                  </Properties>
+                  <AuxValues>
+                    <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+                  </AuxValues>
+                </Component>
               </SubComponents>
             </Container>
             <Container class="javax.swing.JPanel" name="extendedPanel">

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 15:13:28 UTC (rev 853)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-18 21:05:21 UTC (rev 854)
@@ -182,6 +182,7 @@
         settingsButton = new javax.swing.JButton();
         requiredInfoLabel = new javax.swing.JLabel();
         authButton = new javax.swing.JButton();
+        rememberButton = new javax.swing.JButton();
         extendedPanel = new javax.swing.JPanel();
         jScrollPane6 = new javax.swing.JScrollPane();
         occurrenceTable = new javax.swing.JTable();
@@ -647,6 +648,8 @@
 
         authButton.setText("aut");
 
+        rememberButton.setText("rem");
+
         org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
         buttonPanel.setLayout(buttonPanelLayout);
         buttonPanelLayout.setHorizontalGroup(
@@ -659,15 +662,17 @@
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(authButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(rememberButton)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(requiredInfoLabel)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 412, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 325, Short.MAX_VALUE)
                 .add(okButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(cancelButton)
                 .addContainerGap())
         );
 
-        buttonPanelLayout.linkSize(new java.awt.Component[] {authButton, cancelButton, helpButton, okButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+        buttonPanelLayout.linkSize(new java.awt.Component[] {authButton, cancelButton, helpButton, okButton, rememberButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
 
         buttonPanelLayout.setVerticalGroup(
             buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -679,7 +684,8 @@
                     .add(cancelButton)
                     .add(okButton)
                     .add(requiredInfoLabel)
-                    .add(authButton))
+                    .add(authButton)
+                    .add(rememberButton))
                 .addContainerGap(16, Short.MAX_VALUE))
         );
 
@@ -1331,6 +1337,7 @@
     protected javax.swing.JLabel publicationLabel;
     protected javax.swing.JLabel quadrantLabel;
     protected javax.swing.JTextField quadrantTextField;
+    protected javax.swing.JButton rememberButton;
     private javax.swing.JLabel requiredInfoLabel;
     protected javax.swing.JButton settingsButton;
     protected javax.swing.JComboBox sourceCombo;

Added: trunk/src/net/sf/plantlore/client/overview/InterestingFields.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/InterestingFields.java	2006-10-18 15:13:28 UTC (rev 853)
+++ trunk/src/net/sf/plantlore/client/overview/InterestingFields.java	2006-10-18 21:05:21 UTC (rev 854)
@@ -0,0 +1,18 @@
+package net.sf.plantlore.client.overview;
+
+import net.sf.plantlore.common.Pair;
+
+/**
+ * The holder object of most important fields in the dialog whose state should be stored.
+ * The list of currently selected authors is not saved because that component may be a subject to change.
+ *
+ * This class must cannot be an inner class because then that inner class would become
+ * an object of serialization as well!
+ *
+ * @author kaimu
+ */
+public class InterestingFields implements java.io.Serializable {
+    public Pair<String, Integer> territory, phytochorion, town, publication, project;
+    public String description, locationNote, occurrenceNote, latitude, longitude, altitude, country, time, day, quadrant, herbarium, source;
+    public Integer month, year;
+}
\ No newline at end of file



From admin at berlios.de  Thu Oct 19 14:00:50 2006
From: admin at berlios.de (admin at berlios.de)
Date: Thu, 19 Oct 2006 14:00:50 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #7749] Selecting an Author Name or a Revision
	transfers focus
Message-ID: <200610191200.k9JC0oYq012896@unicorn.berlios.de>

Bug #7749, was updated on 2006-Jun-04 17:16
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Closed
Resolution: Fixed
Bug Group: Bug
Priority: 2
Submitted by: krater
Assigned to : fraktalek
Summary: Selecting an Author Name or a Revision transfers focus

Details: Selecting an Author or a Revision transfers focus to the Nearest bigger seat ComboBox. Annoying.

Follow-Ups:

Date: 2006-Aug-27 19:46
By: fraktalek

Comment:
This problem seems to have dissapeared in the new AddEdit dialog.
-------------------------------------------------------

Date: 2006-Jun-05 00:32
By: fraktalek

Comment:
Won't fix now. Worked around by replacing the AutoComboBoxNG3 to simple JComboBox.

-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=7749&group_id=5975


From krater at mail.berlios.de  Thu Oct 19 17:03:15 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Thu, 19 Oct 2006 17:03:15 +0200
Subject: [Plantlore-dev] r855 - in trunk/src/net/sf/plantlore:
	client/authors client/overview common
Message-ID: <200610191503.k9JF3Fse023321@sheep.berlios.de>

Author: krater
Date: 2006-10-19 17:03:14 +0200 (Thu, 19 Oct 2006)
New Revision: 855

Added:
   trunk/src/net/sf/plantlore/common/DialogSwitcher.java
   trunk/src/net/sf/plantlore/common/VisibilityChanger.java
Modified:
   trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/common/Resurrector.java
Log:
A slightly more elegant solution to the problem (switching between two dialogs that share the same parent).

Modified: trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-18 21:05:21 UTC (rev 854)
+++ trunk/src/net/sf/plantlore/client/authors/AuthorManagerView.java	2006-10-19 15:03:14 UTC (rev 855)
@@ -12,8 +12,8 @@
 import javax.swing.JFrame;
 import javax.swing.JOptionPane;
 import javax.swing.table.DefaultTableModel;
+import net.sf.plantlore.common.DialogSwitcher;
 import net.sf.plantlore.common.PlantloreHelp;
-import net.sf.plantlore.common.Resurrector;
 import net.sf.plantlore.common.record.Author;
 import net.sf.plantlore.l10n.L10n;
 
@@ -73,6 +73,9 @@
         PlantloreHelp.addButtonHelp(PlantloreHelp.AUTHOR_MANAGER, this.helpBtn);
         // Center the dialog on the screen
         this.setLocationRelativeTo(null);
+        
+        // Dialog resurrector
+        //DialogSwitcher.involve( this, closeBtn );
     }
     
     /** This method is called from within the constructor to
@@ -705,16 +708,6 @@
                                       L10n.getString("Author.NoAuthorSelectedTitle"), JOptionPane.WARNING_MESSAGE);
     }
     
-    
-    //---- DIALOG RESURRECTION BLOCK ----
-    private Resurrector resurrector = new Resurrector();
-    
-    /**
-     * Set the dialog that should be reopened after this dialog is closed.
-     */
-    public void setDialogToRevive(JDialog dialog) {
-        resurrector.setDialog( dialog );
-    }
 
     /**
      * Handle the visibility properly. Sometimes it may happen that after this dialog is closed,
@@ -727,10 +720,8 @@
         
         super.setVisible(b);
         
-        if( !b ) {
-            // Reopen the poor dialog (but do it carefully!)
-            resurrector.bringItBackIfPossible();
-        }
+        if( !b )
+            DialogSwitcher.switchBack();
     }
     
 

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-18 21:05:21 UTC (rev 854)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-19 15:03:14 UTC (rev 855)
@@ -49,6 +49,7 @@
 import java.io.ObjectOutputStream;
 import net.sf.plantlore.client.authors.AuthorManagerView;
 import net.sf.plantlore.common.DefaultExceptionHandler;
+import net.sf.plantlore.common.DialogSwitcher;
 import net.sf.plantlore.common.Dispatcher;
 import net.sf.plantlore.common.PostTaskAction;
 import net.sf.plantlore.common.StandardAction;
@@ -190,26 +191,8 @@
         
         public void actionPerformed(ActionEvent isUseless) {
             // Do nothing if the Author manager View is not supplied.
-            if( authView == null )
-                return;
-            
-            // Make place for the (also modal) Author manager
-            java.awt.EventQueue.invokeLater(new Runnable() {
-                public void run() {
-                    view.setVisible(false);
-                }
-            });
-            
-            // Remind the Author manager to reopen this dialog
-            authView.setDialogToRevive( view );
-            
-            // Display the Author manager
-            java.awt.EventQueue.invokeLater(new Runnable() {
-                public void run() {
-                    authView.setVisible(true);
-                }
-            });
-            
+            if( authView != null )
+                DialogSwitcher.switchFromTo(view, authView);
         }
         
     }

Added: trunk/src/net/sf/plantlore/common/DialogSwitcher.java
===================================================================
--- trunk/src/net/sf/plantlore/common/DialogSwitcher.java	2006-10-18 21:05:21 UTC (rev 854)
+++ trunk/src/net/sf/plantlore/common/DialogSwitcher.java	2006-10-19 15:03:14 UTC (rev 855)
@@ -0,0 +1,71 @@
+/*
+ * DialogSwitcher.java
+ *
+ * Created on 19. ??jen 2006, 14:27
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.common;
+
+import java.awt.Component;
+import java.awt.Window;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.awt.event.WindowAdapter;
+import java.awt.event.WindowEvent;
+import java.util.Stack;
+
+/**
+ * The problem with Swing is that two modal windows that share the same parent
+ * cannot be visible at the same time. If we wish to switch from one window
+ * to another, the first one must go, i.e. it must be hidden first.
+ *
+ * There is no other way because it is not possible to change the parent window
+ * of any dialog.
+ *
+ * @author kaimu
+ * @version not tested
+ */
+public class DialogSwitcher /*extends WindowAdapter implements ActionListener*/ {
+    
+    private static Stack<Component> components = new Stack<Component>();
+    private static DialogSwitcher switcher;
+    
+    private DialogSwitcher() {}
+    
+    /*
+    public static void involve(Window w, javax.swing.AbstractButton...buttons) {
+        if(switcher == null)
+            switcher = new DialogSwitcher();
+        w.addWindowListener( switcher );
+        if(buttons != null)
+            for(javax.swing.AbstractButton b : buttons)
+                b.addActionListener( switcher );
+    }
+     */
+    
+    public static void switchFromTo(Component from, Component to) {
+        components.push(from);
+        new VisibilityChanger(from, false);
+        new VisibilityChanger(to, true);
+     }
+
+    public static void switchBack() {
+        if( !components.empty() )
+            new VisibilityChanger(components.pop(), true);
+    }
+
+    /*
+    @Override
+    public synchronized void windowClosing(WindowEvent e) {
+        switchBack();
+    }
+
+    public void actionPerformed(ActionEvent e) {
+        switchBack();
+    }
+     */
+    
+}

Modified: trunk/src/net/sf/plantlore/common/Resurrector.java
===================================================================
--- trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-18 21:05:21 UTC (rev 854)
+++ trunk/src/net/sf/plantlore/common/Resurrector.java	2006-10-19 15:03:14 UTC (rev 855)
@@ -15,11 +15,12 @@
  * This class can store a dialog and bring it back (make it visible) again.
  * It used to have much greater scope but that proved to be problematic.
  * It should be probably incorporated back into the AuthorManagerCtrl 
- * from where it came.
+ * whence it came.
  *
  * @author kaimu
  * @version beta
  */
+ at Deprecated
 public class Resurrector {
     
     private JDialog dialog;

Added: trunk/src/net/sf/plantlore/common/VisibilityChanger.java
===================================================================
--- trunk/src/net/sf/plantlore/common/VisibilityChanger.java	2006-10-18 21:05:21 UTC (rev 854)
+++ trunk/src/net/sf/plantlore/common/VisibilityChanger.java	2006-10-19 15:03:14 UTC (rev 855)
@@ -0,0 +1,34 @@
+/*
+ * VisibilityChanger.java
+ *
+ * Created on 19. ??jen 2006, 15:59
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package net.sf.plantlore.common;
+
+import java.awt.Component;
+
+/**
+ *
+ * @author yaa
+ */
+public class VisibilityChanger implements Runnable {
+    
+        private Component c;
+        private boolean visible;
+        
+        public VisibilityChanger(Component c, boolean visible) {
+            this.c = c; this.visible = visible;
+            // Preposterous!
+            java.awt.EventQueue.invokeLater( this );
+        }
+
+        public void run() {
+            if(c != null)
+                c.setVisible( visible );
+        }
+    
+}



From krater at mail.berlios.de  Sun Oct 22 16:17:43 2006
From: krater at mail.berlios.de (krater at mail.berlios.de)
Date: Sun, 22 Oct 2006 16:17:43 +0200
Subject: [Plantlore-dev] r856 - in trunk/src/net/sf/plantlore: client
	client/login client/overview client/overview/tree
	common/exception config l10n server
Message-ID: <200610221417.k9MEHhvd003572@sheep.berlios.de>

Author: krater
Date: 2006-10-22 16:17:41 +0200 (Sun, 22 Oct 2006)
New Revision: 856

Added:
   trunk/src/net/sf/plantlore/client/overview/DefaultValues.java
Removed:
   trunk/src/net/sf/plantlore/client/overview/InterestingFields.java
Modified:
   trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
   trunk/src/net/sf/plantlore/client/login/Login.java
   trunk/src/net/sf/plantlore/client/overview/AddEdit.java
   trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
   trunk/src/net/sf/plantlore/client/overview/AddEditView.form
   trunk/src/net/sf/plantlore/client/overview/AddEditView.java
   trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.form
   trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.java
   trunk/src/net/sf/plantlore/common/exception/DBLayerException.java
   trunk/src/net/sf/plantlore/config/log4j.properties
   trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
   trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
Log:
Login throws more informative exceptions. It is possible to recognize whether the database is not running or the password or the user name is incorrect. The DatabaseLayerException was improved in order to achieve this functionality.

Add dialog can remember default values and restore them when reloaded or asked to. There is another RFE (to delete some parts of the add dialog - it should be done carefully so as not to clash with the mechanism that restores the default values). Edit dialog is not affected by this change.

Habitat tree allows the User to open the Add dialog (popup menu created by Jakub Kotowski was bound to the tree). It seems to work flawlessly.


InterestingFields.java renamed to DefaultValues.java

HibernateDBLayer contains a bug (more in the bug track list on Berlios).


Modified: trunk/src/net/sf/plantlore/client/AppCoreCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/AppCoreCtrl.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -1065,7 +1065,7 @@
                             DefaultExceptionHandler.handle(view,ex);
                             return;
                         }
-                        addView.loadComponentData();
+                        addView.loadComponentData(false);
                         addView.setVisible(true);   
                     }//if ADD
                     if (message.equals("DELETE")) {
@@ -1878,7 +1878,8 @@
 //                                view.overviewScrollPane.addComponentListener(overviewResizeListener);
 
                                 /*-------------------------------------------------------------------
-                                 *  This may no longer be necessary:
+                                 *  Notify the rest of the application that the database
+                                 * layer has chaged.
                                  *------------------------------------------------------------------*/
                 logger.debug("Distributing the new database layer to:");
                 logger.debug(" # export ");

Modified: trunk/src/net/sf/plantlore/client/login/Login.java
===================================================================
--- trunk/src/net/sf/plantlore/client/login/Login.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/login/Login.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -285,6 +285,7 @@
 	 * of the database layer a little bit easier. 
 	 * 
 	 * @author Erik Kratochv?l (discontinuum at gmail.com)
+         * @author Jakub Kotowski (proper use of PostTaskAction)
 	 * @since 2006-08-30
 	 */
 	private class ConnectionTask extends Task {

Modified: trunk/src/net/sf/plantlore/client/overview/AddEdit.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEdit.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/AddEdit.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -7,19 +7,24 @@
 
 package net.sf.plantlore.client.overview;
 
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
 import java.rmi.RemoteException;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.Hashtable;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Observable;
 import java.util.Set;
-import javax.swing.JOptionPane;
-import net.sf.plantlore.client.*;
 import net.sf.plantlore.common.DBLayerUtils;
 import net.sf.plantlore.common.Pair;
 import net.sf.plantlore.common.PlantloreConstants;
@@ -34,7 +39,6 @@
 import net.sf.plantlore.common.record.Publication;
 import net.sf.plantlore.common.record.Record;
 import net.sf.plantlore.common.record.Territory;
-import net.sf.plantlore.common.record.User;
 import net.sf.plantlore.common.record.NearestVillage;
 import net.sf.plantlore.l10n.L10n;
 import net.sf.plantlore.middleware.DBLayer;
@@ -52,6 +56,7 @@
  * it would work exactly the same as import does.
  *
  * @author fraktalek
+ * @author kaimu (restore/remember default values in the Add dialog for all databases the User works with)
  */
 public class AddEdit extends Observable {
     public static final int WGS84 = 0;
@@ -170,6 +175,10 @@
         this.editMode = editMode;
         logger = Logger.getLogger(this.getClass().getPackage().getName());      
         occurrenceTableModel = new OccurrenceTableModel();
+        
+        // Load the default values from a file. Should work for the Add mode only!
+        if( !editMode )
+            getDefaultValues( true );
     }
  
     /** Makes the model load data from for the occurrence with id occurrenceId.
@@ -1826,8 +1835,9 @@
         this.setAltitude(newCoordinate[2]);       
     }     
     
-   
     
+    
+    
     public void setIsCancle(boolean isCancle) {
         this.isCancled = isCancle;
     }
@@ -1835,6 +1845,114 @@
     public boolean getIsCancle() {
         return this.isCancled;
     }
+    
+    
+    
+    
+    /*----------------------------------------------------------------------------------------
+     * Save and load the default values from a separate configuration file.
+     *
+     *----------------------------------------------------------------------------------------*/
+    private String defaultValuesFileName; {
+        String userHome = System.getProperty("user.home"),
+        osName = System.getProperty("os.name"),
+        plantloreDirName = (osName.equals("Linux") ? "." : "") + net.sf.plantlore.client.Plantlore.PLANTLORE, 
+        plantloreConfDir = userHome+File.separator+plantloreDirName;
+
+        File plantloreConfDirFile = new File(plantloreConfDir);
+        if (!plantloreConfDirFile.exists())
+                plantloreConfDirFile.mkdir();
+
+        defaultValuesFileName = plantloreConfDir + File.separator + "add-default";
+    }
+    
+    
+    
+    /*
+     * The hashtable stores default values for different databases (these databases are
+     * recognized by their Unique Identifier).
+     *
+     * Thus the default values may differ for each database the User works with.
+     * It was a necessary step because some of the stored values may not be in the other database at all.
+     */
+    private Hashtable<String, DefaultValues> storedValues = new Hashtable<String, DefaultValues>(8);
+
+    
+    /**
+     * Load the table with default values.
+     */
+    private void load()
+    throws IOException, ClassNotFoundException {
+        logger.debug("Loading the list with default values.");
+        ObjectInputStream ois = new ObjectInputStream( new FileInputStream(defaultValuesFileName) );
+        storedValues = (Hashtable<String, DefaultValues>) ois.readObject();
+        ois.close();
+        
+        System.out.println("~~~ LIST OF KEYS " + storedValues.keySet());
+    }
+
+    /**
+     * Store the table with default values.
+     */
+    private void save()
+    throws IOException {
+        logger.debug("Saving the list with default values.");
+        ObjectOutputStream oos = new ObjectOutputStream( new FileOutputStream(defaultValuesFileName) );
+        oos.writeObject( storedValues );
+        oos.close();
+    }
+    
+    
+
+    public void setDefaultValues(DefaultValues defaultValues) {
+        try {
+             // Gather the information from dialogs.
+            String databaseID = database.getUniqueDatabaseIdentifier();
+            storedValues.remove( databaseID );
+            if(defaultValues != null)
+                storedValues.put( databaseID, defaultValues );
+            // Store them.
+            save();
+        } catch(Exception e) {
+            logger.error("Unable to remember default values! " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+    
+    
+    public DefaultValues getDefaultValues(boolean reload) {
+        try {
+            if(reload)
+                load();
+            if(database == null)
+                return null;
+            String databaseID = database.getUniqueDatabaseIdentifier();
+            return storedValues.get( databaseID );            
+        } catch(Exception e) {
+            logger.error("Unable to restore default values! " + e.getMessage());
+            e.printStackTrace();
+        }
+        return null; 
+    }
+    
+    
+    public void restoreDefaultValuesInView() {
+        setChanged();
+        notifyObservers( getDefaultValues(false) );
+    }
+
+    
+
+
+    /* 
+     *
+     * This `Netbeans 5.0` is a real shit . Thank God to IBM for their vastly superior Eclipse 3.1
+     * What Netbeans cannot do properly:
+     * 1. indent the code automatically (when inserted...),
+     * 2. find usages (invoked on a method definition)
+     * 3. refactor method names
+     *
+     */
 }
 
 

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditCtrl.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -69,7 +69,7 @@
 /**
  *
  * @author reimei
- *@author kaimu
+ * @author kaimu (remember/restore default values)
  */
 public class AddEditCtrl {
     private Logger logger;
@@ -83,8 +83,6 @@
     public final static int MAXIMUM_INTEGER_DIGITS = 9;
     private final static Color COLOR_INVALID = Color.RED;
     
-    private RememberDefaultValuesAction defaults = new RememberDefaultValuesAction();
-    
     //--------------MODELS AND VIEWS THIS CONTROLLER CREATES-----------------
     private ChecklistView checklistView;
     
@@ -148,8 +146,16 @@
         view.settingsButton.setAction(new SettingsAction());
         view.gpsChangeButton.setAction(new ChangeCoordinateSystemAction());
         view.authButton.setAction(new AuthorManagerAction());
-        view.rememberButton.setAction( defaults );
+        view.rememberButton.setAction( new RememberDefaultValuesAction() );
+        view.restoreButton.setAction( new RestoreDefaultValuesAction() );
 //        view.preloadAuthorsCheckBox.addActionListener(new PreloadCheckBox());
+        
+        
+        /*
+         * AddEditView is constructed - this may be a perfect time to preload some default values.
+         * However it will not help us when another database is opened :(
+         */
+        
     }
     
     
@@ -725,7 +731,7 @@
                     Task task = model.storeRecord(true);
                     /*
                      * The following announcement should be removed (it was a RFE)..
-                     *
+                     */
                     task.setPostTaskAction(new PostTaskAction() {
                         public void afterStopped(Object value) {
                             SwingUtilities.invokeLater(new Runnable() {
@@ -736,9 +742,9 @@
                         }
                     });
                     Dispatcher.getDispatcher().dispatch(task, view, false);
-                     *
-                     */
+                     /**/
                     //view.setVisible(false);
+
                 }
             } catch (RemoteException ex) {
                 logger.error("Remote problem: "+ex);
@@ -857,57 +863,14 @@
      */
     class RememberDefaultValuesAction extends StandardAction {
         
-        private String defaultValuesFileName; {
-		String userHome = System.getProperty("user.home"),
-		osName = System.getProperty("os.name"),
-		plantloreDirName = (osName.equals("Linux") ? "." : "") + net.sf.plantlore.client.Plantlore.PLANTLORE, 
-		plantloreConfDir = userHome+File.separator+plantloreDirName;
-		
-		File plantloreConfDirFile = new File(plantloreConfDir);
-		if (!plantloreConfDirFile.exists())
-			plantloreConfDirFile.mkdir();
-		
-		defaultValuesFileName = plantloreConfDir + File.separator + "add-default";
-	}
-        
-        /*
-         * The hashtable stores default values for different databases (these databases are
-         * recognized by their Unique Identifier).
-         *
-         * Thus the default values may differ for each database the User works with.
-         * It was a necessary step because some of the stored values may not be in the other database at all.
-         */
-        private Hashtable<String, InterestingFields> storedValues = new Hashtable<String, InterestingFields>(8);
-        
         /**
          * Create a new Action that is capable of remembering the list of default values.
-         * Also note that when first constructed it restores the state of the dialog to its previous state.
          */
         RememberDefaultValuesAction() {
             super("Add.Remember");
         }
 
         /**
-         * Load the table with default values.
-         */
-        private void load()
-        throws IOException, ClassNotFoundException {
-		ObjectInputStream ois = new ObjectInputStream( new FileInputStream(defaultValuesFileName) );
-		storedValues = (Hashtable<String, InterestingFields>) ois.readObject();
-		ois.close();
-	}
-            
-        /**
-         * Store the table with default values.
-         */
-        private void save()
-        throws IOException {
-		ObjectOutputStream oos = new ObjectOutputStream( new FileOutputStream(defaultValuesFileName) );
-		oos.writeObject( storedValues );
-		oos.close();
-	}
-          
-        /**
          * @return null if the string is null or empty (ie. "")
          */
         private String evaluate(String s) {
@@ -925,140 +888,147 @@
             return (Pair<String, Integer>) o;
         }
         
+        
         /**
-         * Restore the state of the most important fields.
+         * Forget the state of the most important fields.
          */
-        public void restore(boolean reload) {
-            try {
-                if(reload)
-                    load();
-                
-                if( storedValues == null )
-                    // There are no stored values yet.
-                    storedValues = new Hashtable<String, InterestingFields>(8);
+        public void forget() {
+            model.setDefaultValues( null );
+        }
 
-                // Look for default values that were saved for the database we are currently working with.
-                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                if( databaseID == null)
-                    // We are propably not connected to a database yet. This should never happen.
-                    return;
+        /**
+         * Take action = remember the state of fields.
+         */
+        public void actionPerformed(ActionEvent e) {
+            logger.debug("Trying to memorize the default values for this dialog.");
+            
+            DefaultValues defaults = new DefaultValues();
 
-                // Obtain the default values.
-                InterestingFields defaults = storedValues.get( databaseID );
-                if( defaults == null)
-                    // No default values stored for this particular database. Never mind.
-                    return;
+            defaults.territory = evaluate( view.territoryNameCombo.getSelectedItem() );
+            defaults.phytochorion = evaluate( view.phytNameCombo.getSelectedItem() );
+            defaults.town = evaluate( view.townComboBox.getSelectedItem() );
+            defaults.publication = evaluate( view.publicationCombo.getSelectedItem() );
+            defaults.project = evaluate( view.projectCombo.getSelectedItem() );
+            defaults.quadrant = evaluate( view.quadrantTextField.getText() );
+            defaults.country = evaluate( (String) view.phytCountryCombo.getSelectedItem() );
+            defaults.herbarium = evaluate( view.herbariumTextField.getText() );
+            defaults.source = evaluate( (String) view.sourceCombo.getSelectedItem() );
+            defaults.latitude = evaluate( view.latitudeTextField.getText() );
+            defaults.longitude = evaluate( view.longitudeTextField.getText() );
+            defaults.altitude = evaluate( view.altitudeTextField.getText() ); 
+            defaults.time = evaluate( view.timeTextField.getText() );
+            defaults.day = evaluate( view.dayTextField.getText() );
+            defaults.month = view.monthChooser.getMonth();
+            defaults.year = (Integer) view.yearSpinner.getValue();
+            defaults.description = evaluate( view.descriptionArea.getText() );
+            defaults.locationNote = evaluate( view.locationNoteArea.getText() );
+            defaults.occurrenceNote = evaluate( view.occurrenceNoteArea.getText() );
 
-                // Now, do some reviving.
-                // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
-                // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
-                if(defaults.territory != null)
-                    view.territoryNameCombo.setSelectedItem( defaults.territory );
-                if(defaults.phytochorion != null)
-                    view.phytNameCombo.setSelectedItem( defaults.phytochorion );
-                if(defaults.town != null)
-                    view.townComboBox.setSelectedItem( defaults.town );
-                if(defaults.project != null)
-                    view.projectCombo.setSelectedItem( defaults.project );
-                if(defaults.publication != null)
-                    view.publicationCombo.setSelectedItem( defaults.publication );
+            model.setDefaultValues( defaults );
+        }
+    }
+    
 
-                if(defaults.quadrant != null)
-                    view.quadrantTextField.setText( defaults.quadrant );
-                if(defaults.country != null)
-                    view.phytCountryCombo.setSelectedItem( defaults.country );
-                if(defaults.herbarium != null)
-                    view.herbariumTextField.setText( defaults.herbarium );
-                if(defaults.source != null)
-                    view.sourceCombo.setSelectedItem(defaults.source);
-                if(defaults.latitude != null)
-                    view.latitudeTextField.setText( defaults.latitude );
-                if(defaults.altitude != null)
-                    view.altitudeTextField.setText( defaults.altitude );
-                if(defaults.longitude != null)
-                    view.longitudeTextField.setText( defaults.longitude );
-                if(defaults.time != null)
-                    view.timeTextField.setText( defaults.time );
-                if(defaults.month != null)
-                    view.monthChooser.setMonth( defaults.month );
-                if(defaults.day != null)
-                    view.dayTextField.setText( defaults.day );
-                if(defaults.year != null)
-                    view.yearSpinner.setValue( defaults.year );
-
-                if(defaults.description != null)
-                    view.descriptionArea.setText( defaults.description );
-                if(defaults.locationNote != null)
-                    view.locationNoteArea.setText( defaults.locationNote );
-                if(defaults.occurrenceNote != null)
-                    view.occurrenceNoteArea.setText( defaults.occurrenceNote );
-            } catch (Exception e) {
-                logger.error("Unable to restore default values! " + e.getMessage());
-            }
-                    
+    /**
+     * This action restores the default values in the dialog.
+     *
+     * @author Erik Kratochv?l
+     */
+    class RestoreDefaultValuesAction extends StandardAction {
+        
+        /**
+         * Create a new Action that is capable of remembering the list of default values.
+         */
+        RestoreDefaultValuesAction() {
+            super("Add.Restore");
         }
+
         
         /**
-         * Remember the state of the most important fields.
+         * Take action = restore the state of fields.
          */
-        public void remember() {
-            try {
-                // Gather the information from dialogs.
-                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                storedValues.remove( databaseID );
-                InterestingFields defaults = new InterestingFields();
+        public void actionPerformed(ActionEvent e) {
+            logger.debug("Trying to restore the default values of this dialog.");
+            
+            // Obtain the default values.
+            DefaultValues defaults = model.getDefaultValues( false );
+            if( defaults == null)
+                // No default values stored for this particular database. Never mind.
+                return;
 
-                defaults.territory = evaluate( view.territoryNameCombo.getSelectedItem() );
-                defaults.phytochorion = evaluate( view.phytNameCombo.getSelectedItem() );
-                defaults.town = evaluate( view.townComboBox.getSelectedItem() );
-                defaults.publication = evaluate( view.publicationCombo.getSelectedItem() );
-                defaults.project = evaluate( view.projectCombo.getSelectedItem() );
-                defaults.quadrant = evaluate( view.quadrantTextField.getText() );
-                defaults.country = evaluate( (String) view.phytCountryCombo.getSelectedItem() );
-                defaults.herbarium = evaluate( view.herbariumTextField.getText() );
-                defaults.source = evaluate( (String) view.sourceCombo.getSelectedItem() );
-                defaults.latitude = evaluate( view.latitudeTextField.getText() );
-                defaults.longitude = evaluate( view.longitudeTextField.getText() );
-                defaults.altitude = evaluate( view.altitudeTextField.getText() ); 
-                defaults.time = evaluate( view.timeTextField.getText() );
-                defaults.day = evaluate( view.dayTextField.getText() );
-                defaults.month = view.monthChooser.getMonth();
-                defaults.year = (Integer) view.yearSpinner.getValue();
-                defaults.description = evaluate( view.descriptionArea.getText() );
-                defaults.locationNote = evaluate( view.locationNoteArea.getText() );
-                defaults.occurrenceNote = evaluate( view.occurrenceNoteArea.getText() );
+            // Now, do some reviving.
+            // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
+            // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
+            if(defaults.territory != null)
+                view.territoryNameCombo.setSelectedItem( defaults.territory );
+            if(defaults.phytochorion != null)
+                view.phytNameCombo.setSelectedItem( defaults.phytochorion );
+            if(defaults.town != null)
+                view.townComboBox.setSelectedItem( defaults.town );
+            if(defaults.project != null)
+                view.projectCombo.setSelectedItem( defaults.project );
+            if(defaults.publication != null)
+                view.publicationCombo.setSelectedItem( defaults.publication );
 
-                storedValues.put( databaseID, defaults );
-                // Store them.
-                save(); 
-            } catch(Exception e) {
-                //logger.error("Unable to remember default values! " + e.getMessage());
-                e.printStackTrace();
-            }
+            if(defaults.quadrant != null)
+                view.quadrantTextField.setText( defaults.quadrant );
+            if(defaults.country != null)
+                view.phytCountryCombo.setSelectedItem( defaults.country );
+            if(defaults.herbarium != null)
+                view.herbariumTextField.setText( defaults.herbarium );
+            if(defaults.source != null)
+                view.sourceCombo.setSelectedItem(defaults.source);
+            if(defaults.latitude != null)
+                view.latitudeTextField.setText( defaults.latitude );
+            if(defaults.altitude != null)
+                view.altitudeTextField.setText( defaults.altitude );
+            if(defaults.longitude != null)
+                view.longitudeTextField.setText( defaults.longitude );
+            if(defaults.time != null)
+                view.timeTextField.setText( defaults.time );
+            if(defaults.month != null)
+                view.monthChooser.setMonth( defaults.month );
+            if(defaults.day != null)
+                view.dayTextField.setText( defaults.day );
+            if(defaults.year != null)
+                view.yearSpinner.setValue( defaults.year );
+
+            if(defaults.description != null)
+                view.descriptionArea.setText( defaults.description );
+            if(defaults.locationNote != null)
+                view.locationNoteArea.setText( defaults.locationNote );
+            if(defaults.occurrenceNote != null)
+                view.occurrenceNoteArea.setText( defaults.occurrenceNote );
+
         }
+    }
+    
+    
+    /**
+     * This action throws away the default values in the dialog.
+     * Currently unused.
+     *
+     * @author Erik Kratochv?l
+     */
+    class ForgetDefaultValuesAction extends StandardAction {
         
         /**
-         * Forget the state of the most important fields.
+         * Create a new Action that is capable of forgeting the list of default values.
          */
-        public void forget() {
-            try {
-                String databaseID = model.getDatabase().getUniqueDatabaseIdentifier();
-                storedValues.remove( databaseID );
-                save();
-            } catch(Exception e) {
-                logger.error("Unable to forget default values! " + e.getMessage());
-            }
+        ForgetDefaultValuesAction() {
+            super("Add.Forget");
         }
 
         /**
-         * Take action = remember the state of fields.
+         * Take action = forget the state of fields.
          */
         public void actionPerformed(ActionEvent e) {
-            logger.debug("Trying to memorize the default values for this dialog.");
-            remember();
+            logger.debug("Trying to forget the default values for this dialog.");
+            model.setDefaultValues( null );
         }
     }
 
+
         
     
 }

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.form	2006-10-22 14:17:41 UTC (rev 856)
@@ -1048,9 +1048,11 @@
                           <Component id="authButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="rememberButton" linkSize="12" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace max="-2" attributes="0"/>
+                          <EmptySpace min="-2" pref="4" max="-2" attributes="0"/>
+                          <Component id="restoreButton" linkSize="12" min="-2" max="-2" attributes="0"/>
+                          <EmptySpace min="-2" pref="18" max="-2" attributes="0"/>
                           <Component id="requiredInfoLabel" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="325" max="32767" attributes="0"/>
+                          <EmptySpace pref="226" max="32767" attributes="0"/>
                           <Component id="okButton" linkSize="12" min="-2" max="-2" attributes="0"/>
                           <EmptySpace max="-2" attributes="0"/>
                           <Component id="cancelButton" linkSize="12" min="-2" max="-2" attributes="0"/>
@@ -1067,9 +1069,10 @@
                               <Component id="settingsButton" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="cancelButton" linkSize="13" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="okButton" linkSize="13" alignment="3" min="-2" max="-2" attributes="0"/>
-                              <Component id="requiredInfoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="authButton" alignment="3" min="-2" max="-2" attributes="0"/>
                               <Component id="rememberButton" alignment="3" min="-2" max="-2" attributes="0"/>
+                              <Component id="restoreButton" alignment="3" min="-2" max="-2" attributes="0"/>
+                              <Component id="requiredInfoLabel" alignment="3" min="-2" max="-2" attributes="0"/>
                           </Group>
                           <EmptySpace pref="16" max="32767" attributes="0"/>
                       </Group>
@@ -1128,11 +1131,21 @@
                 <Component class="javax.swing.JButton" name="rememberButton">
                   <Properties>
                     <Property name="text" type="java.lang.String" value="rem"/>
+                    <Property name="actionCommand" type="java.lang.String" value="REMEMBER"/>
                   </Properties>
                   <AuxValues>
                     <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
                   </AuxValues>
                 </Component>
+                <Component class="javax.swing.JButton" name="restoreButton">
+                  <Properties>
+                    <Property name="text" type="java.lang.String" value="res"/>
+                    <Property name="actionCommand" type="java.lang.String" value="RESTORE"/>
+                  </Properties>
+                  <AuxValues>
+                    <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
+                  </AuxValues>
+                </Component>
               </SubComponents>
             </Container>
             <Container class="javax.swing.JPanel" name="extendedPanel">

Modified: trunk/src/net/sf/plantlore/client/overview/AddEditView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/AddEditView.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -48,11 +48,13 @@
 import net.sf.plantlore.common.record.Habitat;
 import net.sf.plantlore.common.record.Occurrence;
 import net.sf.plantlore.l10n.L10n;
+import net.sf.plantlore.middleware.DBLayer;
 import org.apache.log4j.Logger;
 
 /**
  *
- * @author  reimei
+ * @author reimei
+ * @author kaimu (remember/restore default values)
  */
 public class AddEditView extends javax.swing.JDialog implements Observer {
     private Logger logger;
@@ -97,6 +99,13 @@
         
         extendedPanel.setVisible(visible);
         setLocationRelativeTo(parent);
+        
+        // Do not show the Remember/Restore buttons in the Edit mode...
+        if(inEditMode) {
+            rememberButton.setVisible(false);
+            restoreButton.setVisible(false);
+        }
+        
         this.pack();
     }
     
@@ -183,6 +192,7 @@
         requiredInfoLabel = new javax.swing.JLabel();
         authButton = new javax.swing.JButton();
         rememberButton = new javax.swing.JButton();
+        restoreButton = new javax.swing.JButton();
         extendedPanel = new javax.swing.JPanel();
         jScrollPane6 = new javax.swing.JScrollPane();
         occurrenceTable = new javax.swing.JTable();
@@ -649,7 +659,11 @@
         authButton.setText("aut");
 
         rememberButton.setText("rem");
+        rememberButton.setActionCommand("REMEMBER");
 
+        restoreButton.setText("res");
+        restoreButton.setActionCommand("RESTORE");
+
         org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
         buttonPanel.setLayout(buttonPanelLayout);
         buttonPanelLayout.setHorizontalGroup(
@@ -663,16 +677,18 @@
                 .add(authButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(rememberButton)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
+                .add(4, 4, 4)
+                .add(restoreButton)
+                .add(18, 18, 18)
                 .add(requiredInfoLabel)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 325, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 226, Short.MAX_VALUE)
                 .add(okButton)
                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                 .add(cancelButton)
                 .addContainerGap())
         );
 
-        buttonPanelLayout.linkSize(new java.awt.Component[] {authButton, cancelButton, helpButton, okButton, rememberButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
+        buttonPanelLayout.linkSize(new java.awt.Component[] {authButton, cancelButton, helpButton, okButton, rememberButton, restoreButton, settingsButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);
 
         buttonPanelLayout.setVerticalGroup(
             buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
@@ -683,9 +699,10 @@
                     .add(settingsButton)
                     .add(cancelButton)
                     .add(okButton)
-                    .add(requiredInfoLabel)
                     .add(authButton)
-                    .add(rememberButton))
+                    .add(rememberButton)
+                    .add(restoreButton)
+                    .add(requiredInfoLabel))
                 .addContainerGap(16, Short.MAX_VALUE))
         );
 
@@ -873,8 +890,18 @@
             else latitudeTextField.setText("");
     }
     
-    public void loadComponentData()
+    
+    
+    public void loadComponentData() {
+        loadComponentData(true);
+    }
+    
+    public void loadComponentData(boolean alsoRestoreDefaultValues)
     {
+        
+        logger.debug("================ LOAD COMPONENT DATA ===================");
+        
+        
         switch (model.getCoordinateSystem()) {
             case AddEdit.WGS84:
                 coordinateSystemLabel.setText(L10n.getString("Overview.CoordinateSystemLabel")+": WGS-84");
@@ -956,8 +983,20 @@
             dayTextField.setText(""+model.getDay());
         else
             dayTextField.setText("");
+        
+        /*-------------------------------------------------------------------------------------------
+         * Try to preload the default values for this dialog 
+         * that the User might have saved earlier :)
+         *-------------------------------------------------------------------------------------------*/
+        if(alsoRestoreDefaultValues) {
+            logger.debug("Restoring the default values in this Add dialog.");
+            restoreDefaultValuesInThisDialog( model.getDefaultValues(false) );
+        }
+        
+        
     }//loadComponentData
     
+    
     public void clearComponentData() {
         //if ( ! preloadAuthorsCheckBox.isSelected() ) {
             resetAuthorModel(); initAuthorTable();
@@ -1136,8 +1175,69 @@
             }
         });
     }
+    
+    
+    private void restoreDefaultValuesInThisDialog(DefaultValues defaultValues) {
+        // Default Values reviving.
+        // The trouble is, that sometimes (mostly with the fields monitored with focus listeners) the model would have to be
+        // notified manually. Shame (that Swing doesn't provide a unified interface for some changes..). Let's go!
+        if(defaultValues == null)
+            return;
+        
+        if(defaultValues.territory != null)
+            territoryNameCombo.setSelectedItem( defaultValues.territory );
+        if(defaultValues.phytochorion != null)
+            /*if(phytNameCombo instanceof AutoComboBoxNG3)
+                ((AutoComboBoxNG3)phytNameCombo).setValue( defaultValues.phytochorion );
+            else*/
+                phytNameCombo.setSelectedItem( defaultValues.phytochorion );
+        if(defaultValues.town != null)
+            townComboBox.setSelectedItem( defaultValues.town );
+        if(defaultValues.project != null)
+            projectCombo.setSelectedItem( defaultValues.project );
+        if(defaultValues.publication != null)
+            publicationCombo.setSelectedItem( defaultValues.publication );
 
+        if(defaultValues.quadrant != null)
+            quadrantTextField.setText( defaultValues.quadrant );
+        if(defaultValues.country != null)
+            phytCountryCombo.setSelectedItem( defaultValues.country );
+        if(defaultValues.herbarium != null)
+            herbariumTextField.setText( defaultValues.herbarium );
+        if(defaultValues.source != null)
+            sourceCombo.setSelectedItem(defaultValues.source);
+        if(defaultValues.latitude != null)
+            latitudeTextField.setText( defaultValues.latitude );
+        if(defaultValues.altitude != null)
+            altitudeTextField.setText( defaultValues.altitude );
+        if(defaultValues.longitude != null)
+            longitudeTextField.setText( defaultValues.longitude );
+        if(defaultValues.time != null)
+            timeTextField.setText( defaultValues.time );
+        if(defaultValues.month != null)
+            monthChooser.setMonth( defaultValues.month );
+        if(defaultValues.day != null)
+            dayTextField.setText( defaultValues.day );
+        if(defaultValues.year != null)
+            yearSpinner.setValue( defaultValues.year );
+
+        if(defaultValues.description != null)
+            descriptionArea.setText( defaultValues.description );
+        if(defaultValues.locationNote != null)
+            locationNoteArea.setText( defaultValues.locationNote );
+        if(defaultValues.occurrenceNote != null)
+            occurrenceNoteArea.setText( defaultValues.occurrenceNote );
+    }
+
+    
     public void update(Observable o, Object arg) {
+        
+        if(arg instanceof DefaultValues) {
+            logger.debug("Restoring default values as requested (in update).");
+            restoreDefaultValuesInThisDialog( (DefaultValues) arg );        
+        }
+            
+        
         if (arg instanceof Pair) {
             String s = ((Pair<String,Integer>)arg).getFirst();
             int i = ((Pair<String,Integer>)arg).getSecond(); 
@@ -1339,6 +1439,7 @@
     protected javax.swing.JTextField quadrantTextField;
     protected javax.swing.JButton rememberButton;
     private javax.swing.JLabel requiredInfoLabel;
+    protected javax.swing.JButton restoreButton;
     protected javax.swing.JButton settingsButton;
     protected javax.swing.JComboBox sourceCombo;
     protected javax.swing.JLabel sourceLabel;

Added: trunk/src/net/sf/plantlore/client/overview/DefaultValues.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/DefaultValues.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/DefaultValues.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -0,0 +1,18 @@
+package net.sf.plantlore.client.overview;
+
+import net.sf.plantlore.common.Pair;
+
+/**
+ * The holder object of most important fields in the dialog whose state should be stored.
+ * The list of currently selected authors is not saved because that component may be a subject to change.
+ *
+ * This class must cannot be an inner class because then that inner class would become
+ * an object of serialization as well!
+ *
+ * @author kaimu
+ */
+public class DefaultValues implements java.io.Serializable {
+    public Pair<String, Integer> territory, phytochorion, town, publication, project;
+    public String description, locationNote, occurrenceNote, latitude, longitude, altitude, country, time, day, quadrant, herbarium, source;
+    public Integer month, year;
+}
\ No newline at end of file

Deleted: trunk/src/net/sf/plantlore/client/overview/InterestingFields.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/InterestingFields.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/InterestingFields.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -1,18 +0,0 @@
-package net.sf.plantlore.client.overview;
-
-import net.sf.plantlore.common.Pair;
-
-/**
- * The holder object of most important fields in the dialog whose state should be stored.
- * The list of currently selected authors is not saved because that component may be a subject to change.
- *
- * This class must cannot be an inner class because then that inner class would become
- * an object of serialization as well!
- *
- * @author kaimu
- */
-public class InterestingFields implements java.io.Serializable {
-    public Pair<String, Integer> territory, phytochorion, town, publication, project;
-    public String description, locationNote, occurrenceNote, latitude, longitude, altitude, country, time, day, quadrant, herbarium, source;
-    public Integer month, year;
-}
\ No newline at end of file

Modified: trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.form
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.form	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.form	2006-10-22 14:17:41 UTC (rev 856)
@@ -79,6 +79,11 @@
       <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
       <SubComponents>
         <Component class="javax.swing.JTree" name="habitatTree">
+          <Properties>
+            <Property name="componentPopupMenu" type="javax.swing.JPopupMenu" editor="org.netbeans.modules.form.ComponentChooserEditor">
+              <ComponentRef name="popupMenu"/>
+            </Property>
+          </Properties>
           <AuxValues>
             <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new JTree(model.getTreeModel());"/>
             <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="4"/>
@@ -93,7 +98,7 @@
           <Group type="103" groupAlignment="0" attributes="0">
               <Group type="102" alignment="0" attributes="0">
                   <Component id="searchButton" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace pref="179" max="32767" attributes="0"/>
+                  <EmptySpace pref="209" max="32767" attributes="0"/>
                   <Component id="refreshButton" min="-2" max="-2" attributes="0"/>
               </Group>
           </Group>

Modified: trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.java
===================================================================
--- trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/client/overview/tree/HabitatTreeView.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -62,6 +62,7 @@
 
         deleteMenuItem.setText("Item");
 
+        habitatTree.setComponentPopupMenu(popupMenu);
         jScrollPane1.setViewportView(habitatTree);
 
         searchButton.setText("jButton1");
@@ -74,7 +75,7 @@
             jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
             .add(jPanel1Layout.createSequentialGroup()
                 .add(searchButton)
-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 179, Short.MAX_VALUE)
+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 209, Short.MAX_VALUE)
                 .add(refreshButton))
         );
         jPanel1Layout.setVerticalGroup(

Modified: trunk/src/net/sf/plantlore/common/exception/DBLayerException.java
===================================================================
--- trunk/src/net/sf/plantlore/common/exception/DBLayerException.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/common/exception/DBLayerException.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -83,8 +83,32 @@
         // Better constructor to allow proper exception wrapping.
         public DBLayerException(String message, Throwable originalException) {
         	super(message, originalException);
-        	if(originalException instanceof JDBCException)        	
-        		setError( translateSQLState( ((JDBCException)originalException).getSQLState()), null );
+        	if(originalException instanceof JDBCException) {
+                    setError( translateSQLState( ((JDBCException)originalException).getSQLState()), null );
+                    // Perform a better error recognition here.
+                    // The real reason why the connection was refused is usually wrapped 
+                    // in several other exceptions. 
+                    if( errorCode == ERROR_CONNECT ) {
+                        for(Throwable cause = originalException; cause != null; cause = cause.getCause()) {
+                            String info = cause.getMessage();
+                            if(info == null)
+                                continue;
+                            if( info.toLowerCase().contains("password") ) {
+                                //logger.info("The particular reason the connection was refused: " + info);
+                                errorCode = ERROR_PASSWORD;
+                                errorInfo = L10n.getString("DBLayer.Error.Password");
+                                return;
+                            }
+                            else if( info.toLowerCase().contains("username") ) {
+                                //logger.info("The particular reason the connection was refused: " + info);
+                                errorCode = ERROR_PASSWORD;
+                                errorInfo = L10n.getString("DBLayer.Error.Username");
+                                return;
+                            }
+                        }
+                    }
+                }
+                
         }
         
         // Better constructor to allow proper exception wrapping.
@@ -210,7 +234,7 @@
             
             // Connection exception - Connection does not exist, was interrupted or cannot be established
             if (errorClass.equals("08")) {
-            	/* POINTLESS :(
+            	/* POINTLESS :( - these numbers are database specific...
             	if("004".equals(errorDetail))
             		return ERROR_USERNAME;
             	if ("005".equals(errorDetail))

Modified: trunk/src/net/sf/plantlore/config/log4j.properties
===================================================================
--- trunk/src/net/sf/plantlore/config/log4j.properties	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/config/log4j.properties	2006-10-22 14:17:41 UTC (rev 856)
@@ -1,5 +1,5 @@
 ### set log levels - for more verbose logging change 'info' to 'debug' ###
-log4j.rootLogger=warn, file
+log4j.rootLogger=debug, stdout
 
 ### direct log messages to stdout ###
 log4j.appender.stdout=org.apache.log4j.ConsoleAppender

Modified: trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties
===================================================================
--- trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/l10n/Plantlore_cs_CZ.properties	2006-10-22 14:17:41 UTC (rev 856)
@@ -5,7 +5,7 @@
 Overview.MenuPrint = &Tisk
 Overview.MenuPrintTT = Vytiskne ozna\u010den\u00e9 z\u00e1znamy
 Overview.MenuExit = &Konec
-Overview.MenuLogin = Logi&n
+Overview.MenuLogin = &P\u0159ihl\u00E1sit
 Overview.MenuHelp = &N\u00E1pov\u011Bda
 Overview.MenuHelpContents = &Obsah
 Overview.MenuHelpAbout = O &aplikaci
@@ -1452,7 +1452,7 @@
 
 Information.UserCannotEditTitle=Editace u\u017Eivatele
 
-Overview.MenuFileReconnect=Znovu p\u0159ipojit
+Overview.MenuFileReconnect=Obnovit p\u0159ipojen\u00ED
 
 Overview.MenuFileLogoutTT=Odhl\u00E1\u0161en\u00ED od datab\u00E1ze
 
@@ -1750,7 +1750,7 @@
 
 Server.Info.TerminatingServer=Prob\u00EDh\u00E1 zastavov\u00E1n\u00ED serveru...
 
-Overview.MenuFileLogout=Odpojit
+Overview.MenuFileLogout=Odhl\u00E1sit
 
 Overview.MenutFileExit=Konec
 
@@ -1782,13 +1782,13 @@
 
 DBLayer.Error.LoadConfig=Nepoda\u0159ilo se na\u010D\u00EDst konfigura\u010Dn\u00ED soubory datab\u00E1ze.
 
-DBLayer.Error.Connect=Nepoda\u0159ilo se p\u0159ipojit k datab\u00E1zi.\nJe datab\u00E1ze spu\u0161t\u011Bna.
+DBLayer.Error.Connect=Nepoda\u0159ilo se p\u0159ipojit k datab\u00E1zi.\nJe datab\u00E1ze spu\u0161t\u011Bna?
 
 DBLayer.Error.Login=Autorizace se nezda\u0159ila. Neplatn\u00E9 jm\u00E9no nebo heslo
 
-DBLayer.Error.Username=Neexistuj\u00EDc\u00ED u\u017Eivatelsk\u00E9 jm\u00E9no.
+DBLayer.Error.Username=Zkontrolujte pros\u00EDm, zda jste zadali spr\u00E1vn\u00E9\np\u0159ihla\u0161ovac\u00ED \u00FAdaje (platn\u00E9 u\u017E. jm\u00E9no a heslo).
 
-DBLayer.Error.Password=Neplatn\u00E9 heslo.
+DBLayer.Error.Password=Zkontrolujte pros\u00EDm, zda jste zadali spr\u00E1vn\u00E9\np\u0159ihla\u0161ovac\u00ED \u00FAdaje (u\u017E. jm\u00E9no a heslo).
 
 DBLayer.Error.Save=Nepoda\u0159ilo se vlo\u017Eit data do datab\u00E1ze.
 

Modified: trunk/src/net/sf/plantlore/server/HibernateDBLayer.java
===================================================================
--- trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-10-19 15:03:14 UTC (rev 855)
+++ trunk/src/net/sf/plantlore/server/HibernateDBLayer.java	2006-10-22 14:17:41 UTC (rev 856)
@@ -224,11 +224,22 @@
                 // No record in the table - we have to insert it (this is the first time the database is accessed)
                 UnitIdDatabase unitid = new UnitIdDatabase();
                 unitid.setUnitIdDb(UniqueIDGenerator.generate());
-                sess.save(unitid);
+                
                 if (unitid.getUnitIdDb() == null) {
                     logger.error("Failed to generate unique id for the database");
                     throw new DBLayerException(L10n.getString("Error.ConnectionFailed"));
                 } else {
+                    /*
+                     * FIXME: This does not work!!
+                     *
+                     * Every time I open a database (even as an administrator)
+                     * the unique value is not stored! The UnitIdDb table is always empty.
+                     *
+                     * Besides, the unique database identifier should be generated and stored
+                     * right after the database is created, as it is the only time we are perfectly
+                     * sure that we have administrator rights!!
+                     */
+                    sess.save(unitid);
                     this.databaseID = unitid.getUnitIdDb();
                 }
             } else {
@@ -2432,4 +2443,11 @@
 		}
 		return currentlyConnectedUser ; 
 	}
+        
+        
+        /*===============================================================================
+         *  It is most fortunate that God does not grant us every wish.
+         *  For if He did most of my teammates would be pushing up daisies 
+         *  here and there by now. As would all the people that created Swing.
+         *===============================================================================*/
 }



From admin at berlios.de  Sun Oct 22 16:18:35 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 22 Oct 2006 16:18:35 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9231] DBLayer never stores the Unique
	Identifier
Message-ID: <200610221418.k9MEIZkF017415@unicorn.berlios.de>

Bug #9231, was updated on 2006-Oct-22 16:18
Here is a current snapshot of the bug.

Project: Plantlore
Category: DBLayer
Status: Open
Resolution: None
Bug Group: Bug
Priority: 8
Submitted by: krater
Assigned to : tkovarik
Summary: DBLayer never stores the Unique Identifier

Details: 1. The unique identifier that should generated for each database only once is never stored (the UnitID table is always empty)

2. The unique identifier must be generated right after a new database is created! This is the only time we are perfectly sure that we have necessary access rights.

3. There should be no way to alter the value of the unique identifier in the table once the value is generated (ie. no one - not even a superuser - should be able to change that value).

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9231&group_id=5975


From admin at berlios.de  Sun Oct 22 16:26:25 2006
From: admin at berlios.de (admin at berlios.de)
Date: Sun, 22 Oct 2006 16:26:25 +0200 (CEST)
Subject: [Plantlore-dev] [Bug #9176] Add a mechanism that will store default
	values in the dialog
Message-ID: <200610221426.k9MEQPJG018410@unicorn.berlios.de>

Bug #9176, was updated on 2006-Oct-18 16:10
Here is a current snapshot of the bug.

Project: Plantlore
Category: Overview_Add
Status: Open
Resolution: Works For Me
Bug Group: RFE
Priority: 5
Submitted by: krater
Assigned to : krater
Summary: Add a mechanism that will store default values in the dialog

Details: Add a button that will store the state of most important fields in the dialog and restore the state when plantlore is restarted.

Follow-Ups:

Date: 2006-Oct-22 16:26
By: krater

Comment:
The mechanism has been implemented. It has to be tested a little bit more thoroughly.
-------------------------------------------------------

For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=9176&group_id=5975


